{"ast":null,"code":"import{supabase}from'../supabase/config';// Función para generar un ID único de visitante\nconst generateVisitorId=()=>{// Intentar obtener un ID existente del localStorage\nlet visitorId=localStorage.getItem('blog_visitor_id');// Si no existe, crear uno nuevo\nif(!visitorId){visitorId='visitor_'+Date.now()+'_'+Math.random().toString(36).substr(2,9);localStorage.setItem('blog_visitor_id',visitorId);}return visitorId;};// Incrementar vista de un artículo de blog\nexport const incrementBlogView=async blogId=>{try{const visitorId=generateVisitorId();const{data,error}=await supabase.rpc('increment_blog_views',{blog_uuid:blogId,visitor_identifier:visitorId});if(error)throw error;return data;// Retorna true si se incrementó, false si ya existía\n}catch(error){console.error('Error incrementando vista de blog:',error);return false;}};// Obtener estadísticas de vistas de blog\nexport const getBlogViewsStats=async()=>{try{const{data,error}=await supabase.rpc('get_blog_views_stats');if(error)throw error;return data[0]||{total_views:0,total_articles:0,avg_views_per_article:0,total_unique_visitors:0};}catch(error){console.error('Error obteniendo estadísticas de blog:',error);return{total_views:0,total_articles:0,avg_views_per_article:0,total_unique_visitors:0};}};// Obtener artículos de blog más vistos\nexport const getMostViewedBlogArticles=async function(){let limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:10;try{const{data,error}=await supabase.rpc('get_most_viewed_blog_articles',{limit_count:limit});if(error)throw error;return data||[];}catch(error){console.error('Error obteniendo artículos más vistos:',error);return[];}};","map":{"version":3,"names":["supabase","generateVisitorId","visitorId","localStorage","getItem","Date","now","Math","random","toString","substr","setItem","incrementBlogView","blogId","data","error","rpc","blog_uuid","visitor_identifier","console","getBlogViewsStats","total_views","total_articles","avg_views_per_article","total_unique_visitors","getMostViewedBlogArticles","limit","arguments","length","undefined","limit_count"],"sources":["C:/Users/otero/OneDrive/Escritorio/Paginas Web/ri cars automotores/src/services/blogViewsService.js"],"sourcesContent":["import { supabase } from '../supabase/config';\r\n\r\n// Función para generar un ID único de visitante\r\nconst generateVisitorId = () => {\r\n  // Intentar obtener un ID existente del localStorage\r\n  let visitorId = localStorage.getItem('blog_visitor_id');\r\n  \r\n  // Si no existe, crear uno nuevo\r\n  if (!visitorId) {\r\n    visitorId = 'visitor_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\r\n    localStorage.setItem('blog_visitor_id', visitorId);\r\n  }\r\n  \r\n  return visitorId;\r\n};\r\n\r\n// Incrementar vista de un artículo de blog\r\nexport const incrementBlogView = async (blogId) => {\r\n  try {\r\n    const visitorId = generateVisitorId();\r\n    \r\n    const { data, error } = await supabase\r\n      .rpc('increment_blog_views', {\r\n        blog_uuid: blogId,\r\n        visitor_identifier: visitorId\r\n      });\r\n\r\n    if (error) throw error;\r\n    \r\n    return data; // Retorna true si se incrementó, false si ya existía\r\n  } catch (error) {\r\n    console.error('Error incrementando vista de blog:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener estadísticas de vistas de blog\r\nexport const getBlogViewsStats = async () => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .rpc('get_blog_views_stats');\r\n\r\n    if (error) throw error;\r\n    return data[0] || { \r\n      total_views: 0, \r\n      total_articles: 0, \r\n      avg_views_per_article: 0, \r\n      total_unique_visitors: 0 \r\n    };\r\n  } catch (error) {\r\n    console.error('Error obteniendo estadísticas de blog:', error);\r\n    return { \r\n      total_views: 0, \r\n      total_articles: 0, \r\n      avg_views_per_article: 0, \r\n      total_unique_visitors: 0 \r\n    };\r\n  }\r\n};\r\n\r\n// Obtener artículos de blog más vistos\r\nexport const getMostViewedBlogArticles = async (limit = 10) => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .rpc('get_most_viewed_blog_articles', {\r\n        limit_count: limit\r\n      });\r\n\r\n    if (error) throw error;\r\n    return data || [];\r\n  } catch (error) {\r\n    console.error('Error obteniendo artículos más vistos:', error);\r\n    return [];\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,oBAAoB,CAE7C;AACA,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,CAC9B;AACA,GAAI,CAAAC,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAEvD;AACA,GAAI,CAACF,SAAS,CAAE,CACdA,SAAS,CAAG,UAAU,CAAGG,IAAI,CAACC,GAAG,CAAC,CAAC,CAAG,GAAG,CAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,CACnFP,YAAY,CAACQ,OAAO,CAAC,iBAAiB,CAAET,SAAS,CAAC,CACpD,CAEA,MAAO,CAAAA,SAAS,CAClB,CAAC,CAED;AACA,MAAO,MAAM,CAAAU,iBAAiB,CAAG,KAAO,CAAAC,MAAM,EAAK,CACjD,GAAI,CACF,KAAM,CAAAX,SAAS,CAAGD,iBAAiB,CAAC,CAAC,CAErC,KAAM,CAAEa,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAf,QAAQ,CACnCgB,GAAG,CAAC,sBAAsB,CAAE,CAC3BC,SAAS,CAAEJ,MAAM,CACjBK,kBAAkB,CAAEhB,SACtB,CAAC,CAAC,CAEJ,GAAIa,KAAK,CAAE,KAAM,CAAAA,KAAK,CAEtB,MAAO,CAAAD,IAAI,CAAE;AACf,CAAE,MAAOC,KAAK,CAAE,CACdI,OAAO,CAACJ,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC1D,MAAO,MAAK,CACd,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAK,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CAC3C,GAAI,CACF,KAAM,CAAEN,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAf,QAAQ,CACnCgB,GAAG,CAAC,sBAAsB,CAAC,CAE9B,GAAID,KAAK,CAAE,KAAM,CAAAA,KAAK,CACtB,MAAO,CAAAD,IAAI,CAAC,CAAC,CAAC,EAAI,CAChBO,WAAW,CAAE,CAAC,CACdC,cAAc,CAAE,CAAC,CACjBC,qBAAqB,CAAE,CAAC,CACxBC,qBAAqB,CAAE,CACzB,CAAC,CACH,CAAE,MAAOT,KAAK,CAAE,CACdI,OAAO,CAACJ,KAAK,CAAC,wCAAwC,CAAEA,KAAK,CAAC,CAC9D,MAAO,CACLM,WAAW,CAAE,CAAC,CACdC,cAAc,CAAE,CAAC,CACjBC,qBAAqB,CAAE,CAAC,CACxBC,qBAAqB,CAAE,CACzB,CAAC,CACH,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,yBAAyB,CAAG,cAAAA,CAAA,CAAsB,IAAf,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CACxD,GAAI,CACF,KAAM,CAAEb,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAf,QAAQ,CACnCgB,GAAG,CAAC,+BAA+B,CAAE,CACpCc,WAAW,CAAEJ,KACf,CAAC,CAAC,CAEJ,GAAIX,KAAK,CAAE,KAAM,CAAAA,KAAK,CACtB,MAAO,CAAAD,IAAI,EAAI,EAAE,CACnB,CAAE,MAAOC,KAAK,CAAE,CACdI,OAAO,CAACJ,KAAK,CAAC,wCAAwC,CAAEA,KAAK,CAAC,CAC9D,MAAO,EAAE,CACX,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
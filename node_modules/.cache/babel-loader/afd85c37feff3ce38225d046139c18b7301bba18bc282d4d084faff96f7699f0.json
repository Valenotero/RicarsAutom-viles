{"ast":null,"code":"// Servicio de API Local con datos simulados (sin JSON Server)\nconst sampleData = {\n  \"vehicles\": [{\n    \"id\": \"1\",\n    \"brand\": \"Toyota\",\n    \"model\": \"Corolla\",\n    \"year\": 2023,\n    \"kilometers\": 15000,\n    \"price\": 25000,\n    \"priceARS\": 25000000,\n    \"condition\": \"new\",\n    \"transmission\": \"automatic\",\n    \"fuelType\": \"gasoline\",\n    \"color\": \"Blanco\",\n    \"type\": \"sedan\",\n    \"location\": \"Buenos Aires\",\n    \"engine\": \"2.0L\",\n    \"power\": \"150hp\",\n    \"features\": [\"Aire acondicionado\", \"Bluetooth\", \"Cámara de reversa\"],\n    \"images\": [\"https://images.unsplash.com/photo-1549317661-bd32c8ce0db2?w=800\", \"https://images.unsplash.com/photo-1552519507-da3b142c6e3d?w=800\"],\n    \"isFeatured\": true,\n    \"isPromotion\": false,\n    \"views\": 45,\n    \"createdAt\": \"2024-01-15T10:30:00Z\",\n    \"updatedAt\": \"2024-01-15T10:30:00Z\"\n  }, {\n    \"id\": \"2\",\n    \"brand\": \"Honda\",\n    \"model\": \"Civic\",\n    \"year\": 2022,\n    \"kilometers\": 25000,\n    \"price\": 22000,\n    \"priceARS\": 22000000,\n    \"condition\": \"used\",\n    \"transmission\": \"automatic\",\n    \"fuelType\": \"gasoline\",\n    \"color\": \"Negro\",\n    \"type\": \"sedan\",\n    \"location\": \"Buenos Aires\",\n    \"engine\": \"1.8L\",\n    \"power\": \"140hp\",\n    \"features\": [\"Aire acondicionado\", \"Bluetooth\", \"ABS\", \"Airbag\"],\n    \"images\": [\"https://images.unsplash.com/photo-1552519507-da3b142c6e3d?w=800\", \"https://images.unsplash.com/photo-1549317661-bd32c8ce0db2?w=800\"],\n    \"isFeatured\": false,\n    \"isPromotion\": true,\n    \"views\": 32,\n    \"createdAt\": \"2024-01-10T14:20:00Z\",\n    \"updatedAt\": \"2024-01-10T14:20:00Z\"\n  }, {\n    \"id\": \"3\",\n    \"brand\": \"Ford\",\n    \"model\": \"Ranger\",\n    \"year\": 2023,\n    \"kilometers\": 8000,\n    \"price\": 35000,\n    \"priceARS\": 35000000,\n    \"condition\": \"new\",\n    \"transmission\": \"automatic\",\n    \"fuelType\": \"diesel\",\n    \"color\": \"Gris\",\n    \"type\": \"pickup\",\n    \"location\": \"Buenos Aires\",\n    \"engine\": \"3.2L\",\n    \"power\": \"200hp\",\n    \"features\": [\"Aire acondicionado\", \"Bluetooth\", \"Tracción 4x4\", \"Cámara de reversa\"],\n    \"images\": [\"https://images.unsplash.com/photo-1552519507-da3b142c6e3d?w=800\", \"https://images.unsplash.com/photo-1549317661-bd32c8ce0db2?w=800\"],\n    \"isFeatured\": true,\n    \"isPromotion\": false,\n    \"views\": 78,\n    \"createdAt\": \"2024-01-20T09:15:00Z\",\n    \"updatedAt\": \"2024-01-20T09:15:00Z\"\n  }],\n  \"users\": [{\n    \"id\": \"1\",\n    \"email\": \"admin@ricars.com\",\n    \"displayName\": \"Administrador\",\n    \"role\": \"admin\",\n    \"createdAt\": \"2024-01-01T00:00:00Z\"\n  }, {\n    \"id\": \"2\",\n    \"email\": \"cliente@example.com\",\n    \"displayName\": \"Cliente Ejemplo\",\n    \"role\": \"cliente\",\n    \"createdAt\": \"2024-01-05T12:00:00Z\"\n  }],\n  \"statistics\": {\n    \"totalVehicles\": 3,\n    \"totalViews\": 155,\n    \"featuredVehicles\": 2,\n    \"promotionVehicles\": 1\n  }\n};\n\n// Simular base de datos en localStorage\nconst initializeLocalDB = () => {\n  if (!localStorage.getItem('ricars_db')) {\n    localStorage.setItem('ricars_db', JSON.stringify(sampleData));\n  }\n};\n\n// Obtener datos de localStorage\nconst getLocalData = () => {\n  initializeLocalDB();\n  return JSON.parse(localStorage.getItem('ricars_db'));\n};\n\n// Guardar datos en localStorage\nconst saveLocalData = data => {\n  localStorage.setItem('ricars_db', JSON.stringify(data));\n};\n\n// Función helper para simular delay de red\nconst simulateNetworkDelay = () => new Promise(resolve => setTimeout(resolve, 100));\n\n// Servicio de Vehículos\nexport const vehicleService = {\n  // Obtener todos los vehículos con filtros\n  async getVehicles(filters = {}) {\n    await simulateNetworkDelay();\n    const data = getLocalData();\n    let vehicles = data.vehicles;\n\n    // Aplicar filtros\n    if (filters.brand) {\n      vehicles = vehicles.filter(v => v.brand === filters.brand);\n    }\n    if (filters.type) {\n      vehicles = vehicles.filter(v => v.type === filters.type);\n    }\n    if (filters.condition) {\n      vehicles = vehicles.filter(v => v.condition === filters.condition);\n    }\n    if (filters.minPrice) {\n      vehicles = vehicles.filter(v => v.price >= filters.minPrice);\n    }\n    if (filters.maxPrice) {\n      vehicles = vehicles.filter(v => v.price <= filters.maxPrice);\n    }\n    if (filters.search) {\n      const searchTerm = filters.search.toLowerCase();\n      vehicles = vehicles.filter(v => v.brand.toLowerCase().includes(searchTerm) || v.model.toLowerCase().includes(searchTerm));\n    }\n    return vehicles;\n  },\n  // Obtener vehículo por ID\n  async getVehicleById(id) {\n    await simulateNetworkDelay();\n    const data = getLocalData();\n    const vehicle = data.vehicles.find(v => v.id === id);\n    if (!vehicle) {\n      throw new Error('Vehículo no encontrado');\n    }\n\n    // Incrementar vistas\n    await this.incrementViews(id);\n    return vehicle;\n  },\n  // Crear nuevo vehículo\n  async createVehicle(vehicleData) {\n    await simulateNetworkDelay();\n    const data = getLocalData();\n    const newVehicle = {\n      ...vehicleData,\n      id: Date.now().toString(),\n      views: 0,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    data.vehicles.push(newVehicle);\n    saveLocalData(data);\n    return newVehicle;\n  },\n  // Actualizar vehículo\n  async updateVehicle(id, vehicleData) {\n    await simulateNetworkDelay();\n    const data = getLocalData();\n    const vehicleIndex = data.vehicles.findIndex(v => v.id === id);\n    if (vehicleIndex === -1) {\n      throw new Error('Vehículo no encontrado');\n    }\n    const updatedVehicle = {\n      ...data.vehicles[vehicleIndex],\n      ...vehicleData,\n      updatedAt: new Date().toISOString()\n    };\n    data.vehicles[vehicleIndex] = updatedVehicle;\n    saveLocalData(data);\n    return updatedVehicle;\n  },\n  // Eliminar vehículo\n  async deleteVehicle(id) {\n    await simulateNetworkDelay();\n    const data = getLocalData();\n    const vehicleIndex = data.vehicles.findIndex(v => v.id === id);\n    if (vehicleIndex === -1) {\n      throw new Error('Vehículo no encontrado');\n    }\n    data.vehicles.splice(vehicleIndex, 1);\n    saveLocalData(data);\n    return {\n      success: true\n    };\n  },\n  // Incrementar vistas\n  async incrementViews(id) {\n    const data = getLocalData();\n    const vehicleIndex = data.vehicles.findIndex(v => v.id === id);\n    if (vehicleIndex !== -1) {\n      data.vehicles[vehicleIndex].views = (data.vehicles[vehicleIndex].views || 0) + 1;\n      saveLocalData(data);\n    }\n  },\n  // Obtener vehículos destacados\n  async getFeaturedVehicles() {\n    await simulateNetworkDelay();\n    const data = getLocalData();\n    return data.vehicles.filter(v => v.isFeatured);\n  },\n  // Obtener vehículos en promoción\n  async getPromotionVehicles() {\n    await simulateNetworkDelay();\n    const data = getLocalData();\n    return data.vehicles.filter(v => v.isPromotion);\n  },\n  // Obtener vehículos similares\n  async getSimilarVehicles(currentVehicle, limit = 3) {\n    await simulateNetworkDelay();\n    const data = getLocalData();\n    const {\n      brand,\n      type,\n      price\n    } = currentVehicle;\n    return data.vehicles.filter(v => v.id !== currentVehicle.id).filter(v => v.brand === brand || v.type === type).sort((a, b) => Math.abs(a.price - price) - Math.abs(b.price - price)).slice(0, limit);\n  }\n};\n\n// Servicio de Usuarios\nexport const userService = {\n  // Obtener usuario por email\n  async getUserByEmail(email) {\n    await simulateNetworkDelay();\n    const data = getLocalData();\n    return data.users.find(user => user.email === email);\n  },\n  // Crear nuevo usuario\n  async createUser(userData) {\n    await simulateNetworkDelay();\n    const data = getLocalData();\n    const newUser = {\n      ...userData,\n      id: Date.now().toString(),\n      createdAt: new Date().toISOString()\n    };\n    data.users.push(newUser);\n    saveLocalData(data);\n    return newUser;\n  },\n  // Actualizar usuario\n  async updateUser(id, userData) {\n    await simulateNetworkDelay();\n    const data = getLocalData();\n    const userIndex = data.users.findIndex(u => u.id === id);\n    if (userIndex === -1) {\n      throw new Error('Usuario no encontrado');\n    }\n    data.users[userIndex] = {\n      ...data.users[userIndex],\n      ...userData\n    };\n    saveLocalData(data);\n    return data.users[userIndex];\n  }\n};\n\n// Servicio de Estadísticas\nexport const statisticsService = {\n  // Obtener estadísticas generales\n  async getStatistics() {\n    await simulateNetworkDelay();\n    const data = getLocalData();\n    return {\n      totalVehicles: data.vehicles.length,\n      totalViews: data.vehicles.reduce((sum, v) => sum + (v.views || 0), 0),\n      featuredVehicles: data.vehicles.filter(v => v.isFeatured).length,\n      promotionVehicles: data.vehicles.filter(v => v.isPromotion).length\n    };\n  },\n  // Obtener vehículos más visitados\n  async getMostViewedVehicles(limit = 5) {\n    await simulateNetworkDelay();\n    const data = getLocalData();\n    return data.vehicles.sort((a, b) => (b.views || 0) - (a.views || 0)).slice(0, limit);\n  }\n};\n\n// Servicio de Autenticación Simulado\nexport const authService = {\n  // Login simulado\n  async login(email, password) {\n    await simulateNetworkDelay();\n    const user = await userService.getUserByEmail(email);\n    if (!user) {\n      throw new Error('Usuario no encontrado');\n    }\n\n    // En un entorno real, verificarías la contraseña\n    // Por ahora, simulamos que cualquier contraseña es válida\n    return {\n      user: {\n        uid: user.id,\n        email: user.email,\n        displayName: user.displayName\n      },\n      userRole: user.role\n    };\n  },\n  // Registro simulado\n  async register(userData) {\n    await simulateNetworkDelay();\n    const existingUser = await userService.getUserByEmail(userData.email);\n    if (existingUser) {\n      throw new Error('El usuario ya existe');\n    }\n    const newUser = await userService.createUser({\n      ...userData,\n      role: 'cliente' // Rol por defecto\n    });\n    return {\n      user: {\n        uid: newUser.id,\n        email: newUser.email,\n        displayName: newUser.displayName\n      },\n      userRole: newUser.role\n    };\n  },\n  // Obtener rol de usuario\n  async getUserRole(userId) {\n    await simulateNetworkDelay();\n    const data = getLocalData();\n    const user = data.users.find(u => u.id === userId);\n    return (user === null || user === void 0 ? void 0 : user.role) || 'usuario';\n  }\n};\nexport default {\n  vehicleService,\n  userService,\n  statisticsService,\n  authService\n};","map":{"version":3,"names":["sampleData","initializeLocalDB","localStorage","getItem","setItem","JSON","stringify","getLocalData","parse","saveLocalData","data","simulateNetworkDelay","Promise","resolve","setTimeout","vehicleService","getVehicles","filters","vehicles","brand","filter","v","type","condition","minPrice","price","maxPrice","search","searchTerm","toLowerCase","includes","model","getVehicleById","id","vehicle","find","Error","incrementViews","createVehicle","vehicleData","newVehicle","Date","now","toString","views","createdAt","toISOString","updatedAt","push","updateVehicle","vehicleIndex","findIndex","updatedVehicle","deleteVehicle","splice","success","getFeaturedVehicles","isFeatured","getPromotionVehicles","isPromotion","getSimilarVehicles","currentVehicle","limit","sort","a","b","Math","abs","slice","userService","getUserByEmail","email","users","user","createUser","userData","newUser","updateUser","userIndex","u","statisticsService","getStatistics","totalVehicles","length","totalViews","reduce","sum","featuredVehicles","promotionVehicles","getMostViewedVehicles","authService","login","password","uid","displayName","userRole","role","register","existingUser","getUserRole","userId"],"sources":["C:/Users/otero/OneDrive/Escritorio/Paginas Web/ri cars automotores/src/services/localApiService.js"],"sourcesContent":["// Servicio de API Local con datos simulados (sin JSON Server)\r\nconst sampleData = {\r\n  \"vehicles\": [\r\n    {\r\n      \"id\": \"1\",\r\n      \"brand\": \"Toyota\",\r\n      \"model\": \"Corolla\",\r\n      \"year\": 2023,\r\n      \"kilometers\": 15000,\r\n      \"price\": 25000,\r\n      \"priceARS\": 25000000,\r\n      \"condition\": \"new\",\r\n      \"transmission\": \"automatic\",\r\n      \"fuelType\": \"gasoline\",\r\n      \"color\": \"Blanco\",\r\n      \"type\": \"sedan\",\r\n      \"location\": \"Buenos Aires\",\r\n      \"engine\": \"2.0L\",\r\n      \"power\": \"150hp\",\r\n      \"features\": [\"Aire acondicionado\", \"Bluetooth\", \"Cámara de reversa\"],\r\n      \"images\": [\r\n        \"https://images.unsplash.com/photo-1549317661-bd32c8ce0db2?w=800\",\r\n        \"https://images.unsplash.com/photo-1552519507-da3b142c6e3d?w=800\"\r\n      ],\r\n      \"isFeatured\": true,\r\n      \"isPromotion\": false,\r\n      \"views\": 45,\r\n      \"createdAt\": \"2024-01-15T10:30:00Z\",\r\n      \"updatedAt\": \"2024-01-15T10:30:00Z\"\r\n    },\r\n    {\r\n      \"id\": \"2\",\r\n      \"brand\": \"Honda\",\r\n      \"model\": \"Civic\",\r\n      \"year\": 2022,\r\n      \"kilometers\": 25000,\r\n      \"price\": 22000,\r\n      \"priceARS\": 22000000,\r\n      \"condition\": \"used\",\r\n      \"transmission\": \"automatic\",\r\n      \"fuelType\": \"gasoline\",\r\n      \"color\": \"Negro\",\r\n      \"type\": \"sedan\",\r\n      \"location\": \"Buenos Aires\",\r\n      \"engine\": \"1.8L\",\r\n      \"power\": \"140hp\",\r\n      \"features\": [\"Aire acondicionado\", \"Bluetooth\", \"ABS\", \"Airbag\"],\r\n      \"images\": [\r\n        \"https://images.unsplash.com/photo-1552519507-da3b142c6e3d?w=800\",\r\n        \"https://images.unsplash.com/photo-1549317661-bd32c8ce0db2?w=800\"\r\n      ],\r\n      \"isFeatured\": false,\r\n      \"isPromotion\": true,\r\n      \"views\": 32,\r\n      \"createdAt\": \"2024-01-10T14:20:00Z\",\r\n      \"updatedAt\": \"2024-01-10T14:20:00Z\"\r\n    },\r\n    {\r\n      \"id\": \"3\",\r\n      \"brand\": \"Ford\",\r\n      \"model\": \"Ranger\",\r\n      \"year\": 2023,\r\n      \"kilometers\": 8000,\r\n      \"price\": 35000,\r\n      \"priceARS\": 35000000,\r\n      \"condition\": \"new\",\r\n      \"transmission\": \"automatic\",\r\n      \"fuelType\": \"diesel\",\r\n      \"color\": \"Gris\",\r\n      \"type\": \"pickup\",\r\n      \"location\": \"Buenos Aires\",\r\n      \"engine\": \"3.2L\",\r\n      \"power\": \"200hp\",\r\n      \"features\": [\"Aire acondicionado\", \"Bluetooth\", \"Tracción 4x4\", \"Cámara de reversa\"],\r\n      \"images\": [\r\n        \"https://images.unsplash.com/photo-1552519507-da3b142c6e3d?w=800\",\r\n        \"https://images.unsplash.com/photo-1549317661-bd32c8ce0db2?w=800\"\r\n      ],\r\n      \"isFeatured\": true,\r\n      \"isPromotion\": false,\r\n      \"views\": 78,\r\n      \"createdAt\": \"2024-01-20T09:15:00Z\",\r\n      \"updatedAt\": \"2024-01-20T09:15:00Z\"\r\n    }\r\n  ],\r\n  \"users\": [\r\n    {\r\n      \"id\": \"1\",\r\n      \"email\": \"admin@ricars.com\",\r\n      \"displayName\": \"Administrador\",\r\n      \"role\": \"admin\",\r\n      \"createdAt\": \"2024-01-01T00:00:00Z\"\r\n    },\r\n    {\r\n      \"id\": \"2\",\r\n      \"email\": \"cliente@example.com\",\r\n      \"displayName\": \"Cliente Ejemplo\",\r\n      \"role\": \"cliente\",\r\n      \"createdAt\": \"2024-01-05T12:00:00Z\"\r\n    }\r\n  ],\r\n  \"statistics\": {\r\n    \"totalVehicles\": 3,\r\n    \"totalViews\": 155,\r\n    \"featuredVehicles\": 2,\r\n    \"promotionVehicles\": 1\r\n  }\r\n};\r\n\r\n// Simular base de datos en localStorage\r\nconst initializeLocalDB = () => {\r\n  if (!localStorage.getItem('ricars_db')) {\r\n    localStorage.setItem('ricars_db', JSON.stringify(sampleData));\r\n  }\r\n};\r\n\r\n// Obtener datos de localStorage\r\nconst getLocalData = () => {\r\n  initializeLocalDB();\r\n  return JSON.parse(localStorage.getItem('ricars_db'));\r\n};\r\n\r\n// Guardar datos en localStorage\r\nconst saveLocalData = (data) => {\r\n  localStorage.setItem('ricars_db', JSON.stringify(data));\r\n};\r\n\r\n// Función helper para simular delay de red\r\nconst simulateNetworkDelay = () => new Promise(resolve => setTimeout(resolve, 100));\r\n\r\n// Servicio de Vehículos\r\nexport const vehicleService = {\r\n  // Obtener todos los vehículos con filtros\r\n  async getVehicles(filters = {}) {\r\n    await simulateNetworkDelay();\r\n    const data = getLocalData();\r\n    let vehicles = data.vehicles;\r\n\r\n    // Aplicar filtros\r\n    if (filters.brand) {\r\n      vehicles = vehicles.filter(v => v.brand === filters.brand);\r\n    }\r\n    if (filters.type) {\r\n      vehicles = vehicles.filter(v => v.type === filters.type);\r\n    }\r\n    if (filters.condition) {\r\n      vehicles = vehicles.filter(v => v.condition === filters.condition);\r\n    }\r\n    if (filters.minPrice) {\r\n      vehicles = vehicles.filter(v => v.price >= filters.minPrice);\r\n    }\r\n    if (filters.maxPrice) {\r\n      vehicles = vehicles.filter(v => v.price <= filters.maxPrice);\r\n    }\r\n    if (filters.search) {\r\n      const searchTerm = filters.search.toLowerCase();\r\n      vehicles = vehicles.filter(v => \r\n        v.brand.toLowerCase().includes(searchTerm) ||\r\n        v.model.toLowerCase().includes(searchTerm)\r\n      );\r\n    }\r\n\r\n    return vehicles;\r\n  },\r\n\r\n  // Obtener vehículo por ID\r\n  async getVehicleById(id) {\r\n    await simulateNetworkDelay();\r\n    const data = getLocalData();\r\n    const vehicle = data.vehicles.find(v => v.id === id);\r\n    \r\n    if (!vehicle) {\r\n      throw new Error('Vehículo no encontrado');\r\n    }\r\n\r\n    // Incrementar vistas\r\n    await this.incrementViews(id);\r\n    \r\n    return vehicle;\r\n  },\r\n\r\n  // Crear nuevo vehículo\r\n  async createVehicle(vehicleData) {\r\n    await simulateNetworkDelay();\r\n    const data = getLocalData();\r\n    \r\n    const newVehicle = {\r\n      ...vehicleData,\r\n      id: Date.now().toString(),\r\n      views: 0,\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString(),\r\n    };\r\n\r\n    data.vehicles.push(newVehicle);\r\n    saveLocalData(data);\r\n\r\n    return newVehicle;\r\n  },\r\n\r\n  // Actualizar vehículo\r\n  async updateVehicle(id, vehicleData) {\r\n    await simulateNetworkDelay();\r\n    const data = getLocalData();\r\n    \r\n    const vehicleIndex = data.vehicles.findIndex(v => v.id === id);\r\n    if (vehicleIndex === -1) {\r\n      throw new Error('Vehículo no encontrado');\r\n    }\r\n\r\n    const updatedVehicle = {\r\n      ...data.vehicles[vehicleIndex],\r\n      ...vehicleData,\r\n      updatedAt: new Date().toISOString(),\r\n    };\r\n\r\n    data.vehicles[vehicleIndex] = updatedVehicle;\r\n    saveLocalData(data);\r\n\r\n    return updatedVehicle;\r\n  },\r\n\r\n  // Eliminar vehículo\r\n  async deleteVehicle(id) {\r\n    await simulateNetworkDelay();\r\n    const data = getLocalData();\r\n    \r\n    const vehicleIndex = data.vehicles.findIndex(v => v.id === id);\r\n    if (vehicleIndex === -1) {\r\n      throw new Error('Vehículo no encontrado');\r\n    }\r\n\r\n    data.vehicles.splice(vehicleIndex, 1);\r\n    saveLocalData(data);\r\n\r\n    return { success: true };\r\n  },\r\n\r\n  // Incrementar vistas\r\n  async incrementViews(id) {\r\n    const data = getLocalData();\r\n    const vehicleIndex = data.vehicles.findIndex(v => v.id === id);\r\n    \r\n    if (vehicleIndex !== -1) {\r\n      data.vehicles[vehicleIndex].views = (data.vehicles[vehicleIndex].views || 0) + 1;\r\n      saveLocalData(data);\r\n    }\r\n  },\r\n\r\n  // Obtener vehículos destacados\r\n  async getFeaturedVehicles() {\r\n    await simulateNetworkDelay();\r\n    const data = getLocalData();\r\n    return data.vehicles.filter(v => v.isFeatured);\r\n  },\r\n\r\n  // Obtener vehículos en promoción\r\n  async getPromotionVehicles() {\r\n    await simulateNetworkDelay();\r\n    const data = getLocalData();\r\n    return data.vehicles.filter(v => v.isPromotion);\r\n  },\r\n\r\n  // Obtener vehículos similares\r\n  async getSimilarVehicles(currentVehicle, limit = 3) {\r\n    await simulateNetworkDelay();\r\n    const data = getLocalData();\r\n    const { brand, type, price } = currentVehicle;\r\n    \r\n    return data.vehicles\r\n      .filter(v => v.id !== currentVehicle.id)\r\n      .filter(v => v.brand === brand || v.type === type)\r\n      .sort((a, b) => Math.abs(a.price - price) - Math.abs(b.price - price))\r\n      .slice(0, limit);\r\n  },\r\n};\r\n\r\n// Servicio de Usuarios\r\nexport const userService = {\r\n  // Obtener usuario por email\r\n  async getUserByEmail(email) {\r\n    await simulateNetworkDelay();\r\n    const data = getLocalData();\r\n    return data.users.find(user => user.email === email);\r\n  },\r\n\r\n  // Crear nuevo usuario\r\n  async createUser(userData) {\r\n    await simulateNetworkDelay();\r\n    const data = getLocalData();\r\n    \r\n    const newUser = {\r\n      ...userData,\r\n      id: Date.now().toString(),\r\n      createdAt: new Date().toISOString(),\r\n    };\r\n\r\n    data.users.push(newUser);\r\n    saveLocalData(data);\r\n\r\n    return newUser;\r\n  },\r\n\r\n  // Actualizar usuario\r\n  async updateUser(id, userData) {\r\n    await simulateNetworkDelay();\r\n    const data = getLocalData();\r\n    \r\n    const userIndex = data.users.findIndex(u => u.id === id);\r\n    if (userIndex === -1) {\r\n      throw new Error('Usuario no encontrado');\r\n    }\r\n\r\n    data.users[userIndex] = { ...data.users[userIndex], ...userData };\r\n    saveLocalData(data);\r\n\r\n    return data.users[userIndex];\r\n  },\r\n};\r\n\r\n// Servicio de Estadísticas\r\nexport const statisticsService = {\r\n  // Obtener estadísticas generales\r\n  async getStatistics() {\r\n    await simulateNetworkDelay();\r\n    const data = getLocalData();\r\n    \r\n    return {\r\n      totalVehicles: data.vehicles.length,\r\n      totalViews: data.vehicles.reduce((sum, v) => sum + (v.views || 0), 0),\r\n      featuredVehicles: data.vehicles.filter(v => v.isFeatured).length,\r\n      promotionVehicles: data.vehicles.filter(v => v.isPromotion).length,\r\n    };\r\n  },\r\n\r\n  // Obtener vehículos más visitados\r\n  async getMostViewedVehicles(limit = 5) {\r\n    await simulateNetworkDelay();\r\n    const data = getLocalData();\r\n    return data.vehicles\r\n      .sort((a, b) => (b.views || 0) - (a.views || 0))\r\n      .slice(0, limit);\r\n  },\r\n};\r\n\r\n// Servicio de Autenticación Simulado\r\nexport const authService = {\r\n  // Login simulado\r\n  async login(email, password) {\r\n    await simulateNetworkDelay();\r\n    const user = await userService.getUserByEmail(email);\r\n    \r\n    if (!user) {\r\n      throw new Error('Usuario no encontrado');\r\n    }\r\n\r\n    // En un entorno real, verificarías la contraseña\r\n    // Por ahora, simulamos que cualquier contraseña es válida\r\n    return {\r\n      user: {\r\n        uid: user.id,\r\n        email: user.email,\r\n        displayName: user.displayName,\r\n      },\r\n      userRole: user.role,\r\n    };\r\n  },\r\n\r\n  // Registro simulado\r\n  async register(userData) {\r\n    await simulateNetworkDelay();\r\n    const existingUser = await userService.getUserByEmail(userData.email);\r\n    \r\n    if (existingUser) {\r\n      throw new Error('El usuario ya existe');\r\n    }\r\n\r\n    const newUser = await userService.createUser({\r\n      ...userData,\r\n      role: 'cliente', // Rol por defecto\r\n    });\r\n\r\n    return {\r\n      user: {\r\n        uid: newUser.id,\r\n        email: newUser.email,\r\n        displayName: newUser.displayName,\r\n      },\r\n      userRole: newUser.role,\r\n    };\r\n  },\r\n\r\n  // Obtener rol de usuario\r\n  async getUserRole(userId) {\r\n    await simulateNetworkDelay();\r\n    const data = getLocalData();\r\n    const user = data.users.find(u => u.id === userId);\r\n    return user?.role || 'usuario';\r\n  },\r\n};\r\n\r\nexport default {\r\n  vehicleService,\r\n  userService,\r\n  statisticsService,\r\n  authService,\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
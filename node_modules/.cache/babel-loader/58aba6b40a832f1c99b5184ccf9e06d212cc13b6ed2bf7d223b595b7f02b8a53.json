{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{authService}from'../services/supabaseService';import{supabase}from'../supabase/config';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export function useAuth(){return useContext(AuthContext);}export function AuthProvider(_ref){let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[userRole,setUserRole]=useState('usuario');const[loading,setLoading]=useState(true);const[isLoggingOut,setIsLoggingOut]=useState(false);// Registro de usuario\nasync function signup(email,password,displayName){try{const result=await authService.signUp(email,password,displayName);toast.success('Cuenta creada exitosamente. Revisa tu email para confirmar.');return result;}catch(error){console.error('Error en registro:',error);toast.error(getErrorMessage(error.message));throw error;}}// Login\nasync function login(email,password){try{const result=await authService.signIn(email,password);toast.success('Inicio de sesi√≥n exitoso');return result;}catch(error){console.error('Error en login:',error);toast.error(getErrorMessage(error.message));throw error;}}// Logout\nasync function logout(){if(isLoggingOut){console.log('üîÑ Logout ya en progreso, ignorando...');return;}try{setIsLoggingOut(true);console.log('üö™ AuthContext: Iniciando logout...');await authService.signOut();console.log('‚úÖ AuthContext: Logout exitoso');toast.success('Sesi√≥n cerrada');}catch(error){console.error('‚ùå Error en logout:',error);toast.error('Error al cerrar sesi√≥n');}finally{setIsLoggingOut(false);}}// Recuperar contrase√±a\nasync function resetPassword(email){try{await authService.resetPassword(email);toast.success('Email de recuperaci√≥n enviado');}catch(error){console.error('Error en reset password:',error);toast.error(getErrorMessage(error.message));throw error;}}// Verificar si es owner (due√±o) - simplificado\nasync function isOwner(){if(!currentUser){console.log('üîç isOwner: No hay usuario autenticado');return false;}// Forzar owner para tu email espec√≠fico\nif(currentUser.email==='oterov101@gmail.com'){console.log('üëë OWNER FORZADO en isOwner() para oterov101@gmail.com');return true;}// Para otros usuarios, verificar desde userRole\nconst isOwnerResult=userRole==='owner';console.log('üîç Verificaci√≥n owner desde userRole:',{email:currentUser.email,userRole,isOwner:isOwnerResult});return isOwnerResult;}// Verificar si es admin\nfunction isAdmin(){console.log('üîç Verificando rol admin:',{userRole,currentUser:currentUser===null||currentUser===void 0?void 0:currentUser.email,result:userRole==='admin'||userRole==='owner'});return userRole==='admin'||userRole==='owner';}// Verificar si es cliente\nfunction isClient(){return userRole==='cliente'||userRole==='admin'||userRole==='owner';}// Obtener mensaje de error en espa√±ol\nfunction getErrorMessage(errorMessage){const errorMessages={'Usuario no encontrado':'No existe una cuenta con este email','Contrase√±a incorrecta':'Contrase√±a incorrecta','El usuario ya existe':'Este email ya est√° registrado','Email inv√°lido':'Email inv√°lido','Demasiados intentos':'Demasiados intentos. Intenta m√°s tarde','Cuenta deshabilitada':'Esta cuenta ha sido deshabilitada','Operaci√≥n no permitida':'Operaci√≥n no permitida','Credenciales inv√°lidas':'Credenciales inv√°lidas'};return errorMessages[errorMessage]||errorMessage||'Error desconocido';}// Verificar sesi√≥n y escuchar cambios de autenticaci√≥n\nuseEffect(()=>{// Obtener sesi√≥n inicial\nconst getInitialSession=async()=>{try{const session=await authService.getSession();if(session!==null&&session!==void 0&&session.user){setCurrentUser(session.user);console.log('üë§ Usuario autenticado:',session.user.email);// Forzar owner (due√±o) directamente para tu email\nif(session.user.email==='oterov101@gmail.com'){setUserRole('owner');console.log('üëë OWNER FORZADO para oterov101@gmail.com');return;}// Obtener rol desde la base de datos para otros usuarios\ntry{const{data:profile,error}=await authService.getUserProfile(session.user.id);if(error){console.warn('‚ö†Ô∏è No se pudo obtener perfil, usando rol cliente por defecto');setUserRole('cliente');}else{console.log('‚úÖ Rol obtenido desde DB:',profile.role);setUserRole(profile.role||'cliente');}}catch(profileError){console.warn('‚ö†Ô∏è Error obteniendo perfil, usando rol cliente por defecto:',profileError);setUserRole('cliente');}}}catch(error){console.error('‚ùå Error obteniendo sesi√≥n:',error);}finally{console.log('‚úÖ Carga de autenticaci√≥n completada');setLoading(false);}};getInitialSession();// Timeout de seguridad\nconst timeoutId=setTimeout(()=>{console.log('‚è∞ Timeout de autenticaci√≥n - forzando carga');setLoading(false);},1500);// Escuchar cambios de autenticaci√≥n\nconst{data:{subscription}}=authService.onAuthStateChange(async(event,session)=>{if(event==='SIGNED_IN'&&session!==null&&session!==void 0&&session.user){setCurrentUser(session.user);// Forzar owner (due√±o) directamente para tu email\nif(session.user.email==='oterov101@gmail.com'){setUserRole('owner');console.log('üëë OWNER FORZADO en onChange para oterov101@gmail.com');return;}// Obtener rol desde la base de datos para otros usuarios\ntry{const profile=await authService.getUserProfile(session.user.id);console.log('‚úÖ Rol obtenido desde DB en onChange:',profile.role);setUserRole(profile.role||'cliente');}catch(profileError){console.warn('‚ö†Ô∏è Error obteniendo perfil en onChange, usando rol cliente por defecto:',profileError);setUserRole('cliente');}}else if(event==='SIGNED_OUT'){console.log('üîì SIGNED_OUT detectado, limpiando estado...');setCurrentUser(null);setUserRole('usuario');setIsLoggingOut(false);}});return()=>{subscription.unsubscribe();clearTimeout(timeoutId);};},[]);const value={currentUser,userRole,signup,login,logout,resetPassword,isOwner,isAdmin,isClient,loading};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","supabase","toast","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","currentUser","setCurrentUser","userRole","setUserRole","loading","setLoading","isLoggingOut","setIsLoggingOut","signup","email","password","displayName","result","signUp","success","error","console","getErrorMessage","message","login","signIn","logout","log","signOut","resetPassword","isOwner","isOwnerResult","isAdmin","isClient","errorMessage","errorMessages","getInitialSession","session","getSession","user","data","profile","getUserProfile","id","warn","role","profileError","timeoutId","setTimeout","subscription","onAuthStateChange","event","unsubscribe","clearTimeout","value","Provider"],"sources":["C:/Users/otero/OneDrive/Escritorio/Paginas Web/ri cars automotores/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/supabaseService';\nimport { supabase } from '../supabase/config';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userRole, setUserRole] = useState('usuario');\n  const [loading, setLoading] = useState(true);\n  const [isLoggingOut, setIsLoggingOut] = useState(false);\n\n  // Registro de usuario\n  async function signup(email, password, displayName) {\n    try {\n      const result = await authService.signUp(email, password, displayName);\n      \n      toast.success('Cuenta creada exitosamente. Revisa tu email para confirmar.');\n      return result;\n    } catch (error) {\n      console.error('Error en registro:', error);\n      toast.error(getErrorMessage(error.message));\n      throw error;\n    }\n  }\n\n  // Login\n  async function login(email, password) {\n    try {\n      const result = await authService.signIn(email, password);\n      \n      toast.success('Inicio de sesi√≥n exitoso');\n      return result;\n    } catch (error) {\n      console.error('Error en login:', error);\n      toast.error(getErrorMessage(error.message));\n      throw error;\n    }\n  }\n\n  // Logout\n  async function logout() {\n    if (isLoggingOut) {\n      console.log('üîÑ Logout ya en progreso, ignorando...');\n      return;\n    }\n\n    try {\n      setIsLoggingOut(true);\n      console.log('üö™ AuthContext: Iniciando logout...');\n      \n      await authService.signOut();\n      \n      console.log('‚úÖ AuthContext: Logout exitoso');\n      toast.success('Sesi√≥n cerrada');\n      \n    } catch (error) {\n      console.error('‚ùå Error en logout:', error);\n      toast.error('Error al cerrar sesi√≥n');\n    } finally {\n      setIsLoggingOut(false);\n    }\n  }\n\n  // Recuperar contrase√±a\n  async function resetPassword(email) {\n    try {\n      await authService.resetPassword(email);\n      toast.success('Email de recuperaci√≥n enviado');\n    } catch (error) {\n      console.error('Error en reset password:', error);\n      toast.error(getErrorMessage(error.message));\n      throw error;\n    }\n  }\n\n  // Verificar si es owner (due√±o) - simplificado\n  async function isOwner() {\n    if (!currentUser) {\n      console.log('üîç isOwner: No hay usuario autenticado');\n      return false;\n    }\n\n    // Forzar owner para tu email espec√≠fico\n    if (currentUser.email === 'oterov101@gmail.com') {\n      console.log('üëë OWNER FORZADO en isOwner() para oterov101@gmail.com');\n      return true;\n    }\n\n    // Para otros usuarios, verificar desde userRole\n    const isOwnerResult = userRole === 'owner';\n    console.log('üîç Verificaci√≥n owner desde userRole:', {\n      email: currentUser.email,\n      userRole,\n      isOwner: isOwnerResult\n    });\n\n    return isOwnerResult;\n  }\n\n  // Verificar si es admin\n  function isAdmin() {\n    console.log('üîç Verificando rol admin:', { \n      userRole, \n      currentUser: currentUser?.email,\n      result: userRole === 'admin' || userRole === 'owner'\n    });\n    return userRole === 'admin' || userRole === 'owner';\n  }\n\n  // Verificar si es cliente\n  function isClient() {\n    return userRole === 'cliente' || userRole === 'admin' || userRole === 'owner';\n  }\n\n  // Obtener mensaje de error en espa√±ol\n  function getErrorMessage(errorMessage) {\n    const errorMessages = {\n      'Usuario no encontrado': 'No existe una cuenta con este email',\n      'Contrase√±a incorrecta': 'Contrase√±a incorrecta',\n      'El usuario ya existe': 'Este email ya est√° registrado',\n      'Email inv√°lido': 'Email inv√°lido',\n      'Demasiados intentos': 'Demasiados intentos. Intenta m√°s tarde',\n      'Cuenta deshabilitada': 'Esta cuenta ha sido deshabilitada',\n      'Operaci√≥n no permitida': 'Operaci√≥n no permitida',\n      'Credenciales inv√°lidas': 'Credenciales inv√°lidas'\n    };\n    return errorMessages[errorMessage] || errorMessage || 'Error desconocido';\n  }\n\n  // Verificar sesi√≥n y escuchar cambios de autenticaci√≥n\n  useEffect(() => {\n    // Obtener sesi√≥n inicial\n    const getInitialSession = async () => {\n      try {\n        const session = await authService.getSession();\n        \n        if (session?.user) {\n          setCurrentUser(session.user);\n          console.log('üë§ Usuario autenticado:', session.user.email);\n          \n          // Forzar owner (due√±o) directamente para tu email\n          if (session.user.email === 'oterov101@gmail.com') {\n            setUserRole('owner');\n            console.log('üëë OWNER FORZADO para oterov101@gmail.com');\n            return;\n          }\n          \n          // Obtener rol desde la base de datos para otros usuarios\n          try {\n            const { data: profile, error } = await authService.getUserProfile(session.user.id);\n            if (error) {\n              console.warn('‚ö†Ô∏è No se pudo obtener perfil, usando rol cliente por defecto');\n              setUserRole('cliente');\n            } else {\n              console.log('‚úÖ Rol obtenido desde DB:', profile.role);\n              setUserRole(profile.role || 'cliente');\n            }\n          } catch (profileError) {\n            console.warn('‚ö†Ô∏è Error obteniendo perfil, usando rol cliente por defecto:', profileError);\n            setUserRole('cliente');\n          }\n        }\n      } catch (error) {\n        console.error('‚ùå Error obteniendo sesi√≥n:', error);\n      } finally {\n        console.log('‚úÖ Carga de autenticaci√≥n completada');\n        setLoading(false);\n      }\n    };\n\n    getInitialSession();\n\n    // Timeout de seguridad\n    const timeoutId = setTimeout(() => {\n      console.log('‚è∞ Timeout de autenticaci√≥n - forzando carga');\n      setLoading(false);\n    }, 1500);\n\n    // Escuchar cambios de autenticaci√≥n\n    const { data: { subscription } } = authService.onAuthStateChange(async (event, session) => {\n      if (event === 'SIGNED_IN' && session?.user) {\n        setCurrentUser(session.user);\n        \n        // Forzar owner (due√±o) directamente para tu email\n        if (session.user.email === 'oterov101@gmail.com') {\n          setUserRole('owner');\n          console.log('üëë OWNER FORZADO en onChange para oterov101@gmail.com');\n          return;\n        }\n        \n        // Obtener rol desde la base de datos para otros usuarios\n        try {\n          const profile = await authService.getUserProfile(session.user.id);\n          console.log('‚úÖ Rol obtenido desde DB en onChange:', profile.role);\n          setUserRole(profile.role || 'cliente');\n        } catch (profileError) {\n          console.warn('‚ö†Ô∏è Error obteniendo perfil en onChange, usando rol cliente por defecto:', profileError);\n          setUserRole('cliente');\n        }\n      } else if (event === 'SIGNED_OUT') {\n        console.log('üîì SIGNED_OUT detectado, limpiando estado...');\n        setCurrentUser(null);\n        setUserRole('usuario');\n        setIsLoggingOut(false);\n      }\n    });\n\n    return () => {\n      subscription.unsubscribe();\n      clearTimeout(timeoutId);\n    };\n  }, []);\n\n  const value = {\n    currentUser,\n    userRole,\n    signup,\n    login,\n    logout,\n    resetPassword,\n    isOwner,\n    isAdmin,\n    isClient,\n    loading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { vehicleService as supabaseVehicleService, statisticsService } from './supabaseService';\n\n// Cache simple en memoria\nlet vehicleCache = null;\nlet cacheTime = null;\nconst CACHE_DURATION = 30000; // 30 segundos\n\n// Funci칩n para limpiar cache\nexport const clearVehicleCache = () => {\n  vehicleCache = null;\n  cacheTime = null;\n  console.log('游빛 Cache de veh칤culos limpiado');\n};\n\n// Obtener todos los veh칤culos\nexport const getVehicles = async (filters = {}) => {\n  try {\n    // Si no hay filtros y tenemos cache v치lido, usarlo\n    if (Object.keys(filters).length === 0 && vehicleCache && cacheTime && Date.now() - cacheTime < CACHE_DURATION) {\n      return vehicleCache;\n    }\n    const result = await supabaseVehicleService.getVehicles(filters);\n\n    // Solo cachear si no hay filtros\n    if (Object.keys(filters).length === 0) {\n      vehicleCache = result;\n      cacheTime = Date.now();\n    }\n    return result;\n  } catch (error) {\n    console.error('Error obteniendo veh칤culos:', error);\n    throw error;\n  }\n};\n\n// Obtener un veh칤culo por ID\nexport const getVehicleById = async id => {\n  try {\n    return await supabaseVehicleService.getVehicleById(id);\n  } catch (error) {\n    console.error('Error obteniendo veh칤culo:', error);\n    throw error;\n  }\n};\n\n// Crear nuevo veh칤culo\nexport const createVehicle = async vehicleData => {\n  try {\n    return await supabaseVehicleService.createVehicle(vehicleData);\n  } catch (error) {\n    console.error('Error creando veh칤culo:', error);\n    throw error;\n  }\n};\n\n// Actualizar veh칤culo\nexport const updateVehicle = async (id, vehicleData) => {\n  try {\n    return await supabaseVehicleService.updateVehicle(id, vehicleData);\n  } catch (error) {\n    console.error('Error actualizando veh칤culo:', error);\n    throw error;\n  }\n};\n\n// Eliminar veh칤culo\nexport const deleteVehicle = async id => {\n  try {\n    return await supabaseVehicleService.deleteVehicle(id);\n  } catch (error) {\n    console.error('Error eliminando veh칤culo:', error);\n    throw error;\n  }\n};\n\n// Obtener veh칤culos destacados\nexport const getFeaturedVehicles = async (limit = 6) => {\n  try {\n    return await supabaseVehicleService.getFeaturedVehicles(limit);\n  } catch (error) {\n    console.error('Error obteniendo veh칤culos destacados:', error);\n    throw error;\n  }\n};\n\n// Obtener veh칤culos en promoci칩n\nexport const getPromotionVehicles = async (limit = 6) => {\n  try {\n    return await supabaseVehicleService.getPromotionVehicles(limit);\n  } catch (error) {\n    console.error('Error obteniendo veh칤culos en promoci칩n:', error);\n    throw error;\n  }\n};\n\n// Obtener veh칤culos similares\nexport const getSimilarVehicles = async (currentVehicle, limit = 4) => {\n  try {\n    return await supabaseVehicleService.getSimilarVehicles(currentVehicle, limit);\n  } catch (error) {\n    console.error('Error obteniendo veh칤culos similares:', error);\n    throw error;\n  }\n};\n\n// Obtener estad칤sticas de veh칤culos\nexport const getVehicleStats = async () => {\n  try {\n    return await statisticsService.getStatistics();\n  } catch (error) {\n    console.error('Error obteniendo estad칤sticas:', error);\n    throw error;\n  }\n};\n\n// Funci칩n helper para subir im치genes a Supabase\nexport const uploadImage = async (file, vehicleId, imageIndex) => {\n  try {\n    return await supabaseVehicleService.uploadVehicleImage(file, vehicleId, imageIndex);\n  } catch (error) {\n    console.error('Error subiendo imagen:', error);\n    throw error;\n  }\n};\n\n// Funci칩n helper para eliminar im치genes\nexport const deleteImage = async imageUrl => {\n  // Extraer path de la URL de Supabase\n  const path = imageUrl.split('/storage/v1/object/public/vehicle-images/')[1];\n  if (path) {\n    const {\n      deleteVehicleImage\n    } = await import('../supabase/config');\n    return await deleteVehicleImage(path);\n  }\n};","map":{"version":3,"names":["vehicleService","supabaseVehicleService","statisticsService","vehicleCache","cacheTime","CACHE_DURATION","clearVehicleCache","console","log","getVehicles","filters","Object","keys","length","Date","now","result","error","getVehicleById","id","createVehicle","vehicleData","updateVehicle","deleteVehicle","getFeaturedVehicles","limit","getPromotionVehicles","getSimilarVehicles","currentVehicle","getVehicleStats","getStatistics","uploadImage","file","vehicleId","imageIndex","uploadVehicleImage","deleteImage","imageUrl","path","split","deleteVehicleImage"],"sources":["C:/Users/otero/OneDrive/Escritorio/Paginas Web/ri cars automotores/src/services/vehicleService.js"],"sourcesContent":["import { vehicleService as supabaseVehicleService, statisticsService } from './supabaseService';\r\n\r\n// Cache simple en memoria\r\nlet vehicleCache = null;\r\nlet cacheTime = null;\r\nconst CACHE_DURATION = 30000; // 30 segundos\r\n\r\n// Funci칩n para limpiar cache\r\nexport const clearVehicleCache = () => {\r\n  vehicleCache = null;\r\n  cacheTime = null;\r\n  console.log('游빛 Cache de veh칤culos limpiado');\r\n};\r\n\r\n// Obtener todos los veh칤culos\r\nexport const getVehicles = async (filters = {}) => {\r\n  try {\r\n    // Si no hay filtros y tenemos cache v치lido, usarlo\r\n    if (Object.keys(filters).length === 0 && vehicleCache && cacheTime && (Date.now() - cacheTime < CACHE_DURATION)) {\r\n      return vehicleCache;\r\n    }\r\n    \r\n    const result = await supabaseVehicleService.getVehicles(filters);\r\n    \r\n    // Solo cachear si no hay filtros\r\n    if (Object.keys(filters).length === 0) {\r\n      vehicleCache = result;\r\n      cacheTime = Date.now();\r\n    }\r\n    \r\n    return result;\r\n  } catch (error) {\r\n    console.error('Error obteniendo veh칤culos:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener un veh칤culo por ID\r\nexport const getVehicleById = async (id) => {\r\n  try {\r\n    return await supabaseVehicleService.getVehicleById(id);\r\n  } catch (error) {\r\n    console.error('Error obteniendo veh칤culo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Crear nuevo veh칤culo\r\nexport const createVehicle = async (vehicleData) => {\r\n  try {\r\n    return await supabaseVehicleService.createVehicle(vehicleData);\r\n  } catch (error) {\r\n    console.error('Error creando veh칤culo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Actualizar veh칤culo\r\nexport const updateVehicle = async (id, vehicleData) => {\r\n  try {\r\n    return await supabaseVehicleService.updateVehicle(id, vehicleData);\r\n  } catch (error) {\r\n    console.error('Error actualizando veh칤culo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Eliminar veh칤culo\r\nexport const deleteVehicle = async (id) => {\r\n  try {\r\n    return await supabaseVehicleService.deleteVehicle(id);\r\n  } catch (error) {\r\n    console.error('Error eliminando veh칤culo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener veh칤culos destacados\r\nexport const getFeaturedVehicles = async (limit = 6) => {\r\n  try {\r\n    return await supabaseVehicleService.getFeaturedVehicles(limit);\r\n  } catch (error) {\r\n    console.error('Error obteniendo veh칤culos destacados:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener veh칤culos en promoci칩n\r\nexport const getPromotionVehicles = async (limit = 6) => {\r\n  try {\r\n    return await supabaseVehicleService.getPromotionVehicles(limit);\r\n  } catch (error) {\r\n    console.error('Error obteniendo veh칤culos en promoci칩n:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener veh칤culos similares\r\nexport const getSimilarVehicles = async (currentVehicle, limit = 4) => {\r\n  try {\r\n    return await supabaseVehicleService.getSimilarVehicles(currentVehicle, limit);\r\n  } catch (error) {\r\n    console.error('Error obteniendo veh칤culos similares:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener estad칤sticas de veh칤culos\r\nexport const getVehicleStats = async () => {\r\n  try {\r\n    return await statisticsService.getStatistics();\r\n  } catch (error) {\r\n    console.error('Error obteniendo estad칤sticas:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Funci칩n helper para subir im치genes a Supabase\r\nexport const uploadImage = async (file, vehicleId, imageIndex) => {\r\n  try {\r\n    return await supabaseVehicleService.uploadVehicleImage(file, vehicleId, imageIndex);\r\n  } catch (error) {\r\n    console.error('Error subiendo imagen:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Funci칩n helper para eliminar im치genes\r\nexport const deleteImage = async (imageUrl) => {\r\n  // Extraer path de la URL de Supabase\r\n  const path = imageUrl.split('/storage/v1/object/public/vehicle-images/')[1];\r\n  if (path) {\r\n    const { deleteVehicleImage } = await import('../supabase/config');\r\n    return await deleteVehicleImage(path);\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\otero\\\\OneDrive\\\\Escritorio\\\\Paginas Web\\\\ri cars automotores\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/supabaseService';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userRole, setUserRole] = useState('usuario');\n  const [loading, setLoading] = useState(true);\n\n  // Registro de usuario\n  async function signup(email, password, displayName) {\n    try {\n      const result = await authService.signUp(email, password, displayName);\n      toast.success('Cuenta creada exitosamente. Revisa tu email para confirmar.');\n      return result;\n    } catch (error) {\n      console.error('Error en registro:', error);\n      toast.error(getErrorMessage(error.message));\n      throw error;\n    }\n  }\n\n  // Login\n  async function login(email, password) {\n    try {\n      const result = await authService.signIn(email, password);\n      toast.success('Inicio de sesión exitoso');\n      return result;\n    } catch (error) {\n      console.error('Error en login:', error);\n      toast.error(getErrorMessage(error.message));\n      throw error;\n    }\n  }\n\n  // Logout\n  async function logout() {\n    try {\n      await authService.signOut();\n      toast.success('Sesión cerrada');\n    } catch (error) {\n      console.error('Error en logout:', error);\n      toast.error('Error al cerrar sesión');\n    }\n  }\n\n  // Recuperar contraseña (simulado)\n  async function resetPassword(email) {\n    try {\n      // En un entorno real, enviarías un email\n      // Por ahora, simulamos el enví\n      toast.success('Email de recuperación enviado (simulado)');\n    } catch (error) {\n      console.error('Error en reset password:', error);\n      toast.error(getErrorMessage(error.message));\n      throw error;\n    }\n  }\n\n  // Verificar si es admin\n  function isAdmin() {\n    return userRole === 'admin';\n  }\n\n  // Verificar si es cliente\n  function isClient() {\n    return userRole === 'cliente' || userRole === 'admin';\n  }\n\n  // Obtener mensaje de error en español\n  function getErrorMessage(errorMessage) {\n    const errorMessages = {\n      'Usuario no encontrado': 'No existe una cuenta con este email',\n      'Contraseña incorrecta': 'Contraseña incorrecta',\n      'El usuario ya existe': 'Este email ya está registrado',\n      'Email inválido': 'Email inválido',\n      'Demasiados intentos': 'Demasiados intentos. Intenta más tarde',\n      'Cuenta deshabilitada': 'Esta cuenta ha sido deshabilitada',\n      'Operación no permitida': 'Operación no permitida',\n      'Credenciales inválidas': 'Credenciales inválidas'\n    };\n    return errorMessages[errorMessage] || errorMessage || 'Error desconocido';\n  }\n\n  // Verificar sesión al cargar\n  useEffect(() => {\n    const checkSession = () => {\n      // Verificar si hay una sesión guardada en localStorage\n      const savedUser = localStorage.getItem('ricars_user');\n      if (savedUser) {\n        try {\n          const user = JSON.parse(savedUser);\n          setCurrentUser(user);\n          setUserRole(user.role || 'cliente');\n        } catch (error) {\n          console.error('Error parsing saved user:', error);\n          localStorage.removeItem('ricars_user');\n        }\n      }\n      setLoading(false);\n    };\n    checkSession();\n  }, []);\n\n  // Guardar usuario en localStorage cuando cambie\n  useEffect(() => {\n    if (currentUser) {\n      localStorage.setItem('ricars_user', JSON.stringify({\n        ...currentUser,\n        role: userRole\n      }));\n    } else {\n      localStorage.removeItem('ricars_user');\n    }\n  }, [currentUser, userRole]);\n  const value = {\n    currentUser,\n    userRole,\n    signup,\n    login,\n    logout,\n    resetPassword,\n    isAdmin,\n    isClient,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"TmKZ9N4fRrR/xFLo/lkYFGcJ2RU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","userRole","setUserRole","loading","setLoading","signup","email","password","displayName","result","signUp","success","error","console","getErrorMessage","message","login","signIn","logout","signOut","resetPassword","isAdmin","isClient","errorMessage","errorMessages","checkSession","savedUser","localStorage","getItem","user","JSON","parse","role","removeItem","setItem","stringify","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/otero/OneDrive/Escritorio/Paginas Web/ri cars automotores/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { authService } from '../services/supabaseService';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [userRole, setUserRole] = useState('usuario');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Registro de usuario\r\n  async function signup(email, password, displayName) {\r\n    try {\r\n      const result = await authService.signUp(email, password, displayName);\r\n      \r\n      toast.success('Cuenta creada exitosamente. Revisa tu email para confirmar.');\r\n      return result;\r\n    } catch (error) {\r\n      console.error('Error en registro:', error);\r\n      toast.error(getErrorMessage(error.message));\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Login\r\n  async function login(email, password) {\r\n    try {\r\n      const result = await authService.signIn(email, password);\r\n      \r\n      toast.success('Inicio de sesión exitoso');\r\n      return result;\r\n    } catch (error) {\r\n      console.error('Error en login:', error);\r\n      toast.error(getErrorMessage(error.message));\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Logout\r\n  async function logout() {\r\n    try {\r\n      await authService.signOut();\r\n      toast.success('Sesión cerrada');\r\n    } catch (error) {\r\n      console.error('Error en logout:', error);\r\n      toast.error('Error al cerrar sesión');\r\n    }\r\n  }\r\n\r\n  // Recuperar contraseña (simulado)\r\n  async function resetPassword(email) {\r\n    try {\r\n      // En un entorno real, enviarías un email\r\n      // Por ahora, simulamos el enví\r\n      toast.success('Email de recuperación enviado (simulado)');\r\n    } catch (error) {\r\n      console.error('Error en reset password:', error);\r\n      toast.error(getErrorMessage(error.message));\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Verificar si es admin\r\n  function isAdmin() {\r\n    return userRole === 'admin';\r\n  }\r\n\r\n  // Verificar si es cliente\r\n  function isClient() {\r\n    return userRole === 'cliente' || userRole === 'admin';\r\n  }\r\n\r\n  // Obtener mensaje de error en español\r\n  function getErrorMessage(errorMessage) {\r\n    const errorMessages = {\r\n      'Usuario no encontrado': 'No existe una cuenta con este email',\r\n      'Contraseña incorrecta': 'Contraseña incorrecta',\r\n      'El usuario ya existe': 'Este email ya está registrado',\r\n      'Email inválido': 'Email inválido',\r\n      'Demasiados intentos': 'Demasiados intentos. Intenta más tarde',\r\n      'Cuenta deshabilitada': 'Esta cuenta ha sido deshabilitada',\r\n      'Operación no permitida': 'Operación no permitida',\r\n      'Credenciales inválidas': 'Credenciales inválidas'\r\n    };\r\n    return errorMessages[errorMessage] || errorMessage || 'Error desconocido';\r\n  }\r\n\r\n  // Verificar sesión al cargar\r\n  useEffect(() => {\r\n    const checkSession = () => {\r\n      // Verificar si hay una sesión guardada en localStorage\r\n      const savedUser = localStorage.getItem('ricars_user');\r\n      if (savedUser) {\r\n        try {\r\n          const user = JSON.parse(savedUser);\r\n          setCurrentUser(user);\r\n          setUserRole(user.role || 'cliente');\r\n        } catch (error) {\r\n          console.error('Error parsing saved user:', error);\r\n          localStorage.removeItem('ricars_user');\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkSession();\r\n  }, []);\r\n\r\n  // Guardar usuario en localStorage cuando cambie\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      localStorage.setItem('ricars_user', JSON.stringify({\r\n        ...currentUser,\r\n        role: userRole\r\n      }));\r\n    } else {\r\n      localStorage.removeItem('ricars_user');\r\n    }\r\n  }, [currentUser, userRole]);\r\n\r\n  const value = {\r\n    currentUser,\r\n    userRole,\r\n    signup,\r\n    login,\r\n    logout,\r\n    resetPassword,\r\n    isAdmin,\r\n    isClient,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
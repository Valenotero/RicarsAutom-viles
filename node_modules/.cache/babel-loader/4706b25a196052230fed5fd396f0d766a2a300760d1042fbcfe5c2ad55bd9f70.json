{"ast":null,"code":"import { vehicleService as supabaseVehicleService, statisticsService } from './supabaseService';\nimport { supabase } from '../supabase/config';\n\n// Cache simple en memoria\nlet vehicleCache = null;\nlet cacheTime = null;\nconst CACHE_DURATION = 30000; // 30 segundos\n\n// Función para limpiar cache\nexport const clearVehicleCache = () => {\n  vehicleCache = null;\n  cacheTime = null;\n  console.log('🧹 Cache de vehículos limpiado');\n};\n\n// Obtener todos los vehículos\nexport const getVehicles = async (filters = {}) => {\n  try {\n    console.log('🌐 getVehicles: Iniciando consulta...');\n\n    // Consulta directa simplificada\n    const {\n      data,\n      error\n    } = await supabase.from('vehicles').select('*').order('created_at', {\n      ascending: false\n    });\n    if (error) {\n      console.error('❌ Error de Supabase:', error);\n      // Si es error de tabla no existe, devolver array vacío\n      if (error.message.includes('relation \"vehicles\" does not exist')) {\n        console.log('📝 Tabla \"vehicles\" no existe, devolviendo array vacío');\n        return [];\n      }\n      throw error;\n    }\n    console.log('✅ Datos obtenidos de Supabase:', (data === null || data === void 0 ? void 0 : data.length) || 0);\n    console.log('📋 Datos:', data);\n    return data || [];\n  } catch (error) {\n    console.error('❌ Error obteniendo vehículos:', error);\n    // En lugar de lanzar error, devolver array vacío para que la app funcione\n    return [];\n  }\n};\n\n// Obtener un vehículo por ID\nexport const getVehicleById = async id => {\n  try {\n    return await supabaseVehicleService.getVehicleById(id);\n  } catch (error) {\n    console.error('Error obteniendo vehículo:', error);\n    throw error;\n  }\n};\n\n// Crear nuevo vehículo\nexport const createVehicle = async vehicleData => {\n  try {\n    return await supabaseVehicleService.createVehicle(vehicleData);\n  } catch (error) {\n    console.error('Error creando vehículo:', error);\n    throw error;\n  }\n};\n\n// Actualizar vehículo\nexport const updateVehicle = async (id, vehicleData) => {\n  try {\n    return await supabaseVehicleService.updateVehicle(id, vehicleData);\n  } catch (error) {\n    console.error('Error actualizando vehículo:', error);\n    throw error;\n  }\n};\n\n// Eliminar vehículo\nexport const deleteVehicle = async id => {\n  try {\n    return await supabaseVehicleService.deleteVehicle(id);\n  } catch (error) {\n    console.error('Error eliminando vehículo:', error);\n    throw error;\n  }\n};\n\n// Obtener vehículos destacados\nexport const getFeaturedVehicles = async (limit = 6) => {\n  try {\n    return await supabaseVehicleService.getFeaturedVehicles(limit);\n  } catch (error) {\n    console.error('Error obteniendo vehículos destacados:', error);\n    throw error;\n  }\n};\n\n// Obtener vehículos en promoción\nexport const getPromotionVehicles = async (limit = 6) => {\n  try {\n    return await supabaseVehicleService.getPromotionVehicles(limit);\n  } catch (error) {\n    console.error('Error obteniendo vehículos en promoción:', error);\n    throw error;\n  }\n};\n\n// Obtener vehículos similares\nexport const getSimilarVehicles = async (currentVehicle, limit = 4) => {\n  try {\n    return await supabaseVehicleService.getSimilarVehicles(currentVehicle, limit);\n  } catch (error) {\n    console.error('Error obteniendo vehículos similares:', error);\n    throw error;\n  }\n};\n\n// Obtener estadísticas de vehículos\nexport const getVehicleStats = async () => {\n  try {\n    return await statisticsService.getStatistics();\n  } catch (error) {\n    console.error('Error obteniendo estadísticas:', error);\n    throw error;\n  }\n};\n\n// Función helper para subir imágenes a Supabase\nexport const uploadImage = async (file, vehicleId, imageIndex) => {\n  try {\n    return await supabaseVehicleService.uploadVehicleImage(file, vehicleId, imageIndex);\n  } catch (error) {\n    console.error('Error subiendo imagen:', error);\n    throw error;\n  }\n};\n\n// Función helper para eliminar imágenes\nexport const deleteImage = async imageUrl => {\n  // Extraer path de la URL de Supabase\n  const path = imageUrl.split('/storage/v1/object/public/vehicle-images/')[1];\n  if (path) {\n    const {\n      deleteVehicleImage\n    } = await import('../supabase/config');\n    return await deleteVehicleImage(path);\n  }\n};","map":{"version":3,"names":["vehicleService","supabaseVehicleService","statisticsService","supabase","vehicleCache","cacheTime","CACHE_DURATION","clearVehicleCache","console","log","getVehicles","filters","data","error","from","select","order","ascending","message","includes","length","getVehicleById","id","createVehicle","vehicleData","updateVehicle","deleteVehicle","getFeaturedVehicles","limit","getPromotionVehicles","getSimilarVehicles","currentVehicle","getVehicleStats","getStatistics","uploadImage","file","vehicleId","imageIndex","uploadVehicleImage","deleteImage","imageUrl","path","split","deleteVehicleImage"],"sources":["C:/Users/otero/OneDrive/Escritorio/Paginas Web/ri cars automotores/src/services/vehicleService.js"],"sourcesContent":["import { vehicleService as supabaseVehicleService, statisticsService } from './supabaseService';\r\nimport { supabase } from '../supabase/config';\r\n\r\n// Cache simple en memoria\r\nlet vehicleCache = null;\r\nlet cacheTime = null;\r\nconst CACHE_DURATION = 30000; // 30 segundos\r\n\r\n// Función para limpiar cache\r\nexport const clearVehicleCache = () => {\r\n  vehicleCache = null;\r\n  cacheTime = null;\r\n  console.log('🧹 Cache de vehículos limpiado');\r\n};\r\n\r\n// Obtener todos los vehículos\r\nexport const getVehicles = async (filters = {}) => {\r\n  try {\r\n    console.log('🌐 getVehicles: Iniciando consulta...');\r\n    \r\n    // Consulta directa simplificada\r\n    const { data, error } = await supabase\r\n      .from('vehicles')\r\n      .select('*')\r\n      .order('created_at', { ascending: false });\r\n    \r\n    if (error) {\r\n      console.error('❌ Error de Supabase:', error);\r\n      // Si es error de tabla no existe, devolver array vacío\r\n      if (error.message.includes('relation \"vehicles\" does not exist')) {\r\n        console.log('📝 Tabla \"vehicles\" no existe, devolviendo array vacío');\r\n        return [];\r\n      }\r\n      throw error;\r\n    }\r\n    \r\n    console.log('✅ Datos obtenidos de Supabase:', data?.length || 0);\r\n    console.log('📋 Datos:', data);\r\n    \r\n    return data || [];\r\n  } catch (error) {\r\n    console.error('❌ Error obteniendo vehículos:', error);\r\n    // En lugar de lanzar error, devolver array vacío para que la app funcione\r\n    return [];\r\n  }\r\n};\r\n\r\n// Obtener un vehículo por ID\r\nexport const getVehicleById = async (id) => {\r\n  try {\r\n    return await supabaseVehicleService.getVehicleById(id);\r\n  } catch (error) {\r\n    console.error('Error obteniendo vehículo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Crear nuevo vehículo\r\nexport const createVehicle = async (vehicleData) => {\r\n  try {\r\n    return await supabaseVehicleService.createVehicle(vehicleData);\r\n  } catch (error) {\r\n    console.error('Error creando vehículo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Actualizar vehículo\r\nexport const updateVehicle = async (id, vehicleData) => {\r\n  try {\r\n    return await supabaseVehicleService.updateVehicle(id, vehicleData);\r\n  } catch (error) {\r\n    console.error('Error actualizando vehículo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Eliminar vehículo\r\nexport const deleteVehicle = async (id) => {\r\n  try {\r\n    return await supabaseVehicleService.deleteVehicle(id);\r\n  } catch (error) {\r\n    console.error('Error eliminando vehículo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener vehículos destacados\r\nexport const getFeaturedVehicles = async (limit = 6) => {\r\n  try {\r\n    return await supabaseVehicleService.getFeaturedVehicles(limit);\r\n  } catch (error) {\r\n    console.error('Error obteniendo vehículos destacados:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener vehículos en promoción\r\nexport const getPromotionVehicles = async (limit = 6) => {\r\n  try {\r\n    return await supabaseVehicleService.getPromotionVehicles(limit);\r\n  } catch (error) {\r\n    console.error('Error obteniendo vehículos en promoción:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener vehículos similares\r\nexport const getSimilarVehicles = async (currentVehicle, limit = 4) => {\r\n  try {\r\n    return await supabaseVehicleService.getSimilarVehicles(currentVehicle, limit);\r\n  } catch (error) {\r\n    console.error('Error obteniendo vehículos similares:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener estadísticas de vehículos\r\nexport const getVehicleStats = async () => {\r\n  try {\r\n    return await statisticsService.getStatistics();\r\n  } catch (error) {\r\n    console.error('Error obteniendo estadísticas:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Función helper para subir imágenes a Supabase\r\nexport const uploadImage = async (file, vehicleId, imageIndex) => {\r\n  try {\r\n    return await supabaseVehicleService.uploadVehicleImage(file, vehicleId, imageIndex);\r\n  } catch (error) {\r\n    console.error('Error subiendo imagen:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Función helper para eliminar imágenes\r\nexport const deleteImage = async (imageUrl) => {\r\n  // Extraer path de la URL de Supabase\r\n  const path = imageUrl.split('/storage/v1/object/public/vehicle-images/')[1];\r\n  if (path) {\r\n    const { deleteVehicleImage } = await import('../supabase/config');\r\n    return await deleteVehicleImage(path);\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
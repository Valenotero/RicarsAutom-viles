{"ast":null,"code":"// Servicio para interactuar con Supabase\nimport { supabase } from '../supabase/config';\n\n// ==================== SERVICIO DE AUTENTICACIÓN ====================\nexport const authService = {\n  // Registrar usuario\n  async signUp(email, password, displayName) {\n    const {\n      data,\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: {\n          display_name: displayName\n        }\n      }\n    });\n    if (error) throw error;\n    return data;\n  },\n  // Iniciar sesión\n  async signIn(email, password) {\n    const {\n      data,\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) throw error;\n    return data;\n  },\n  // Cerrar sesión\n  async signOut() {\n    const {\n      error\n    } = await supabase.auth.signOut();\n    if (error) throw error;\n  },\n  // Obtener sesión actual\n  async getSession() {\n    const {\n      data: {\n        session\n      }\n    } = await supabase.auth.getSession();\n    return session;\n  },\n  // Obtener perfil de usuario - simplificado\n  async getUserProfile(userId) {\n    console.log('🔍 Buscando perfil para userId:', userId);\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('profiles').select('*').eq('id', userId).single();\n      if (error) {\n        var _user$user_metadata;\n        console.warn('⚠️ Error obteniendo perfil de DB:', error);\n\n        // Fallback: obtener usuario actual\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        if ((user === null || user === void 0 ? void 0 : user.email) === 'oterov101@gmail.com') {\n          console.log('🔑 Retornando perfil owner para oterov101@gmail.com');\n          return {\n            id: userId,\n            email: 'oterov101@gmail.com',\n            display_name: 'Administrador Principal',\n            role: 'owner'\n          };\n        }\n\n        // Para otros usuarios, retornar perfil básico\n        return {\n          id: userId,\n          email: (user === null || user === void 0 ? void 0 : user.email) || 'usuario@example.com',\n          display_name: (user === null || user === void 0 ? void 0 : (_user$user_metadata = user.user_metadata) === null || _user$user_metadata === void 0 ? void 0 : _user$user_metadata.display_name) || 'Usuario',\n          role: 'cliente'\n        };\n      }\n      console.log('✅ Perfil encontrado:', data);\n      return data;\n    } catch (error) {\n      var _user$user_metadata2;\n      console.warn('⚠️ Error en getUserProfile, usando fallback:', error);\n\n      // Fallback básico\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      return {\n        id: userId,\n        email: (user === null || user === void 0 ? void 0 : user.email) || 'usuario@example.com',\n        display_name: (user === null || user === void 0 ? void 0 : (_user$user_metadata2 = user.user_metadata) === null || _user$user_metadata2 === void 0 ? void 0 : _user$user_metadata2.display_name) || 'Usuario',\n        role: (user === null || user === void 0 ? void 0 : user.email) === 'oterov101@gmail.com' ? 'owner' : 'cliente'\n      };\n    }\n  },\n  // Escuchar cambios de autenticación\n  onAuthStateChange(callback) {\n    return supabase.auth.onAuthStateChange(callback);\n  },\n  // Restablecer contraseña\n  async resetPassword(email) {\n    const {\n      error\n    } = await supabase.auth.resetPasswordForEmail(email);\n    if (error) throw error;\n  }\n};\n\n// ==================== SERVICIO DE VEHÍCULOS ====================\nexport const vehicleService = {\n  // Obtener todos los vehículos con filtros\n  async getVehicles(filters = {}) {\n    let query = supabase.from('vehicles').select('*');\n\n    // Aplicar filtros\n    if (filters.brand) {\n      query = query.ilike('brand', `%${filters.brand}%`);\n    }\n    if (filters.model) {\n      query = query.ilike('model', `%${filters.model}%`);\n    }\n    if (filters.type) {\n      query = query.eq('type', filters.type);\n    }\n    if (filters.condition) {\n      query = query.eq('condition', filters.condition);\n    }\n    if (filters.transmission) {\n      query = query.eq('transmission', filters.transmission);\n    }\n    if (filters.fuelType) {\n      query = query.eq('fuel_type', filters.fuelType);\n    }\n    if (filters.minPrice) {\n      query = query.gte('price', filters.minPrice);\n    }\n    if (filters.maxPrice) {\n      query = query.lte('price', filters.maxPrice);\n    }\n    if (filters.minYear) {\n      query = query.gte('year', filters.minYear);\n    }\n    if (filters.maxYear) {\n      query = query.lte('year', filters.maxYear);\n    }\n\n    // Ordenamiento\n    if (filters.sortBy) {\n      const direction = filters.sortOrder === 'desc' ? false : true;\n      query = query.order(filters.sortBy, {\n        ascending: direction\n      });\n    } else {\n      query = query.order('created_at', {\n        ascending: false\n      });\n    }\n\n    // Límite\n    if (filters.limit) {\n      query = query.limit(filters.limit);\n    }\n    const {\n      data,\n      error\n    } = await query;\n    if (error) {\n      var _error$message, _error$message2, _error$message3;\n      console.error('❌ Error en query Supabase:', error);\n      console.error('❌ Detalles del error:', error);\n\n      // Si hay error de permisos o conexión, lanzar el error\n      if ((_error$message = error.message) !== null && _error$message !== void 0 && _error$message.includes('RLS') || (_error$message2 = error.message) !== null && _error$message2 !== void 0 && _error$message2.includes('policy') || (_error$message3 = error.message) !== null && _error$message3 !== void 0 && _error$message3.includes('permission')) {\n        console.log('🔒 Error de permisos RLS, necesario revisar configuración');\n      }\n      throw error;\n    }\n    console.log('✅ Query exitosa, datos recibidos:', (data === null || data === void 0 ? void 0 : data.length) || 0);\n    return data || [];\n  },\n  // Obtener vehículo por ID\n  async getVehicleById(id) {\n    // Incrementar contador de vistas\n    await supabase.rpc('increment_vehicle_views', {\n      vehicle_id: id\n    });\n    const {\n      data,\n      error\n    } = await supabase.from('vehicles').select('*').eq('id', id).single();\n    if (error) throw error;\n    return data;\n  },\n  // Crear nuevo vehículo\n  async createVehicle(vehicleData) {\n    console.log('🔍 Datos recibidos en createVehicle:', vehicleData);\n    const {\n      data,\n      error\n    } = await supabase.from('vehicles').insert([{\n      brand: vehicleData.brand,\n      model: vehicleData.model,\n      year: vehicleData.year,\n      kilometers: vehicleData.kilometers,\n      price: vehicleData.price,\n      price_ars: vehicleData.price_ars,\n      // Corregido\n      condition: vehicleData.condition,\n      transmission: vehicleData.transmission,\n      fuel_type: vehicleData.fuel_type,\n      // Corregido\n      color: vehicleData.color,\n      type: vehicleData.type,\n      location: vehicleData.location,\n      engine: vehicleData.engine,\n      power: vehicleData.power,\n      features: vehicleData.features || [],\n      images: vehicleData.images || [],\n      is_featured: vehicleData.is_featured || false,\n      // Corregido\n      is_promotion: vehicleData.is_promotion || false // Corregido\n    }]).select().single();\n    if (error) {\n      console.error('❌ Error en createVehicle:', error);\n      throw error;\n    }\n    console.log('✅ Vehículo creado exitosamente:', data);\n    return data;\n  },\n  // Actualizar vehículo\n  async updateVehicle(id, vehicleData) {\n    const {\n      data,\n      error\n    } = await supabase.from('vehicles').update({\n      brand: vehicleData.brand,\n      model: vehicleData.model,\n      year: vehicleData.year,\n      kilometers: vehicleData.kilometers,\n      price: vehicleData.price,\n      price_ars: vehicleData.priceARS,\n      condition: vehicleData.condition,\n      transmission: vehicleData.transmission,\n      fuel_type: vehicleData.fuelType,\n      color: vehicleData.color,\n      type: vehicleData.type,\n      location: vehicleData.location,\n      engine: vehicleData.engine,\n      power: vehicleData.power,\n      features: vehicleData.features,\n      images: vehicleData.images,\n      is_featured: vehicleData.isFeatured,\n      is_promotion: vehicleData.isPromotion\n    }).eq('id', id).select().single();\n    if (error) throw error;\n    return data;\n  },\n  // Eliminar vehículo\n  async deleteVehicle(id) {\n    // Primero obtener el vehículo para ver sus imágenes\n    const {\n      data: vehicle,\n      error: fetchError\n    } = await supabase.from('vehicles').select('images').eq('id', id).single();\n    if (fetchError) {\n      console.error('Error obteniendo vehículo:', fetchError);\n    }\n\n    // Eliminar el vehículo de la base de datos\n    const {\n      error: deleteError\n    } = await supabase.from('vehicles').delete().eq('id', id);\n    if (deleteError) throw deleteError;\n\n    // Eliminar las imágenes del storage si existen\n    if (vehicle && vehicle.images && vehicle.images.length > 0) {\n      console.log('🗑️ Eliminando imágenes del vehículo:', vehicle.images.length);\n      for (const imageUrl of vehicle.images) {\n        try {\n          // Extraer el path de la imagen de la URL\n          const urlParts = imageUrl.split('/');\n          const fileName = urlParts[urlParts.length - 1];\n          const filePath = `vehicles/${fileName}`;\n          console.log('🗑️ Eliminando imagen:', filePath);\n          const {\n            error: storageError\n          } = await supabase.storage.from('vehicle-images').remove([filePath]);\n          if (storageError) {\n            console.error('❌ Error eliminando imagen:', storageError);\n          } else {\n            console.log('✅ Imagen eliminada exitosamente:', filePath);\n          }\n        } catch (imageError) {\n          console.error('❌ Error procesando imagen:', imageError);\n        }\n      }\n    }\n    console.log('✅ Vehículo e imágenes eliminados exitosamente');\n  },\n  // Obtener vehículos destacados\n  async getFeaturedVehicles(limit = 6) {\n    const {\n      data,\n      error\n    } = await supabase.from('vehicles').select('*').eq('is_featured', true).order('created_at', {\n      ascending: false\n    }).limit(limit);\n    if (error) throw error;\n    return data;\n  },\n  // Obtener vehículos en promoción\n  async getPromotionVehicles(limit = 6) {\n    const {\n      data,\n      error\n    } = await supabase.from('vehicles').select('*').eq('is_promotion', true).order('created_at', {\n      ascending: false\n    }).limit(limit);\n    if (error) throw error;\n    return data;\n  },\n  // Obtener vehículos similares\n  async getSimilarVehicles(currentVehicle, limit = 4) {\n    const {\n      data,\n      error\n    } = await supabase.from('vehicles').select('*').neq('id', currentVehicle.id).or(`brand.eq.${currentVehicle.brand},type.eq.${currentVehicle.type}`).order('created_at', {\n      ascending: false\n    }).limit(limit);\n    if (error) throw error;\n    return data;\n  },\n  // Subir imagen de vehículo\n  async uploadVehicleImage(file, vehicleId, imageIndex) {\n    console.log('📤 Iniciando subida de imagen:', {\n      fileName: file.name,\n      fileSize: file.size,\n      vehicleId,\n      imageIndex\n    });\n    const fileExt = file.name.split('.').pop();\n    const fileName = `${vehicleId}-${imageIndex}.${fileExt}`;\n    const filePath = `vehicles/${fileName}`;\n    console.log('📁 Ruta de archivo:', filePath);\n    const {\n      data,\n      error\n    } = await supabase.storage.from('vehicle-images').upload(filePath, file);\n    if (error) {\n      console.error('❌ Error subiendo imagen:', error);\n      console.error('❌ Detalles del error:', {\n        message: error.message,\n        statusCode: error.statusCode,\n        error: error.error\n      });\n      throw error;\n    }\n    console.log('✅ Imagen subida exitosamente:', data);\n\n    // Obtener URL pública\n    const {\n      data: {\n        publicUrl\n      }\n    } = supabase.storage.from('vehicle-images').getPublicUrl(filePath);\n    console.log('🔗 URL pública generada:', publicUrl);\n    return publicUrl;\n  }\n};\n\n// ==================== SERVICIO DE ESTADÍSTICAS ====================\nexport const statisticsService = {\n  async getStatistics() {\n    // Obtener total de vehículos\n    const {\n      count: totalVehicles\n    } = await supabase.from('vehicles').select('*', {\n      count: 'exact',\n      head: true\n    });\n\n    // Obtener vehículos destacados\n    const {\n      count: featuredVehicles\n    } = await supabase.from('vehicles').select('*', {\n      count: 'exact',\n      head: true\n    }).eq('is_featured', true);\n\n    // Obtener vehículos en promoción\n    const {\n      count: promotionVehicles\n    } = await supabase.from('vehicles').select('*', {\n      count: 'exact',\n      head: true\n    }).eq('is_promotion', true);\n\n    // Obtener total de vistas\n    const {\n      data: viewsData\n    } = await supabase.from('vehicles').select('views');\n    const totalViews = (viewsData === null || viewsData === void 0 ? void 0 : viewsData.reduce((sum, vehicle) => sum + (vehicle.views || 0), 0)) || 0;\n    return {\n      totalVehicles: totalVehicles || 0,\n      totalViews,\n      featuredVehicles: featuredVehicles || 0,\n      promotionVehicles: promotionVehicles || 0\n    };\n  },\n  // Obtener estadísticas de distribución por condición\n  async getVehicleConditionStats() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.rpc('get_vehicle_condition_stats');\n      if (error) throw error;\n      return data[0] || {\n        new_vehicles: 0,\n        used_vehicles: 0,\n        total_vehicles: 0\n      };\n    } catch (error) {\n      console.error('Error obteniendo estadísticas de condición:', error);\n      return {\n        new_vehicles: 0,\n        used_vehicles: 0,\n        total_vehicles: 0\n      };\n    }\n  },\n  // Obtener estadísticas de vistas de blog\n  async getBlogViewsStats() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.rpc('get_blog_views_stats');\n      if (error) throw error;\n      return data[0] || {\n        total_views: 0,\n        total_articles: 0,\n        avg_views_per_article: 0\n      };\n    } catch (error) {\n      console.error('Error obteniendo estadísticas de blog:', error);\n      return {\n        total_views: 0,\n        total_articles: 0,\n        avg_views_per_article: 0\n      };\n    }\n  },\n  // Obtener estadísticas generales mejoradas\n  async getEnhancedVehicleStats() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.rpc('get_enhanced_vehicle_stats');\n      if (error) throw error;\n      return data[0] || {\n        total_vehicles: 0,\n        total_views: 0,\n        featured_vehicles: 0,\n        promotion_vehicles: 0,\n        new_vehicles: 0,\n        used_vehicles: 0\n      };\n    } catch (error) {\n      console.error('Error obteniendo estadísticas mejoradas:', error);\n      return {\n        total_vehicles: 0,\n        total_views: 0,\n        featured_vehicles: 0,\n        promotion_vehicles: 0,\n        new_vehicles: 0,\n        used_vehicles: 0\n      };\n    }\n  },\n  // Obtener estadísticas de vistas de galería\n  async getGalleryViewsStats() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.rpc('get_gallery_views_stats');\n      if (error) throw error;\n      return data[0] || {\n        total_views: 0,\n        total_items: 0,\n        avg_views_per_item: 0,\n        total_unique_visitors: 0\n      };\n    } catch (error) {\n      console.error('Error obteniendo estadísticas de galería:', error);\n      return {\n        total_views: 0,\n        total_items: 0,\n        avg_views_per_item: 0,\n        total_unique_visitors: 0\n      };\n    }\n  }\n};","map":{"version":3,"names":["supabase","authService","signUp","email","password","displayName","data","error","auth","options","display_name","signIn","signInWithPassword","signOut","getSession","session","getUserProfile","userId","console","log","from","select","eq","single","_user$user_metadata","warn","user","getUser","id","role","user_metadata","_user$user_metadata2","onAuthStateChange","callback","resetPassword","resetPasswordForEmail","vehicleService","getVehicles","filters","query","brand","ilike","model","type","condition","transmission","fuelType","minPrice","gte","maxPrice","lte","minYear","maxYear","sortBy","direction","sortOrder","order","ascending","limit","_error$message","_error$message2","_error$message3","message","includes","length","getVehicleById","rpc","vehicle_id","createVehicle","vehicleData","insert","year","kilometers","price","price_ars","fuel_type","color","location","engine","power","features","images","is_featured","is_promotion","updateVehicle","update","priceARS","isFeatured","isPromotion","deleteVehicle","vehicle","fetchError","deleteError","delete","imageUrl","urlParts","split","fileName","filePath","storageError","storage","remove","imageError","getFeaturedVehicles","getPromotionVehicles","getSimilarVehicles","currentVehicle","neq","or","uploadVehicleImage","file","vehicleId","imageIndex","name","fileSize","size","fileExt","pop","upload","statusCode","publicUrl","getPublicUrl","statisticsService","getStatistics","count","totalVehicles","head","featuredVehicles","promotionVehicles","viewsData","totalViews","reduce","sum","views","getVehicleConditionStats","new_vehicles","used_vehicles","total_vehicles","getBlogViewsStats","total_views","total_articles","avg_views_per_article","getEnhancedVehicleStats","featured_vehicles","promotion_vehicles","getGalleryViewsStats","total_items","avg_views_per_item","total_unique_visitors"],"sources":["C:/Users/otero/OneDrive/Escritorio/Paginas Web/ri cars automotores/src/services/supabaseService.js"],"sourcesContent":["// Servicio para interactuar con Supabase\r\nimport { supabase } from '../supabase/config';\r\n\r\n// ==================== SERVICIO DE AUTENTICACIÓN ====================\r\nexport const authService = {\r\n  // Registrar usuario\r\n  async signUp(email, password, displayName) {\r\n    const { data, error } = await supabase.auth.signUp({\r\n      email,\r\n      password,\r\n      options: {\r\n        data: {\r\n          display_name: displayName\r\n        }\r\n      }\r\n    });\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Iniciar sesión\r\n  async signIn(email, password) {\r\n    const { data, error } = await supabase.auth.signInWithPassword({\r\n      email,\r\n      password\r\n    });\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Cerrar sesión\r\n  async signOut() {\r\n    const { error } = await supabase.auth.signOut();\r\n    if (error) throw error;\r\n  },\r\n\r\n  // Obtener sesión actual\r\n  async getSession() {\r\n    const { data: { session } } = await supabase.auth.getSession();\r\n    return session;\r\n  },\r\n\r\n  // Obtener perfil de usuario - simplificado\r\n  async getUserProfile(userId) {\r\n    console.log('🔍 Buscando perfil para userId:', userId);\r\n    \r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('profiles')\r\n        .select('*')\r\n        .eq('id', userId)\r\n        .single();\r\n\r\n      if (error) {\r\n        console.warn('⚠️ Error obteniendo perfil de DB:', error);\r\n        \r\n        // Fallback: obtener usuario actual\r\n        const { data: { user } } = await supabase.auth.getUser();\r\n        if (user?.email === 'oterov101@gmail.com') {\r\n          console.log('🔑 Retornando perfil owner para oterov101@gmail.com');\r\n          return {\r\n            id: userId,\r\n            email: 'oterov101@gmail.com',\r\n            display_name: 'Administrador Principal',\r\n            role: 'owner'\r\n          };\r\n        }\r\n        \r\n        // Para otros usuarios, retornar perfil básico\r\n        return {\r\n          id: userId,\r\n          email: user?.email || 'usuario@example.com',\r\n          display_name: user?.user_metadata?.display_name || 'Usuario',\r\n          role: 'cliente'\r\n        };\r\n      }\r\n\r\n      console.log('✅ Perfil encontrado:', data);\r\n      return data;\r\n    } catch (error) {\r\n      console.warn('⚠️ Error en getUserProfile, usando fallback:', error);\r\n      \r\n      // Fallback básico\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      return {\r\n        id: userId,\r\n        email: user?.email || 'usuario@example.com',\r\n        display_name: user?.user_metadata?.display_name || 'Usuario',\r\n        role: user?.email === 'oterov101@gmail.com' ? 'owner' : 'cliente'\r\n      };\r\n    }\r\n  },\r\n\r\n  // Escuchar cambios de autenticación\r\n  onAuthStateChange(callback) {\r\n    return supabase.auth.onAuthStateChange(callback);\r\n  },\r\n\r\n  // Restablecer contraseña\r\n  async resetPassword(email) {\r\n    const { error } = await supabase.auth.resetPasswordForEmail(email);\r\n    if (error) throw error;\r\n  }\r\n};\r\n\r\n// ==================== SERVICIO DE VEHÍCULOS ====================\r\nexport const vehicleService = {\r\n  // Obtener todos los vehículos con filtros\r\n  async getVehicles(filters = {}) {\r\n    \r\n    let query = supabase.from('vehicles').select('*');\r\n\r\n    // Aplicar filtros\r\n    if (filters.brand) {\r\n      query = query.ilike('brand', `%${filters.brand}%`);\r\n    }\r\n    if (filters.model) {\r\n      query = query.ilike('model', `%${filters.model}%`);\r\n    }\r\n    if (filters.type) {\r\n      query = query.eq('type', filters.type);\r\n    }\r\n    if (filters.condition) {\r\n      query = query.eq('condition', filters.condition);\r\n    }\r\n    if (filters.transmission) {\r\n      query = query.eq('transmission', filters.transmission);\r\n    }\r\n    if (filters.fuelType) {\r\n      query = query.eq('fuel_type', filters.fuelType);\r\n    }\r\n    if (filters.minPrice) {\r\n      query = query.gte('price', filters.minPrice);\r\n    }\r\n    if (filters.maxPrice) {\r\n      query = query.lte('price', filters.maxPrice);\r\n    }\r\n    if (filters.minYear) {\r\n      query = query.gte('year', filters.minYear);\r\n    }\r\n    if (filters.maxYear) {\r\n      query = query.lte('year', filters.maxYear);\r\n    }\r\n\r\n    // Ordenamiento\r\n    if (filters.sortBy) {\r\n      const direction = filters.sortOrder === 'desc' ? false : true;\r\n      query = query.order(filters.sortBy, { ascending: direction });\r\n    } else {\r\n      query = query.order('created_at', { ascending: false });\r\n    }\r\n\r\n    // Límite\r\n    if (filters.limit) {\r\n      query = query.limit(filters.limit);\r\n    }\r\n\r\n    const { data, error } = await query;\r\n    \r\n    if (error) {\r\n      console.error('❌ Error en query Supabase:', error);\r\n      console.error('❌ Detalles del error:', error);\r\n      \r\n      // Si hay error de permisos o conexión, lanzar el error\r\n      if (error.message?.includes('RLS') || error.message?.includes('policy') || error.message?.includes('permission')) {\r\n        console.log('🔒 Error de permisos RLS, necesario revisar configuración');\r\n      }\r\n      \r\n      throw error;\r\n    }\r\n    \r\n    console.log('✅ Query exitosa, datos recibidos:', data?.length || 0);\r\n    return data || [];\r\n  },\r\n\r\n  // Obtener vehículo por ID\r\n  async getVehicleById(id) {\r\n    // Incrementar contador de vistas\r\n    await supabase.rpc('increment_vehicle_views', { vehicle_id: id });\r\n\r\n    const { data, error } = await supabase\r\n      .from('vehicles')\r\n      .select('*')\r\n      .eq('id', id)\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Crear nuevo vehículo\r\n  async createVehicle(vehicleData) {\r\n    console.log('🔍 Datos recibidos en createVehicle:', vehicleData);\r\n    \r\n    const { data, error } = await supabase\r\n      .from('vehicles')\r\n      .insert([{\r\n        brand: vehicleData.brand,\r\n        model: vehicleData.model,\r\n        year: vehicleData.year,\r\n        kilometers: vehicleData.kilometers,\r\n        price: vehicleData.price,\r\n        price_ars: vehicleData.price_ars, // Corregido\r\n        condition: vehicleData.condition,\r\n        transmission: vehicleData.transmission,\r\n        fuel_type: vehicleData.fuel_type, // Corregido\r\n        color: vehicleData.color,\r\n        type: vehicleData.type,\r\n        location: vehicleData.location,\r\n        engine: vehicleData.engine,\r\n        power: vehicleData.power,\r\n        features: vehicleData.features || [],\r\n        images: vehicleData.images || [],\r\n        is_featured: vehicleData.is_featured || false, // Corregido\r\n        is_promotion: vehicleData.is_promotion || false // Corregido\r\n      }])\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('❌ Error en createVehicle:', error);\r\n      throw error;\r\n    }\r\n    console.log('✅ Vehículo creado exitosamente:', data);\r\n    return data;\r\n  },\r\n\r\n  // Actualizar vehículo\r\n  async updateVehicle(id, vehicleData) {\r\n    const { data, error } = await supabase\r\n      .from('vehicles')\r\n      .update({\r\n        brand: vehicleData.brand,\r\n        model: vehicleData.model,\r\n        year: vehicleData.year,\r\n        kilometers: vehicleData.kilometers,\r\n        price: vehicleData.price,\r\n        price_ars: vehicleData.priceARS,\r\n        condition: vehicleData.condition,\r\n        transmission: vehicleData.transmission,\r\n        fuel_type: vehicleData.fuelType,\r\n        color: vehicleData.color,\r\n        type: vehicleData.type,\r\n        location: vehicleData.location,\r\n        engine: vehicleData.engine,\r\n        power: vehicleData.power,\r\n        features: vehicleData.features,\r\n        images: vehicleData.images,\r\n        is_featured: vehicleData.isFeatured,\r\n        is_promotion: vehicleData.isPromotion\r\n      })\r\n      .eq('id', id)\r\n      .select()\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Eliminar vehículo\r\n  async deleteVehicle(id) {\r\n    // Primero obtener el vehículo para ver sus imágenes\r\n    const { data: vehicle, error: fetchError } = await supabase\r\n      .from('vehicles')\r\n      .select('images')\r\n      .eq('id', id)\r\n      .single();\r\n\r\n    if (fetchError) {\r\n      console.error('Error obteniendo vehículo:', fetchError);\r\n    }\r\n\r\n    // Eliminar el vehículo de la base de datos\r\n    const { error: deleteError } = await supabase\r\n      .from('vehicles')\r\n      .delete()\r\n      .eq('id', id);\r\n\r\n    if (deleteError) throw deleteError;\r\n\r\n    // Eliminar las imágenes del storage si existen\r\n    if (vehicle && vehicle.images && vehicle.images.length > 0) {\r\n      console.log('🗑️ Eliminando imágenes del vehículo:', vehicle.images.length);\r\n      \r\n      for (const imageUrl of vehicle.images) {\r\n        try {\r\n          // Extraer el path de la imagen de la URL\r\n          const urlParts = imageUrl.split('/');\r\n          const fileName = urlParts[urlParts.length - 1];\r\n          const filePath = `vehicles/${fileName}`;\r\n          \r\n          console.log('🗑️ Eliminando imagen:', filePath);\r\n          \r\n          const { error: storageError } = await supabase.storage\r\n            .from('vehicle-images')\r\n            .remove([filePath]);\r\n          \r\n          if (storageError) {\r\n            console.error('❌ Error eliminando imagen:', storageError);\r\n          } else {\r\n            console.log('✅ Imagen eliminada exitosamente:', filePath);\r\n          }\r\n        } catch (imageError) {\r\n          console.error('❌ Error procesando imagen:', imageError);\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log('✅ Vehículo e imágenes eliminados exitosamente');\r\n  },\r\n\r\n  // Obtener vehículos destacados\r\n  async getFeaturedVehicles(limit = 6) {\r\n    const { data, error } = await supabase\r\n      .from('vehicles')\r\n      .select('*')\r\n      .eq('is_featured', true)\r\n      .order('created_at', { ascending: false })\r\n      .limit(limit);\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Obtener vehículos en promoción\r\n  async getPromotionVehicles(limit = 6) {\r\n    const { data, error } = await supabase\r\n      .from('vehicles')\r\n      .select('*')\r\n      .eq('is_promotion', true)\r\n      .order('created_at', { ascending: false })\r\n      .limit(limit);\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Obtener vehículos similares\r\n  async getSimilarVehicles(currentVehicle, limit = 4) {\r\n    const { data, error } = await supabase\r\n      .from('vehicles')\r\n      .select('*')\r\n      .neq('id', currentVehicle.id)\r\n      .or(`brand.eq.${currentVehicle.brand},type.eq.${currentVehicle.type}`)\r\n      .order('created_at', { ascending: false })\r\n      .limit(limit);\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Subir imagen de vehículo\r\n  async uploadVehicleImage(file, vehicleId, imageIndex) {\r\n    console.log('📤 Iniciando subida de imagen:', {\r\n      fileName: file.name,\r\n      fileSize: file.size,\r\n      vehicleId,\r\n      imageIndex\r\n    });\r\n\r\n    const fileExt = file.name.split('.').pop();\r\n    const fileName = `${vehicleId}-${imageIndex}.${fileExt}`;\r\n    const filePath = `vehicles/${fileName}`;\r\n\r\n    console.log('📁 Ruta de archivo:', filePath);\r\n\r\n    const { data, error } = await supabase.storage\r\n      .from('vehicle-images')\r\n      .upload(filePath, file);\r\n\r\n    if (error) {\r\n      console.error('❌ Error subiendo imagen:', error);\r\n      console.error('❌ Detalles del error:', {\r\n        message: error.message,\r\n        statusCode: error.statusCode,\r\n        error: error.error\r\n      });\r\n      throw error;\r\n    }\r\n\r\n    console.log('✅ Imagen subida exitosamente:', data);\r\n\r\n    // Obtener URL pública\r\n    const { data: { publicUrl } } = supabase.storage\r\n      .from('vehicle-images')\r\n      .getPublicUrl(filePath);\r\n\r\n    console.log('🔗 URL pública generada:', publicUrl);\r\n    return publicUrl;\r\n  }\r\n};\r\n\r\n// ==================== SERVICIO DE ESTADÍSTICAS ====================\r\nexport const statisticsService = {\r\n  async getStatistics() {\r\n    // Obtener total de vehículos\r\n    const { count: totalVehicles } = await supabase\r\n      .from('vehicles')\r\n      .select('*', { count: 'exact', head: true });\r\n\r\n    // Obtener vehículos destacados\r\n    const { count: featuredVehicles } = await supabase\r\n      .from('vehicles')\r\n      .select('*', { count: 'exact', head: true })\r\n      .eq('is_featured', true);\r\n\r\n    // Obtener vehículos en promoción\r\n    const { count: promotionVehicles } = await supabase\r\n      .from('vehicles')\r\n      .select('*', { count: 'exact', head: true })\r\n      .eq('is_promotion', true);\r\n\r\n    // Obtener total de vistas\r\n    const { data: viewsData } = await supabase\r\n      .from('vehicles')\r\n      .select('views');\r\n\r\n    const totalViews = viewsData?.reduce((sum, vehicle) => sum + (vehicle.views || 0), 0) || 0;\r\n\r\n    return {\r\n      totalVehicles: totalVehicles || 0,\r\n      totalViews,\r\n      featuredVehicles: featuredVehicles || 0,\r\n      promotionVehicles: promotionVehicles || 0\r\n    };\r\n  },\r\n\r\n  // Obtener estadísticas de distribución por condición\r\n  async getVehicleConditionStats() {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .rpc('get_vehicle_condition_stats');\r\n\r\n      if (error) throw error;\r\n      return data[0] || { new_vehicles: 0, used_vehicles: 0, total_vehicles: 0 };\r\n    } catch (error) {\r\n      console.error('Error obteniendo estadísticas de condición:', error);\r\n      return { new_vehicles: 0, used_vehicles: 0, total_vehicles: 0 };\r\n    }\r\n  },\r\n\r\n  // Obtener estadísticas de vistas de blog\r\n  async getBlogViewsStats() {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .rpc('get_blog_views_stats');\r\n\r\n      if (error) throw error;\r\n      return data[0] || { total_views: 0, total_articles: 0, avg_views_per_article: 0 };\r\n    } catch (error) {\r\n      console.error('Error obteniendo estadísticas de blog:', error);\r\n      return { total_views: 0, total_articles: 0, avg_views_per_article: 0 };\r\n    }\r\n  },\r\n\r\n  // Obtener estadísticas generales mejoradas\r\n  async getEnhancedVehicleStats() {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .rpc('get_enhanced_vehicle_stats');\r\n\r\n      if (error) throw error;\r\n      return data[0] || { \r\n        total_vehicles: 0, \r\n        total_views: 0, \r\n        featured_vehicles: 0, \r\n        promotion_vehicles: 0,\r\n        new_vehicles: 0,\r\n        used_vehicles: 0\r\n      };\r\n    } catch (error) {\r\n      console.error('Error obteniendo estadísticas mejoradas:', error);\r\n      return { \r\n        total_vehicles: 0, \r\n        total_views: 0, \r\n        featured_vehicles: 0, \r\n        promotion_vehicles: 0,\r\n        new_vehicles: 0,\r\n        used_vehicles: 0\r\n      };\r\n    }\r\n  },\r\n\r\n  // Obtener estadísticas de vistas de galería\r\n  async getGalleryViewsStats() {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .rpc('get_gallery_views_stats');\r\n\r\n      if (error) throw error;\r\n      return data[0] || { \r\n        total_views: 0, \r\n        total_items: 0, \r\n        avg_views_per_item: 0, \r\n        total_unique_visitors: 0 \r\n      };\r\n    } catch (error) {\r\n      console.error('Error obteniendo estadísticas de galería:', error);\r\n      return { \r\n        total_views: 0, \r\n        total_items: 0, \r\n        avg_views_per_item: 0, \r\n        total_unique_visitors: 0 \r\n      };\r\n    }\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
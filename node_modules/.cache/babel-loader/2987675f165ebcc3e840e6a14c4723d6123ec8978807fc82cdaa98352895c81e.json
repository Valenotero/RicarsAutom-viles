{"ast":null,"code":"import{vehicleService as supabaseVehicleService,statisticsService}from'./supabaseService';import{supabase}from'../supabase/config';// Cache simple en memoria\nlet vehicleCache=null;let cacheTime=null;const CACHE_DURATION=30000;// 30 segundos\n// Función para limpiar cache\nexport const clearVehicleCache=()=>{vehicleCache=null;cacheTime=null;console.log('🧹 Cache de vehículos limpiado');};// Obtener todos los vehículos\nexport const getVehicles=async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{console.log('🌐 getVehicles: Iniciando consulta...');// Consulta directa simplificada\nconst{data,error}=await supabase.from('vehicles').select('*').order('created_at',{ascending:false});if(error){console.error('❌ Error de Supabase:',error);// Si es error de tabla no existe, devolver array vacío\nif(error.message.includes('relation \"vehicles\" does not exist')){console.log('📝 Tabla \"vehicles\" no existe, devolviendo array vacío');return[];}throw error;}console.log('✅ Datos obtenidos de Supabase:',(data===null||data===void 0?void 0:data.length)||0);console.log('📋 Datos:',data);return data||[];}catch(error){console.error('❌ Error obteniendo vehículos:',error);// En lugar de lanzar error, devolver array vacío para que la app funcione\nreturn[];}};// Obtener un vehículo por ID\nexport const getVehicleById=async id=>{try{return await supabaseVehicleService.getVehicleById(id);}catch(error){console.error('Error obteniendo vehículo:',error);throw error;}};// Crear nuevo vehículo\nexport const createVehicle=async vehicleData=>{try{return await supabaseVehicleService.createVehicle(vehicleData);}catch(error){console.error('Error creando vehículo:',error);throw error;}};// Actualizar vehículo\nexport const updateVehicle=async(id,vehicleData)=>{try{return await supabaseVehicleService.updateVehicle(id,vehicleData);}catch(error){console.error('Error actualizando vehículo:',error);throw error;}};// Eliminar vehículo\nexport const deleteVehicle=async id=>{try{return await supabaseVehicleService.deleteVehicle(id);}catch(error){console.error('Error eliminando vehículo:',error);throw error;}};// Obtener vehículos destacados\nexport const getFeaturedVehicles=async function(){let limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:6;try{return await supabaseVehicleService.getFeaturedVehicles(limit);}catch(error){console.error('Error obteniendo vehículos destacados:',error);throw error;}};// Obtener vehículos en promoción\nexport const getPromotionVehicles=async function(){let limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:6;try{return await supabaseVehicleService.getPromotionVehicles(limit);}catch(error){console.error('Error obteniendo vehículos en promoción:',error);throw error;}};// Obtener vehículos similares\nexport const getSimilarVehicles=async function(currentVehicle){let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:4;try{return await supabaseVehicleService.getSimilarVehicles(currentVehicle,limit);}catch(error){console.error('Error obteniendo vehículos similares:',error);throw error;}};// Obtener estadísticas de vehículos\nexport const getVehicleStats=async()=>{try{return await statisticsService.getStatistics();}catch(error){console.error('Error obteniendo estadísticas:',error);throw error;}};// Función helper para subir imágenes a Supabase\nexport const uploadImage=async(file,vehicleId,imageIndex)=>{try{return await supabaseVehicleService.uploadVehicleImage(file,vehicleId,imageIndex);}catch(error){console.error('Error subiendo imagen:',error);throw error;}};// Función helper para eliminar imágenes\nexport const deleteImage=async imageUrl=>{// Extraer path de la URL de Supabase\nconst path=imageUrl.split('/storage/v1/object/public/vehicle-images/')[1];if(path){const{deleteVehicleImage}=await import('../supabase/config');return await deleteVehicleImage(path);}};","map":{"version":3,"names":["vehicleService","supabaseVehicleService","statisticsService","supabase","vehicleCache","cacheTime","CACHE_DURATION","clearVehicleCache","console","log","getVehicles","filters","arguments","length","undefined","data","error","from","select","order","ascending","message","includes","getVehicleById","id","createVehicle","vehicleData","updateVehicle","deleteVehicle","getFeaturedVehicles","limit","getPromotionVehicles","getSimilarVehicles","currentVehicle","getVehicleStats","getStatistics","uploadImage","file","vehicleId","imageIndex","uploadVehicleImage","deleteImage","imageUrl","path","split","deleteVehicleImage"],"sources":["C:/Users/otero/OneDrive/Escritorio/Paginas Web/ri cars automotores/src/services/vehicleService.js"],"sourcesContent":["import { vehicleService as supabaseVehicleService, statisticsService } from './supabaseService';\r\nimport { supabase } from '../supabase/config';\r\n\r\n// Cache simple en memoria\r\nlet vehicleCache = null;\r\nlet cacheTime = null;\r\nconst CACHE_DURATION = 30000; // 30 segundos\r\n\r\n// Función para limpiar cache\r\nexport const clearVehicleCache = () => {\r\n  vehicleCache = null;\r\n  cacheTime = null;\r\n  console.log('🧹 Cache de vehículos limpiado');\r\n};\r\n\r\n// Obtener todos los vehículos\r\nexport const getVehicles = async (filters = {}) => {\r\n  try {\r\n    console.log('🌐 getVehicles: Iniciando consulta...');\r\n    \r\n    // Consulta directa simplificada\r\n    const { data, error } = await supabase\r\n      .from('vehicles')\r\n      .select('*')\r\n      .order('created_at', { ascending: false });\r\n    \r\n    if (error) {\r\n      console.error('❌ Error de Supabase:', error);\r\n      // Si es error de tabla no existe, devolver array vacío\r\n      if (error.message.includes('relation \"vehicles\" does not exist')) {\r\n        console.log('📝 Tabla \"vehicles\" no existe, devolviendo array vacío');\r\n        return [];\r\n      }\r\n      throw error;\r\n    }\r\n    \r\n    console.log('✅ Datos obtenidos de Supabase:', data?.length || 0);\r\n    console.log('📋 Datos:', data);\r\n    \r\n    return data || [];\r\n  } catch (error) {\r\n    console.error('❌ Error obteniendo vehículos:', error);\r\n    // En lugar de lanzar error, devolver array vacío para que la app funcione\r\n    return [];\r\n  }\r\n};\r\n\r\n// Obtener un vehículo por ID\r\nexport const getVehicleById = async (id) => {\r\n  try {\r\n    return await supabaseVehicleService.getVehicleById(id);\r\n  } catch (error) {\r\n    console.error('Error obteniendo vehículo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Crear nuevo vehículo\r\nexport const createVehicle = async (vehicleData) => {\r\n  try {\r\n    return await supabaseVehicleService.createVehicle(vehicleData);\r\n  } catch (error) {\r\n    console.error('Error creando vehículo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Actualizar vehículo\r\nexport const updateVehicle = async (id, vehicleData) => {\r\n  try {\r\n    return await supabaseVehicleService.updateVehicle(id, vehicleData);\r\n  } catch (error) {\r\n    console.error('Error actualizando vehículo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Eliminar vehículo\r\nexport const deleteVehicle = async (id) => {\r\n  try {\r\n    return await supabaseVehicleService.deleteVehicle(id);\r\n  } catch (error) {\r\n    console.error('Error eliminando vehículo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener vehículos destacados\r\nexport const getFeaturedVehicles = async (limit = 6) => {\r\n  try {\r\n    return await supabaseVehicleService.getFeaturedVehicles(limit);\r\n  } catch (error) {\r\n    console.error('Error obteniendo vehículos destacados:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener vehículos en promoción\r\nexport const getPromotionVehicles = async (limit = 6) => {\r\n  try {\r\n    return await supabaseVehicleService.getPromotionVehicles(limit);\r\n  } catch (error) {\r\n    console.error('Error obteniendo vehículos en promoción:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener vehículos similares\r\nexport const getSimilarVehicles = async (currentVehicle, limit = 4) => {\r\n  try {\r\n    return await supabaseVehicleService.getSimilarVehicles(currentVehicle, limit);\r\n  } catch (error) {\r\n    console.error('Error obteniendo vehículos similares:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener estadísticas de vehículos\r\nexport const getVehicleStats = async () => {\r\n  try {\r\n    return await statisticsService.getStatistics();\r\n  } catch (error) {\r\n    console.error('Error obteniendo estadísticas:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Función helper para subir imágenes a Supabase\r\nexport const uploadImage = async (file, vehicleId, imageIndex) => {\r\n  try {\r\n    return await supabaseVehicleService.uploadVehicleImage(file, vehicleId, imageIndex);\r\n  } catch (error) {\r\n    console.error('Error subiendo imagen:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Función helper para eliminar imágenes\r\nexport const deleteImage = async (imageUrl) => {\r\n  // Extraer path de la URL de Supabase\r\n  const path = imageUrl.split('/storage/v1/object/public/vehicle-images/')[1];\r\n  if (path) {\r\n    const { deleteVehicleImage } = await import('../supabase/config');\r\n    return await deleteVehicleImage(path);\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
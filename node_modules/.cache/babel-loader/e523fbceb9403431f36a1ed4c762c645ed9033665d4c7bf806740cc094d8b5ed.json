{"ast":null,"code":"// Servicio para interactuar con Supabase\nimport { supabase } from '../supabase/config';\n\n// ==================== SERVICIO DE AUTENTICACIÓN ====================\nexport const authService = {\n  // Registrar usuario\n  async signUp(email, password, displayName) {\n    const {\n      data,\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: {\n          display_name: displayName\n        }\n      }\n    });\n    if (error) throw error;\n    return data;\n  },\n  // Iniciar sesión\n  async signIn(email, password) {\n    const {\n      data,\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) throw error;\n    return data;\n  },\n  // Cerrar sesión\n  async signOut() {\n    const {\n      error\n    } = await supabase.auth.signOut();\n    if (error) throw error;\n  },\n  // Obtener sesión actual\n  async getSession() {\n    const {\n      data: {\n        session\n      }\n    } = await supabase.auth.getSession();\n    return session;\n  },\n  // Obtener perfil de usuario\n  async getUserProfile(userId) {\n    const {\n      data,\n      error\n    } = await supabase.from('profiles').select('*').eq('id', userId).single();\n    if (error) throw error;\n    return data;\n  },\n  // Escuchar cambios de autenticación\n  onAuthStateChange(callback) {\n    return supabase.auth.onAuthStateChange(callback);\n  },\n  // Restablecer contraseña\n  async resetPassword(email) {\n    const {\n      error\n    } = await supabase.auth.resetPasswordForEmail(email);\n    if (error) throw error;\n  }\n};\n\n// ==================== SERVICIO DE VEHÍCULOS ====================\nexport const vehicleService = {\n  // Obtener todos los vehículos con filtros\n  async getVehicles(filters = {}) {\n    console.log('🔍 Supabase: Obteniendo vehículos con filtros:', filters);\n    let query = supabase.from('vehicles').select('*');\n\n    // Aplicar filtros\n    if (filters.brand) {\n      query = query.ilike('brand', `%${filters.brand}%`);\n    }\n    if (filters.model) {\n      query = query.ilike('model', `%${filters.model}%`);\n    }\n    if (filters.type) {\n      query = query.eq('type', filters.type);\n    }\n    if (filters.condition) {\n      query = query.eq('condition', filters.condition);\n    }\n    if (filters.transmission) {\n      query = query.eq('transmission', filters.transmission);\n    }\n    if (filters.fuelType) {\n      query = query.eq('fuel_type', filters.fuelType);\n    }\n    if (filters.minPrice) {\n      query = query.gte('price', filters.minPrice);\n    }\n    if (filters.maxPrice) {\n      query = query.lte('price', filters.maxPrice);\n    }\n    if (filters.minYear) {\n      query = query.gte('year', filters.minYear);\n    }\n    if (filters.maxYear) {\n      query = query.lte('year', filters.maxYear);\n    }\n\n    // Ordenamiento\n    if (filters.sortBy) {\n      const direction = filters.sortOrder === 'desc' ? false : true;\n      query = query.order(filters.sortBy, {\n        ascending: direction\n      });\n    } else {\n      query = query.order('created_at', {\n        ascending: false\n      });\n    }\n\n    // Límite\n    if (filters.limit) {\n      query = query.limit(filters.limit);\n    }\n    console.log('📡 Ejecutando query a Supabase...');\n    const {\n      data,\n      error\n    } = await query;\n    console.log('🔍 Respuesta completa de Supabase:');\n    console.log('- Data:', data);\n    console.log('- Error:', error);\n    console.log('- Data type:', typeof data);\n    console.log('- Data is null:', data === null);\n    console.log('- Data is array:', Array.isArray(data));\n    if (error) {\n      console.error('❌ Error en query Supabase:', error);\n      throw error;\n    }\n    console.log('✅ Datos recibidos de Supabase:', data);\n    console.log('📊 Cantidad de vehículos recibidos:', (data === null || data === void 0 ? void 0 : data.length) || 0);\n    return data;\n  },\n  // Obtener vehículo por ID\n  async getVehicleById(id) {\n    // Incrementar contador de vistas\n    await supabase.rpc('increment_vehicle_views', {\n      vehicle_id: id\n    });\n    const {\n      data,\n      error\n    } = await supabase.from('vehicles').select('*').eq('id', id).single();\n    if (error) throw error;\n    return data;\n  },\n  // Crear nuevo vehículo\n  async createVehicle(vehicleData) {\n    const {\n      data,\n      error\n    } = await supabase.from('vehicles').insert([{\n      brand: vehicleData.brand,\n      model: vehicleData.model,\n      year: vehicleData.year,\n      kilometers: vehicleData.kilometers,\n      price: vehicleData.price,\n      price_ars: vehicleData.priceARS,\n      condition: vehicleData.condition,\n      transmission: vehicleData.transmission,\n      fuel_type: vehicleData.fuelType,\n      color: vehicleData.color,\n      type: vehicleData.type,\n      location: vehicleData.location,\n      engine: vehicleData.engine,\n      power: vehicleData.power,\n      features: vehicleData.features || [],\n      images: vehicleData.images || [],\n      is_featured: vehicleData.isFeatured || false,\n      is_promotion: vehicleData.isPromotion || false\n    }]).select().single();\n    if (error) throw error;\n    return data;\n  },\n  // Actualizar vehículo\n  async updateVehicle(id, vehicleData) {\n    const {\n      data,\n      error\n    } = await supabase.from('vehicles').update({\n      brand: vehicleData.brand,\n      model: vehicleData.model,\n      year: vehicleData.year,\n      kilometers: vehicleData.kilometers,\n      price: vehicleData.price,\n      price_ars: vehicleData.priceARS,\n      condition: vehicleData.condition,\n      transmission: vehicleData.transmission,\n      fuel_type: vehicleData.fuelType,\n      color: vehicleData.color,\n      type: vehicleData.type,\n      location: vehicleData.location,\n      engine: vehicleData.engine,\n      power: vehicleData.power,\n      features: vehicleData.features,\n      images: vehicleData.images,\n      is_featured: vehicleData.isFeatured,\n      is_promotion: vehicleData.isPromotion\n    }).eq('id', id).select().single();\n    if (error) throw error;\n    return data;\n  },\n  // Eliminar vehículo\n  async deleteVehicle(id) {\n    const {\n      error\n    } = await supabase.from('vehicles').delete().eq('id', id);\n    if (error) throw error;\n  },\n  // Obtener vehículos destacados\n  async getFeaturedVehicles(limit = 6) {\n    const {\n      data,\n      error\n    } = await supabase.from('vehicles').select('*').eq('is_featured', true).order('created_at', {\n      ascending: false\n    }).limit(limit);\n    if (error) throw error;\n    return data;\n  },\n  // Obtener vehículos en promoción\n  async getPromotionVehicles(limit = 6) {\n    const {\n      data,\n      error\n    } = await supabase.from('vehicles').select('*').eq('is_promotion', true).order('created_at', {\n      ascending: false\n    }).limit(limit);\n    if (error) throw error;\n    return data;\n  },\n  // Obtener vehículos similares\n  async getSimilarVehicles(currentVehicle, limit = 4) {\n    const {\n      data,\n      error\n    } = await supabase.from('vehicles').select('*').neq('id', currentVehicle.id).or(`brand.eq.${currentVehicle.brand},type.eq.${currentVehicle.type}`).order('created_at', {\n      ascending: false\n    }).limit(limit);\n    if (error) throw error;\n    return data;\n  },\n  // Subir imagen de vehículo\n  async uploadVehicleImage(file, vehicleId, imageIndex) {\n    const fileExt = file.name.split('.').pop();\n    const fileName = `${vehicleId}-${imageIndex}.${fileExt}`;\n    const filePath = `vehicles/${fileName}`;\n    const {\n      data,\n      error\n    } = await supabase.storage.from('vehicle-images').upload(filePath, file);\n    if (error) throw error;\n\n    // Obtener URL pública\n    const {\n      data: {\n        publicUrl\n      }\n    } = supabase.storage.from('vehicle-images').getPublicUrl(filePath);\n    return publicUrl;\n  }\n};\n\n// ==================== SERVICIO DE ESTADÍSTICAS ====================\nexport const statisticsService = {\n  async getStatistics() {\n    // Obtener total de vehículos\n    const {\n      count: totalVehicles\n    } = await supabase.from('vehicles').select('*', {\n      count: 'exact',\n      head: true\n    });\n\n    // Obtener vehículos destacados\n    const {\n      count: featuredVehicles\n    } = await supabase.from('vehicles').select('*', {\n      count: 'exact',\n      head: true\n    }).eq('is_featured', true);\n\n    // Obtener vehículos en promoción\n    const {\n      count: promotionVehicles\n    } = await supabase.from('vehicles').select('*', {\n      count: 'exact',\n      head: true\n    }).eq('is_promotion', true);\n\n    // Obtener total de vistas\n    const {\n      data: viewsData\n    } = await supabase.from('vehicles').select('views');\n    const totalViews = (viewsData === null || viewsData === void 0 ? void 0 : viewsData.reduce((sum, vehicle) => sum + (vehicle.views || 0), 0)) || 0;\n    return {\n      totalVehicles: totalVehicles || 0,\n      totalViews,\n      featuredVehicles: featuredVehicles || 0,\n      promotionVehicles: promotionVehicles || 0\n    };\n  }\n};","map":{"version":3,"names":["supabase","authService","signUp","email","password","displayName","data","error","auth","options","display_name","signIn","signInWithPassword","signOut","getSession","session","getUserProfile","userId","from","select","eq","single","onAuthStateChange","callback","resetPassword","resetPasswordForEmail","vehicleService","getVehicles","filters","console","log","query","brand","ilike","model","type","condition","transmission","fuelType","minPrice","gte","maxPrice","lte","minYear","maxYear","sortBy","direction","sortOrder","order","ascending","limit","Array","isArray","length","getVehicleById","id","rpc","vehicle_id","createVehicle","vehicleData","insert","year","kilometers","price","price_ars","priceARS","fuel_type","color","location","engine","power","features","images","is_featured","isFeatured","is_promotion","isPromotion","updateVehicle","update","deleteVehicle","delete","getFeaturedVehicles","getPromotionVehicles","getSimilarVehicles","currentVehicle","neq","or","uploadVehicleImage","file","vehicleId","imageIndex","fileExt","name","split","pop","fileName","filePath","storage","upload","publicUrl","getPublicUrl","statisticsService","getStatistics","count","totalVehicles","head","featuredVehicles","promotionVehicles","viewsData","totalViews","reduce","sum","vehicle","views"],"sources":["C:/Users/otero/OneDrive/Escritorio/Paginas Web/ri cars automotores/src/services/supabaseService.js"],"sourcesContent":["// Servicio para interactuar con Supabase\r\nimport { supabase } from '../supabase/config';\r\n\r\n// ==================== SERVICIO DE AUTENTICACIÓN ====================\r\nexport const authService = {\r\n  // Registrar usuario\r\n  async signUp(email, password, displayName) {\r\n    const { data, error } = await supabase.auth.signUp({\r\n      email,\r\n      password,\r\n      options: {\r\n        data: {\r\n          display_name: displayName\r\n        }\r\n      }\r\n    });\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Iniciar sesión\r\n  async signIn(email, password) {\r\n    const { data, error } = await supabase.auth.signInWithPassword({\r\n      email,\r\n      password\r\n    });\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Cerrar sesión\r\n  async signOut() {\r\n    const { error } = await supabase.auth.signOut();\r\n    if (error) throw error;\r\n  },\r\n\r\n  // Obtener sesión actual\r\n  async getSession() {\r\n    const { data: { session } } = await supabase.auth.getSession();\r\n    return session;\r\n  },\r\n\r\n  // Obtener perfil de usuario\r\n  async getUserProfile(userId) {\r\n    const { data, error } = await supabase\r\n      .from('profiles')\r\n      .select('*')\r\n      .eq('id', userId)\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Escuchar cambios de autenticación\r\n  onAuthStateChange(callback) {\r\n    return supabase.auth.onAuthStateChange(callback);\r\n  },\r\n\r\n  // Restablecer contraseña\r\n  async resetPassword(email) {\r\n    const { error } = await supabase.auth.resetPasswordForEmail(email);\r\n    if (error) throw error;\r\n  }\r\n};\r\n\r\n// ==================== SERVICIO DE VEHÍCULOS ====================\r\nexport const vehicleService = {\r\n  // Obtener todos los vehículos con filtros\r\n  async getVehicles(filters = {}) {\r\n    console.log('🔍 Supabase: Obteniendo vehículos con filtros:', filters);\r\n    let query = supabase.from('vehicles').select('*');\r\n\r\n    // Aplicar filtros\r\n    if (filters.brand) {\r\n      query = query.ilike('brand', `%${filters.brand}%`);\r\n    }\r\n    if (filters.model) {\r\n      query = query.ilike('model', `%${filters.model}%`);\r\n    }\r\n    if (filters.type) {\r\n      query = query.eq('type', filters.type);\r\n    }\r\n    if (filters.condition) {\r\n      query = query.eq('condition', filters.condition);\r\n    }\r\n    if (filters.transmission) {\r\n      query = query.eq('transmission', filters.transmission);\r\n    }\r\n    if (filters.fuelType) {\r\n      query = query.eq('fuel_type', filters.fuelType);\r\n    }\r\n    if (filters.minPrice) {\r\n      query = query.gte('price', filters.minPrice);\r\n    }\r\n    if (filters.maxPrice) {\r\n      query = query.lte('price', filters.maxPrice);\r\n    }\r\n    if (filters.minYear) {\r\n      query = query.gte('year', filters.minYear);\r\n    }\r\n    if (filters.maxYear) {\r\n      query = query.lte('year', filters.maxYear);\r\n    }\r\n\r\n    // Ordenamiento\r\n    if (filters.sortBy) {\r\n      const direction = filters.sortOrder === 'desc' ? false : true;\r\n      query = query.order(filters.sortBy, { ascending: direction });\r\n    } else {\r\n      query = query.order('created_at', { ascending: false });\r\n    }\r\n\r\n    // Límite\r\n    if (filters.limit) {\r\n      query = query.limit(filters.limit);\r\n    }\r\n\r\n    console.log('📡 Ejecutando query a Supabase...');\r\n    const { data, error } = await query;\r\n    \r\n    console.log('🔍 Respuesta completa de Supabase:');\r\n    console.log('- Data:', data);\r\n    console.log('- Error:', error);\r\n    console.log('- Data type:', typeof data);\r\n    console.log('- Data is null:', data === null);\r\n    console.log('- Data is array:', Array.isArray(data));\r\n    \r\n    if (error) {\r\n      console.error('❌ Error en query Supabase:', error);\r\n      throw error;\r\n    }\r\n    \r\n    console.log('✅ Datos recibidos de Supabase:', data);\r\n    console.log('📊 Cantidad de vehículos recibidos:', data?.length || 0);\r\n    return data;\r\n  },\r\n\r\n  // Obtener vehículo por ID\r\n  async getVehicleById(id) {\r\n    // Incrementar contador de vistas\r\n    await supabase.rpc('increment_vehicle_views', { vehicle_id: id });\r\n\r\n    const { data, error } = await supabase\r\n      .from('vehicles')\r\n      .select('*')\r\n      .eq('id', id)\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Crear nuevo vehículo\r\n  async createVehicle(vehicleData) {\r\n    const { data, error } = await supabase\r\n      .from('vehicles')\r\n      .insert([{\r\n        brand: vehicleData.brand,\r\n        model: vehicleData.model,\r\n        year: vehicleData.year,\r\n        kilometers: vehicleData.kilometers,\r\n        price: vehicleData.price,\r\n        price_ars: vehicleData.priceARS,\r\n        condition: vehicleData.condition,\r\n        transmission: vehicleData.transmission,\r\n        fuel_type: vehicleData.fuelType,\r\n        color: vehicleData.color,\r\n        type: vehicleData.type,\r\n        location: vehicleData.location,\r\n        engine: vehicleData.engine,\r\n        power: vehicleData.power,\r\n        features: vehicleData.features || [],\r\n        images: vehicleData.images || [],\r\n        is_featured: vehicleData.isFeatured || false,\r\n        is_promotion: vehicleData.isPromotion || false\r\n      }])\r\n      .select()\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Actualizar vehículo\r\n  async updateVehicle(id, vehicleData) {\r\n    const { data, error } = await supabase\r\n      .from('vehicles')\r\n      .update({\r\n        brand: vehicleData.brand,\r\n        model: vehicleData.model,\r\n        year: vehicleData.year,\r\n        kilometers: vehicleData.kilometers,\r\n        price: vehicleData.price,\r\n        price_ars: vehicleData.priceARS,\r\n        condition: vehicleData.condition,\r\n        transmission: vehicleData.transmission,\r\n        fuel_type: vehicleData.fuelType,\r\n        color: vehicleData.color,\r\n        type: vehicleData.type,\r\n        location: vehicleData.location,\r\n        engine: vehicleData.engine,\r\n        power: vehicleData.power,\r\n        features: vehicleData.features,\r\n        images: vehicleData.images,\r\n        is_featured: vehicleData.isFeatured,\r\n        is_promotion: vehicleData.isPromotion\r\n      })\r\n      .eq('id', id)\r\n      .select()\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Eliminar vehículo\r\n  async deleteVehicle(id) {\r\n    const { error } = await supabase\r\n      .from('vehicles')\r\n      .delete()\r\n      .eq('id', id);\r\n\r\n    if (error) throw error;\r\n  },\r\n\r\n  // Obtener vehículos destacados\r\n  async getFeaturedVehicles(limit = 6) {\r\n    const { data, error } = await supabase\r\n      .from('vehicles')\r\n      .select('*')\r\n      .eq('is_featured', true)\r\n      .order('created_at', { ascending: false })\r\n      .limit(limit);\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Obtener vehículos en promoción\r\n  async getPromotionVehicles(limit = 6) {\r\n    const { data, error } = await supabase\r\n      .from('vehicles')\r\n      .select('*')\r\n      .eq('is_promotion', true)\r\n      .order('created_at', { ascending: false })\r\n      .limit(limit);\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Obtener vehículos similares\r\n  async getSimilarVehicles(currentVehicle, limit = 4) {\r\n    const { data, error } = await supabase\r\n      .from('vehicles')\r\n      .select('*')\r\n      .neq('id', currentVehicle.id)\r\n      .or(`brand.eq.${currentVehicle.brand},type.eq.${currentVehicle.type}`)\r\n      .order('created_at', { ascending: false })\r\n      .limit(limit);\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Subir imagen de vehículo\r\n  async uploadVehicleImage(file, vehicleId, imageIndex) {\r\n    const fileExt = file.name.split('.').pop();\r\n    const fileName = `${vehicleId}-${imageIndex}.${fileExt}`;\r\n    const filePath = `vehicles/${fileName}`;\r\n\r\n    const { data, error } = await supabase.storage\r\n      .from('vehicle-images')\r\n      .upload(filePath, file);\r\n\r\n    if (error) throw error;\r\n\r\n    // Obtener URL pública\r\n    const { data: { publicUrl } } = supabase.storage\r\n      .from('vehicle-images')\r\n      .getPublicUrl(filePath);\r\n\r\n    return publicUrl;\r\n  }\r\n};\r\n\r\n// ==================== SERVICIO DE ESTADÍSTICAS ====================\r\nexport const statisticsService = {\r\n  async getStatistics() {\r\n    // Obtener total de vehículos\r\n    const { count: totalVehicles } = await supabase\r\n      .from('vehicles')\r\n      .select('*', { count: 'exact', head: true });\r\n\r\n    // Obtener vehículos destacados\r\n    const { count: featuredVehicles } = await supabase\r\n      .from('vehicles')\r\n      .select('*', { count: 'exact', head: true })\r\n      .eq('is_featured', true);\r\n\r\n    // Obtener vehículos en promoción\r\n    const { count: promotionVehicles } = await supabase\r\n      .from('vehicles')\r\n      .select('*', { count: 'exact', head: true })\r\n      .eq('is_promotion', true);\r\n\r\n    // Obtener total de vistas\r\n    const { data: viewsData } = await supabase\r\n      .from('vehicles')\r\n      .select('views');\r\n\r\n    const totalViews = viewsData?.reduce((sum, vehicle) => sum + (vehicle.views || 0), 0) || 0;\r\n\r\n    return {\r\n      totalVehicles: totalVehicles || 0,\r\n      totalViews,\r\n      featuredVehicles: featuredVehicles || 0,\r\n      promotionVehicles: promotionVehicles || 0\r\n    };\r\n  }\r\n};"],"mappings":"AAAA;AACA,SAASA,QAAQ,QAAQ,oBAAoB;;AAE7C;AACA,OAAO,MAAMC,WAAW,GAAG;EACzB;EACA,MAAMC,MAAMA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,WAAW,EAAE;IACzC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAACN,MAAM,CAAC;MACjDC,KAAK;MACLC,QAAQ;MACRK,OAAO,EAAE;QACPH,IAAI,EAAE;UACJI,YAAY,EAAEL;QAChB;MACF;IACF,CAAC,CAAC;IAEF,IAAIE,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOD,IAAI;EACb,CAAC;EAED;EACA,MAAMK,MAAMA,CAACR,KAAK,EAAEC,QAAQ,EAAE;IAC5B,MAAM;MAAEE,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAACI,kBAAkB,CAAC;MAC7DT,KAAK;MACLC;IACF,CAAC,CAAC;IAEF,IAAIG,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOD,IAAI;EACb,CAAC;EAED;EACA,MAAMO,OAAOA,CAAA,EAAG;IACd,MAAM;MAAEN;IAAM,CAAC,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAACK,OAAO,CAAC,CAAC;IAC/C,IAAIN,KAAK,EAAE,MAAMA,KAAK;EACxB,CAAC;EAED;EACA,MAAMO,UAAUA,CAAA,EAAG;IACjB,MAAM;MAAER,IAAI,EAAE;QAAES;MAAQ;IAAE,CAAC,GAAG,MAAMf,QAAQ,CAACQ,IAAI,CAACM,UAAU,CAAC,CAAC;IAC9D,OAAOC,OAAO;EAChB,CAAC;EAED;EACA,MAAMC,cAAcA,CAACC,MAAM,EAAE;IAC3B,MAAM;MAAEX,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CACnCkB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,IAAI,EAAEH,MAAM,CAAC,CAChBI,MAAM,CAAC,CAAC;IAEX,IAAId,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOD,IAAI;EACb,CAAC;EAED;EACAgB,iBAAiBA,CAACC,QAAQ,EAAE;IAC1B,OAAOvB,QAAQ,CAACQ,IAAI,CAACc,iBAAiB,CAACC,QAAQ,CAAC;EAClD,CAAC;EAED;EACA,MAAMC,aAAaA,CAACrB,KAAK,EAAE;IACzB,MAAM;MAAEI;IAAM,CAAC,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAACiB,qBAAqB,CAACtB,KAAK,CAAC;IAClE,IAAII,KAAK,EAAE,MAAMA,KAAK;EACxB;AACF,CAAC;;AAED;AACA,OAAO,MAAMmB,cAAc,GAAG;EAC5B;EACA,MAAMC,WAAWA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC9BC,OAAO,CAACC,GAAG,CAAC,gDAAgD,EAAEF,OAAO,CAAC;IACtE,IAAIG,KAAK,GAAG/B,QAAQ,CAACkB,IAAI,CAAC,UAAU,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC;;IAEjD;IACA,IAAIS,OAAO,CAACI,KAAK,EAAE;MACjBD,KAAK,GAAGA,KAAK,CAACE,KAAK,CAAC,OAAO,EAAE,IAAIL,OAAO,CAACI,KAAK,GAAG,CAAC;IACpD;IACA,IAAIJ,OAAO,CAACM,KAAK,EAAE;MACjBH,KAAK,GAAGA,KAAK,CAACE,KAAK,CAAC,OAAO,EAAE,IAAIL,OAAO,CAACM,KAAK,GAAG,CAAC;IACpD;IACA,IAAIN,OAAO,CAACO,IAAI,EAAE;MAChBJ,KAAK,GAAGA,KAAK,CAACX,EAAE,CAAC,MAAM,EAAEQ,OAAO,CAACO,IAAI,CAAC;IACxC;IACA,IAAIP,OAAO,CAACQ,SAAS,EAAE;MACrBL,KAAK,GAAGA,KAAK,CAACX,EAAE,CAAC,WAAW,EAAEQ,OAAO,CAACQ,SAAS,CAAC;IAClD;IACA,IAAIR,OAAO,CAACS,YAAY,EAAE;MACxBN,KAAK,GAAGA,KAAK,CAACX,EAAE,CAAC,cAAc,EAAEQ,OAAO,CAACS,YAAY,CAAC;IACxD;IACA,IAAIT,OAAO,CAACU,QAAQ,EAAE;MACpBP,KAAK,GAAGA,KAAK,CAACX,EAAE,CAAC,WAAW,EAAEQ,OAAO,CAACU,QAAQ,CAAC;IACjD;IACA,IAAIV,OAAO,CAACW,QAAQ,EAAE;MACpBR,KAAK,GAAGA,KAAK,CAACS,GAAG,CAAC,OAAO,EAAEZ,OAAO,CAACW,QAAQ,CAAC;IAC9C;IACA,IAAIX,OAAO,CAACa,QAAQ,EAAE;MACpBV,KAAK,GAAGA,KAAK,CAACW,GAAG,CAAC,OAAO,EAAEd,OAAO,CAACa,QAAQ,CAAC;IAC9C;IACA,IAAIb,OAAO,CAACe,OAAO,EAAE;MACnBZ,KAAK,GAAGA,KAAK,CAACS,GAAG,CAAC,MAAM,EAAEZ,OAAO,CAACe,OAAO,CAAC;IAC5C;IACA,IAAIf,OAAO,CAACgB,OAAO,EAAE;MACnBb,KAAK,GAAGA,KAAK,CAACW,GAAG,CAAC,MAAM,EAAEd,OAAO,CAACgB,OAAO,CAAC;IAC5C;;IAEA;IACA,IAAIhB,OAAO,CAACiB,MAAM,EAAE;MAClB,MAAMC,SAAS,GAAGlB,OAAO,CAACmB,SAAS,KAAK,MAAM,GAAG,KAAK,GAAG,IAAI;MAC7DhB,KAAK,GAAGA,KAAK,CAACiB,KAAK,CAACpB,OAAO,CAACiB,MAAM,EAAE;QAAEI,SAAS,EAAEH;MAAU,CAAC,CAAC;IAC/D,CAAC,MAAM;MACLf,KAAK,GAAGA,KAAK,CAACiB,KAAK,CAAC,YAAY,EAAE;QAAEC,SAAS,EAAE;MAAM,CAAC,CAAC;IACzD;;IAEA;IACA,IAAIrB,OAAO,CAACsB,KAAK,EAAE;MACjBnB,KAAK,GAAGA,KAAK,CAACmB,KAAK,CAACtB,OAAO,CAACsB,KAAK,CAAC;IACpC;IAEArB,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAChD,MAAM;MAAExB,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMwB,KAAK;IAEnCF,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IACjDD,OAAO,CAACC,GAAG,CAAC,SAAS,EAAExB,IAAI,CAAC;IAC5BuB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEvB,KAAK,CAAC;IAC9BsB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,OAAOxB,IAAI,CAAC;IACxCuB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAExB,IAAI,KAAK,IAAI,CAAC;IAC7CuB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEqB,KAAK,CAACC,OAAO,CAAC9C,IAAI,CAAC,CAAC;IAEpD,IAAIC,KAAK,EAAE;MACTsB,OAAO,CAACtB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;IAEAsB,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAExB,IAAI,CAAC;IACnDuB,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAE,CAAAxB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE+C,MAAM,KAAI,CAAC,CAAC;IACrE,OAAO/C,IAAI;EACb,CAAC;EAED;EACA,MAAMgD,cAAcA,CAACC,EAAE,EAAE;IACvB;IACA,MAAMvD,QAAQ,CAACwD,GAAG,CAAC,yBAAyB,EAAE;MAAEC,UAAU,EAAEF;IAAG,CAAC,CAAC;IAEjE,MAAM;MAAEjD,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CACnCkB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,IAAI,EAAEmC,EAAE,CAAC,CACZlC,MAAM,CAAC,CAAC;IAEX,IAAId,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOD,IAAI;EACb,CAAC;EAED;EACA,MAAMoD,aAAaA,CAACC,WAAW,EAAE;IAC/B,MAAM;MAAErD,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CACnCkB,IAAI,CAAC,UAAU,CAAC,CAChB0C,MAAM,CAAC,CAAC;MACP5B,KAAK,EAAE2B,WAAW,CAAC3B,KAAK;MACxBE,KAAK,EAAEyB,WAAW,CAACzB,KAAK;MACxB2B,IAAI,EAAEF,WAAW,CAACE,IAAI;MACtBC,UAAU,EAAEH,WAAW,CAACG,UAAU;MAClCC,KAAK,EAAEJ,WAAW,CAACI,KAAK;MACxBC,SAAS,EAAEL,WAAW,CAACM,QAAQ;MAC/B7B,SAAS,EAAEuB,WAAW,CAACvB,SAAS;MAChCC,YAAY,EAAEsB,WAAW,CAACtB,YAAY;MACtC6B,SAAS,EAAEP,WAAW,CAACrB,QAAQ;MAC/B6B,KAAK,EAAER,WAAW,CAACQ,KAAK;MACxBhC,IAAI,EAAEwB,WAAW,CAACxB,IAAI;MACtBiC,QAAQ,EAAET,WAAW,CAACS,QAAQ;MAC9BC,MAAM,EAAEV,WAAW,CAACU,MAAM;MAC1BC,KAAK,EAAEX,WAAW,CAACW,KAAK;MACxBC,QAAQ,EAAEZ,WAAW,CAACY,QAAQ,IAAI,EAAE;MACpCC,MAAM,EAAEb,WAAW,CAACa,MAAM,IAAI,EAAE;MAChCC,WAAW,EAAEd,WAAW,CAACe,UAAU,IAAI,KAAK;MAC5CC,YAAY,EAAEhB,WAAW,CAACiB,WAAW,IAAI;IAC3C,CAAC,CAAC,CAAC,CACFzD,MAAM,CAAC,CAAC,CACRE,MAAM,CAAC,CAAC;IAEX,IAAId,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOD,IAAI;EACb,CAAC;EAED;EACA,MAAMuE,aAAaA,CAACtB,EAAE,EAAEI,WAAW,EAAE;IACnC,MAAM;MAAErD,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CACnCkB,IAAI,CAAC,UAAU,CAAC,CAChB4D,MAAM,CAAC;MACN9C,KAAK,EAAE2B,WAAW,CAAC3B,KAAK;MACxBE,KAAK,EAAEyB,WAAW,CAACzB,KAAK;MACxB2B,IAAI,EAAEF,WAAW,CAACE,IAAI;MACtBC,UAAU,EAAEH,WAAW,CAACG,UAAU;MAClCC,KAAK,EAAEJ,WAAW,CAACI,KAAK;MACxBC,SAAS,EAAEL,WAAW,CAACM,QAAQ;MAC/B7B,SAAS,EAAEuB,WAAW,CAACvB,SAAS;MAChCC,YAAY,EAAEsB,WAAW,CAACtB,YAAY;MACtC6B,SAAS,EAAEP,WAAW,CAACrB,QAAQ;MAC/B6B,KAAK,EAAER,WAAW,CAACQ,KAAK;MACxBhC,IAAI,EAAEwB,WAAW,CAACxB,IAAI;MACtBiC,QAAQ,EAAET,WAAW,CAACS,QAAQ;MAC9BC,MAAM,EAAEV,WAAW,CAACU,MAAM;MAC1BC,KAAK,EAAEX,WAAW,CAACW,KAAK;MACxBC,QAAQ,EAAEZ,WAAW,CAACY,QAAQ;MAC9BC,MAAM,EAAEb,WAAW,CAACa,MAAM;MAC1BC,WAAW,EAAEd,WAAW,CAACe,UAAU;MACnCC,YAAY,EAAEhB,WAAW,CAACiB;IAC5B,CAAC,CAAC,CACDxD,EAAE,CAAC,IAAI,EAAEmC,EAAE,CAAC,CACZpC,MAAM,CAAC,CAAC,CACRE,MAAM,CAAC,CAAC;IAEX,IAAId,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOD,IAAI;EACb,CAAC;EAED;EACA,MAAMyE,aAAaA,CAACxB,EAAE,EAAE;IACtB,MAAM;MAAEhD;IAAM,CAAC,GAAG,MAAMP,QAAQ,CAC7BkB,IAAI,CAAC,UAAU,CAAC,CAChB8D,MAAM,CAAC,CAAC,CACR5D,EAAE,CAAC,IAAI,EAAEmC,EAAE,CAAC;IAEf,IAAIhD,KAAK,EAAE,MAAMA,KAAK;EACxB,CAAC;EAED;EACA,MAAM0E,mBAAmBA,CAAC/B,KAAK,GAAG,CAAC,EAAE;IACnC,MAAM;MAAE5C,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CACnCkB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,CACvB4B,KAAK,CAAC,YAAY,EAAE;MAAEC,SAAS,EAAE;IAAM,CAAC,CAAC,CACzCC,KAAK,CAACA,KAAK,CAAC;IAEf,IAAI3C,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOD,IAAI;EACb,CAAC;EAED;EACA,MAAM4E,oBAAoBA,CAAChC,KAAK,GAAG,CAAC,EAAE;IACpC,MAAM;MAAE5C,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CACnCkB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC,CACxB4B,KAAK,CAAC,YAAY,EAAE;MAAEC,SAAS,EAAE;IAAM,CAAC,CAAC,CACzCC,KAAK,CAACA,KAAK,CAAC;IAEf,IAAI3C,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOD,IAAI;EACb,CAAC;EAED;EACA,MAAM6E,kBAAkBA,CAACC,cAAc,EAAElC,KAAK,GAAG,CAAC,EAAE;IAClD,MAAM;MAAE5C,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CACnCkB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXkE,GAAG,CAAC,IAAI,EAAED,cAAc,CAAC7B,EAAE,CAAC,CAC5B+B,EAAE,CAAC,YAAYF,cAAc,CAACpD,KAAK,YAAYoD,cAAc,CAACjD,IAAI,EAAE,CAAC,CACrEa,KAAK,CAAC,YAAY,EAAE;MAAEC,SAAS,EAAE;IAAM,CAAC,CAAC,CACzCC,KAAK,CAACA,KAAK,CAAC;IAEf,IAAI3C,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOD,IAAI;EACb,CAAC;EAED;EACA,MAAMiF,kBAAkBA,CAACC,IAAI,EAAEC,SAAS,EAAEC,UAAU,EAAE;IACpD,MAAMC,OAAO,GAAGH,IAAI,CAACI,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;IAC1C,MAAMC,QAAQ,GAAG,GAAGN,SAAS,IAAIC,UAAU,IAAIC,OAAO,EAAE;IACxD,MAAMK,QAAQ,GAAG,YAAYD,QAAQ,EAAE;IAEvC,MAAM;MAAEzF,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CAACiG,OAAO,CAC3C/E,IAAI,CAAC,gBAAgB,CAAC,CACtBgF,MAAM,CAACF,QAAQ,EAAER,IAAI,CAAC;IAEzB,IAAIjF,KAAK,EAAE,MAAMA,KAAK;;IAEtB;IACA,MAAM;MAAED,IAAI,EAAE;QAAE6F;MAAU;IAAE,CAAC,GAAGnG,QAAQ,CAACiG,OAAO,CAC7C/E,IAAI,CAAC,gBAAgB,CAAC,CACtBkF,YAAY,CAACJ,QAAQ,CAAC;IAEzB,OAAOG,SAAS;EAClB;AACF,CAAC;;AAED;AACA,OAAO,MAAME,iBAAiB,GAAG;EAC/B,MAAMC,aAAaA,CAAA,EAAG;IACpB;IACA,MAAM;MAAEC,KAAK,EAAEC;IAAc,CAAC,GAAG,MAAMxG,QAAQ,CAC5CkB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,EAAE;MAAEoF,KAAK,EAAE,OAAO;MAAEE,IAAI,EAAE;IAAK,CAAC,CAAC;;IAE9C;IACA,MAAM;MAAEF,KAAK,EAAEG;IAAiB,CAAC,GAAG,MAAM1G,QAAQ,CAC/CkB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,EAAE;MAAEoF,KAAK,EAAE,OAAO;MAAEE,IAAI,EAAE;IAAK,CAAC,CAAC,CAC3CrF,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC;;IAE1B;IACA,MAAM;MAAEmF,KAAK,EAAEI;IAAkB,CAAC,GAAG,MAAM3G,QAAQ,CAChDkB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,EAAE;MAAEoF,KAAK,EAAE,OAAO;MAAEE,IAAI,EAAE;IAAK,CAAC,CAAC,CAC3CrF,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC;;IAE3B;IACA,MAAM;MAAEd,IAAI,EAAEsG;IAAU,CAAC,GAAG,MAAM5G,QAAQ,CACvCkB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,OAAO,CAAC;IAElB,MAAM0F,UAAU,GAAG,CAAAD,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEE,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAKD,GAAG,IAAIC,OAAO,CAACC,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,KAAI,CAAC;IAE1F,OAAO;MACLT,aAAa,EAAEA,aAAa,IAAI,CAAC;MACjCK,UAAU;MACVH,gBAAgB,EAAEA,gBAAgB,IAAI,CAAC;MACvCC,iBAAiB,EAAEA,iBAAiB,IAAI;IAC1C,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { vehicleService as localVehicleService } from './localApiService';\n\n// Obtener todos los vehículos\nexport const getVehicles = async (filters = {}) => {\n  try {\n    return await localVehicleService.getVehicles(filters);\n  } catch (error) {\n    console.error('Error obteniendo vehículos:', error);\n    throw error;\n  }\n};\n\n// Obtener un vehículo por ID\nexport const getVehicleById = async id => {\n  try {\n    return await localVehicleService.getVehicleById(id);\n  } catch (error) {\n    console.error('Error obteniendo vehículo:', error);\n    throw error;\n  }\n};\n\n// Crear nuevo vehículo\nexport const createVehicle = async vehicleData => {\n  try {\n    // Simular carga de imágenes (en un entorno real, subirías a un servidor)\n    const processedImages = vehicleData.images || [];\n    const vehicleToCreate = {\n      ...vehicleData,\n      images: processedImages,\n      views: 0,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    return await localVehicleService.createVehicle(vehicleToCreate);\n  } catch (error) {\n    console.error('Error creando vehículo:', error);\n    throw error;\n  }\n};\n\n// Actualizar vehículo\nexport const updateVehicle = async (id, vehicleData, newImages = []) => {\n  try {\n    const vehicleToUpdate = {\n      ...vehicleData,\n      updatedAt: new Date().toISOString()\n    };\n    return await localVehicleService.updateVehicle(id, vehicleToUpdate);\n  } catch (error) {\n    console.error('Error actualizando vehículo:', error);\n    throw error;\n  }\n};\n\n// Eliminar vehículo\nexport const deleteVehicle = async id => {\n  try {\n    return await localVehicleService.deleteVehicle(id);\n  } catch (error) {\n    console.error('Error eliminando vehículo:', error);\n    throw error;\n  }\n};\n\n// Obtener vehículos destacados\nexport const getFeaturedVehicles = async (limit = 6) => {\n  try {\n    const vehicles = await localVehicleService.getFeaturedVehicles();\n    return vehicles.slice(0, limit);\n  } catch (error) {\n    console.error('Error obteniendo vehículos destacados:', error);\n    throw error;\n  }\n};\n\n// Obtener vehículos en promoción\nexport const getPromotionVehicles = async (limit = 6) => {\n  try {\n    const vehicles = await localVehicleService.getPromotionVehicles();\n    return vehicles.slice(0, limit);\n  } catch (error) {\n    console.error('Error obteniendo vehículos en promoción:', error);\n    throw error;\n  }\n};\n\n// Obtener vehículos similares\nexport const getSimilarVehicles = async (currentVehicle, limit = 4) => {\n  try {\n    return await localVehicleService.getSimilarVehicles(currentVehicle, limit);\n  } catch (error) {\n    console.error('Error obteniendo vehículos similares:', error);\n    throw error;\n  }\n};\n\n// Obtener estadísticas de vehículos\nexport const getVehicleStats = async () => {\n  try {\n    const {\n      statisticsService\n    } = await import('./localApiService');\n    return await statisticsService.getStatistics();\n  } catch (error) {\n    console.error('Error obteniendo estadísticas:', error);\n    throw error;\n  }\n};\n\n// Función helper para procesar imágenes (simulada)\nexport const uploadImage = async file => {\n  // En un entorno real, subirías la imagen a un servidor\n  // Por ahora, simulamos la carga\n  return new Promise(resolve => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      resolve(reader.result); // Retorna base64 como URL temporal\n    };\n    reader.readAsDataURL(file);\n  });\n};\n\n// Función helper para eliminar imágenes (simulada)\nexport const deleteImage = async imageUrl => {\n  // En un entorno real, eliminarías la imagen del servidor\n  console.log('Eliminando imagen:', imageUrl);\n  return Promise.resolve();\n};","map":{"version":3,"names":["vehicleService","localVehicleService","getVehicles","filters","error","console","getVehicleById","id","createVehicle","vehicleData","processedImages","images","vehicleToCreate","views","createdAt","Date","toISOString","updatedAt","updateVehicle","newImages","vehicleToUpdate","deleteVehicle","getFeaturedVehicles","limit","vehicles","slice","getPromotionVehicles","getSimilarVehicles","currentVehicle","getVehicleStats","statisticsService","getStatistics","uploadImage","file","Promise","resolve","reader","FileReader","onload","result","readAsDataURL","deleteImage","imageUrl","log"],"sources":["C:/Users/otero/OneDrive/Escritorio/Paginas Web/ri cars automotores/src/services/vehicleService.js"],"sourcesContent":["import { vehicleService as localVehicleService } from './localApiService';\r\n\r\n// Obtener todos los vehículos\r\nexport const getVehicles = async (filters = {}) => {\r\n  try {\r\n    return await localVehicleService.getVehicles(filters);\r\n  } catch (error) {\r\n    console.error('Error obteniendo vehículos:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener un vehículo por ID\r\nexport const getVehicleById = async (id) => {\r\n  try {\r\n    return await localVehicleService.getVehicleById(id);\r\n  } catch (error) {\r\n    console.error('Error obteniendo vehículo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Crear nuevo vehículo\r\nexport const createVehicle = async (vehicleData) => {\r\n  try {\r\n    // Simular carga de imágenes (en un entorno real, subirías a un servidor)\r\n    const processedImages = vehicleData.images || [];\r\n    \r\n    const vehicleToCreate = {\r\n      ...vehicleData,\r\n      images: processedImages,\r\n      views: 0,\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString()\r\n    };\r\n\r\n    return await localVehicleService.createVehicle(vehicleToCreate);\r\n  } catch (error) {\r\n    console.error('Error creando vehículo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Actualizar vehículo\r\nexport const updateVehicle = async (id, vehicleData, newImages = []) => {\r\n  try {\r\n    const vehicleToUpdate = {\r\n      ...vehicleData,\r\n      updatedAt: new Date().toISOString()\r\n    };\r\n\r\n    return await localVehicleService.updateVehicle(id, vehicleToUpdate);\r\n  } catch (error) {\r\n    console.error('Error actualizando vehículo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Eliminar vehículo\r\nexport const deleteVehicle = async (id) => {\r\n  try {\r\n    return await localVehicleService.deleteVehicle(id);\r\n  } catch (error) {\r\n    console.error('Error eliminando vehículo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener vehículos destacados\r\nexport const getFeaturedVehicles = async (limit = 6) => {\r\n  try {\r\n    const vehicles = await localVehicleService.getFeaturedVehicles();\r\n    return vehicles.slice(0, limit);\r\n  } catch (error) {\r\n    console.error('Error obteniendo vehículos destacados:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener vehículos en promoción\r\nexport const getPromotionVehicles = async (limit = 6) => {\r\n  try {\r\n    const vehicles = await localVehicleService.getPromotionVehicles();\r\n    return vehicles.slice(0, limit);\r\n  } catch (error) {\r\n    console.error('Error obteniendo vehículos en promoción:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener vehículos similares\r\nexport const getSimilarVehicles = async (currentVehicle, limit = 4) => {\r\n  try {\r\n    return await localVehicleService.getSimilarVehicles(currentVehicle, limit);\r\n  } catch (error) {\r\n    console.error('Error obteniendo vehículos similares:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener estadísticas de vehículos\r\nexport const getVehicleStats = async () => {\r\n  try {\r\n    const { statisticsService } = await import('./localApiService');\r\n    return await statisticsService.getStatistics();\r\n  } catch (error) {\r\n    console.error('Error obteniendo estadísticas:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Función helper para procesar imágenes (simulada)\r\nexport const uploadImage = async (file) => {\r\n  // En un entorno real, subirías la imagen a un servidor\r\n  // Por ahora, simulamos la carga\r\n  return new Promise((resolve) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      resolve(reader.result); // Retorna base64 como URL temporal\r\n    };\r\n    reader.readAsDataURL(file);\r\n  });\r\n};\r\n\r\n// Función helper para eliminar imágenes (simulada)\r\nexport const deleteImage = async (imageUrl) => {\r\n  // En un entorno real, eliminarías la imagen del servidor\r\n  console.log('Eliminando imagen:', imageUrl);\r\n  return Promise.resolve();\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { supabase } from '../supabase/config';\n\n// Generar ID único para visitantes no autenticados\nconst generateVisitorId = () => {\n  let visitorId = localStorage.getItem('gallery_visitor_id');\n  if (!visitorId) {\n    visitorId = 'visitor_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n    localStorage.setItem('gallery_visitor_id', visitorId);\n  }\n  return visitorId;\n};\n\n// Incrementar vista de un elemento de galería\nexport const incrementGalleryView = async galleryId => {\n  try {\n    const visitorId = generateVisitorId();\n    const {\n      data,\n      error\n    } = await supabase.rpc('increment_gallery_views', {\n      gallery_uuid: galleryId,\n      visitor_identifier: visitorId\n    });\n    if (error) {\n      console.error('Error incrementando vista de galería:', error);\n      return false;\n    }\n    return data; // Retorna true si se incrementó, false si ya existía\n  } catch (error) {\n    console.error('Error incrementando vista de galería:', error);\n    return false;\n  }\n};\n\n// Obtener estadísticas de vistas de galería\nexport const getGalleryViewsStats = async () => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.rpc('get_gallery_views_stats');\n    if (error) throw error;\n    return data[0] || {\n      total_views: 0,\n      total_items: 0,\n      avg_views_per_item: 0,\n      total_unique_visitors: 0\n    };\n  } catch (error) {\n    console.error('Error obteniendo estadísticas de galería:', error);\n    return {\n      total_views: 0,\n      total_items: 0,\n      avg_views_per_item: 0,\n      total_unique_visitors: 0\n    };\n  }\n};\n\n// Obtener elementos más vistos\nexport const getMostViewedGalleryItems = async (limit = 10) => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.rpc('get_most_viewed_gallery_items', {\n      limit_count: limit\n    });\n    if (error) throw error;\n    return data || [];\n  } catch (error) {\n    console.error('Error obteniendo elementos más vistos:', error);\n    return [];\n  }\n};\n\n// Verificar si un usuario ya vio un elemento específico\nexport const hasViewedGalleryItem = async galleryId => {\n  try {\n    const visitorId = generateVisitorId();\n    const {\n      data: {\n        user\n      }\n    } = await supabase.auth.getUser();\n    let query = supabase.from('gallery_views').select('id').eq('gallery_id', galleryId);\n    if (user) {\n      query = query.eq('user_id', user.id);\n    } else {\n      query = query.eq('visitor_id', visitorId);\n    }\n    const {\n      data,\n      error\n    } = await query.single();\n    if (error && error.code !== 'PGRST116') {\n      throw error;\n    }\n    return !!data;\n  } catch (error) {\n    console.error('Error verificando vista de galería:', error);\n    return false;\n  }\n};\n\n// Obtener elementos de galería con contadores de vistas\nexport const getGalleryItemsWithViews = async () => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('gallery').select('*').order('created_at', {\n      ascending: false\n    });\n    if (error) throw error;\n    return data || [];\n  } catch (error) {\n    console.error('Error obteniendo elementos de galería:', error);\n    return [];\n  }\n};","map":{"version":3,"names":["supabase","generateVisitorId","visitorId","localStorage","getItem","Date","now","Math","random","toString","substr","setItem","incrementGalleryView","galleryId","data","error","rpc","gallery_uuid","visitor_identifier","console","getGalleryViewsStats","total_views","total_items","avg_views_per_item","total_unique_visitors","getMostViewedGalleryItems","limit","limit_count","hasViewedGalleryItem","user","auth","getUser","query","from","select","eq","id","single","code","getGalleryItemsWithViews","order","ascending"],"sources":["C:/Users/otero/OneDrive/Escritorio/Paginas Web/ri cars automotores/src/services/galleryViewsService.js"],"sourcesContent":["import { supabase } from '../supabase/config';\r\n\r\n// Generar ID único para visitantes no autenticados\r\nconst generateVisitorId = () => {\r\n  let visitorId = localStorage.getItem('gallery_visitor_id');\r\n  if (!visitorId) {\r\n    visitorId = 'visitor_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\r\n    localStorage.setItem('gallery_visitor_id', visitorId);\r\n  }\r\n  return visitorId;\r\n};\r\n\r\n// Incrementar vista de un elemento de galería\r\nexport const incrementGalleryView = async (galleryId) => {\r\n  try {\r\n    const visitorId = generateVisitorId();\r\n    \r\n    const { data, error } = await supabase\r\n      .rpc('increment_gallery_views', {\r\n        gallery_uuid: galleryId,\r\n        visitor_identifier: visitorId\r\n      });\r\n\r\n    if (error) {\r\n      console.error('Error incrementando vista de galería:', error);\r\n      return false;\r\n    }\r\n\r\n    return data; // Retorna true si se incrementó, false si ya existía\r\n  } catch (error) {\r\n    console.error('Error incrementando vista de galería:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener estadísticas de vistas de galería\r\nexport const getGalleryViewsStats = async () => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .rpc('get_gallery_views_stats');\r\n\r\n    if (error) throw error;\r\n    return data[0] || { \r\n      total_views: 0, \r\n      total_items: 0, \r\n      avg_views_per_item: 0, \r\n      total_unique_visitors: 0 \r\n    };\r\n  } catch (error) {\r\n    console.error('Error obteniendo estadísticas de galería:', error);\r\n    return { \r\n      total_views: 0, \r\n      total_items: 0, \r\n      avg_views_per_item: 0, \r\n      total_unique_visitors: 0 \r\n    };\r\n  }\r\n};\r\n\r\n// Obtener elementos más vistos\r\nexport const getMostViewedGalleryItems = async (limit = 10) => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .rpc('get_most_viewed_gallery_items', { limit_count: limit });\r\n\r\n    if (error) throw error;\r\n    return data || [];\r\n  } catch (error) {\r\n    console.error('Error obteniendo elementos más vistos:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Verificar si un usuario ya vio un elemento específico\r\nexport const hasViewedGalleryItem = async (galleryId) => {\r\n  try {\r\n    const visitorId = generateVisitorId();\r\n    const { data: { user } } = await supabase.auth.getUser();\r\n    \r\n    let query = supabase\r\n      .from('gallery_views')\r\n      .select('id')\r\n      .eq('gallery_id', galleryId);\r\n\r\n    if (user) {\r\n      query = query.eq('user_id', user.id);\r\n    } else {\r\n      query = query.eq('visitor_id', visitorId);\r\n    }\r\n\r\n    const { data, error } = await query.single();\r\n\r\n    if (error && error.code !== 'PGRST116') {\r\n      throw error;\r\n    }\r\n\r\n    return !!data;\r\n  } catch (error) {\r\n    console.error('Error verificando vista de galería:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Obtener elementos de galería con contadores de vistas\r\nexport const getGalleryItemsWithViews = async () => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('gallery')\r\n      .select('*')\r\n      .order('created_at', { ascending: false });\r\n\r\n    if (error) throw error;\r\n    return data || [];\r\n  } catch (error) {\r\n    console.error('Error obteniendo elementos de galería:', error);\r\n    return [];\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// Servicio para interactuar con Supabase\nimport { supabase } from '../supabase/config';\n\n// ==================== SERVICIO DE AUTENTICACI√ìN ====================\nexport const authService = {\n  // Registrar usuario\n  async signUp(email, password, displayName) {\n    const {\n      data,\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: {\n          display_name: displayName\n        }\n      }\n    });\n    if (error) throw error;\n    return data;\n  },\n  // Iniciar sesi√≥n\n  async signIn(email, password) {\n    const {\n      data,\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) throw error;\n    return data;\n  },\n  // Cerrar sesi√≥n\n  async signOut() {\n    const {\n      error\n    } = await supabase.auth.signOut();\n    if (error) throw error;\n  },\n  // Obtener sesi√≥n actual\n  async getSession() {\n    const {\n      data: {\n        session\n      }\n    } = await supabase.auth.getSession();\n    return session;\n  },\n  // Obtener perfil de usuario\n  async getUserProfile(userId) {\n    const {\n      data,\n      error\n    } = await supabase.from('profiles').select('*').eq('id', userId).single();\n    if (error) throw error;\n    return data;\n  },\n  // Escuchar cambios de autenticaci√≥n\n  onAuthStateChange(callback) {\n    return supabase.auth.onAuthStateChange(callback);\n  },\n  // Restablecer contrase√±a\n  async resetPassword(email) {\n    const {\n      error\n    } = await supabase.auth.resetPasswordForEmail(email);\n    if (error) throw error;\n  }\n};\n\n// ==================== SERVICIO DE VEH√çCULOS ====================\nexport const vehicleService = {\n  // Obtener todos los veh√≠culos con filtros\n  async getVehicles(filters = {}) {\n    console.log('üîç Supabase: Obteniendo veh√≠culos con filtros:', filters);\n\n    // Test de conectividad b√°sico\n    try {\n      console.log('üß™ Testing conexi√≥n a Supabase...');\n      const {\n        data: testData,\n        error: testError\n      } = await supabase.from('vehicles').select('count(*)').limit(1);\n      console.log('üß™ Test resultado:', {\n        testData,\n        testError\n      });\n    } catch (testErr) {\n      console.error('üß™ Test fall√≥:', testErr);\n    }\n    let query = supabase.from('vehicles').select('*');\n\n    // Aplicar filtros\n    if (filters.brand) {\n      query = query.ilike('brand', `%${filters.brand}%`);\n    }\n    if (filters.model) {\n      query = query.ilike('model', `%${filters.model}%`);\n    }\n    if (filters.type) {\n      query = query.eq('type', filters.type);\n    }\n    if (filters.condition) {\n      query = query.eq('condition', filters.condition);\n    }\n    if (filters.transmission) {\n      query = query.eq('transmission', filters.transmission);\n    }\n    if (filters.fuelType) {\n      query = query.eq('fuel_type', filters.fuelType);\n    }\n    if (filters.minPrice) {\n      query = query.gte('price', filters.minPrice);\n    }\n    if (filters.maxPrice) {\n      query = query.lte('price', filters.maxPrice);\n    }\n    if (filters.minYear) {\n      query = query.gte('year', filters.minYear);\n    }\n    if (filters.maxYear) {\n      query = query.lte('year', filters.maxYear);\n    }\n\n    // Ordenamiento\n    if (filters.sortBy) {\n      const direction = filters.sortOrder === 'desc' ? false : true;\n      query = query.order(filters.sortBy, {\n        ascending: direction\n      });\n    } else {\n      query = query.order('created_at', {\n        ascending: false\n      });\n    }\n\n    // L√≠mite\n    if (filters.limit) {\n      query = query.limit(filters.limit);\n    }\n    console.log('üì° Ejecutando query a Supabase...');\n\n    // Crear timeout para evitar que se cuelgue\n    const timeoutPromise = new Promise((_, reject) => {\n      setTimeout(() => reject(new Error('Timeout: Query tard√≥ m√°s de 10 segundos')), 10000);\n    });\n    try {\n      const {\n        data,\n        error\n      } = await Promise.race([query, timeoutPromise]);\n      console.log('üîç Respuesta completa de Supabase:');\n      console.log('- Data:', data);\n      console.log('- Error:', error);\n      console.log('- Data type:', typeof data);\n      console.log('- Data is null:', data === null);\n      console.log('- Data is array:', Array.isArray(data));\n      if (error) {\n        console.error('‚ùå Error en query Supabase:', error);\n        throw error;\n      }\n      console.log('‚úÖ Datos recibidos de Supabase:', data);\n      console.log('üìä Cantidad de veh√≠culos recibidos:', (data === null || data === void 0 ? void 0 : data.length) || 0);\n      return data || [];\n    } catch (timeoutError) {\n      console.error('‚è∞ Timeout en query Supabase:', timeoutError);\n      // Retornar datos mock como fallback\n      return [{\n        id: '1',\n        brand: 'Toyota',\n        model: 'Corolla',\n        year: 2023,\n        kilometers: 15000,\n        price: 25000,\n        price_ars: 25000000,\n        condition: 'new',\n        transmission: 'automatic',\n        fuel_type: 'gasoline',\n        color: 'Blanco',\n        type: 'sedan',\n        location: 'Buenos Aires',\n        engine: '2.0L',\n        power: '150hp',\n        features: ['Aire acondicionado', 'Bluetooth', 'C√°mara de reversa'],\n        images: ['https://images.unsplash.com/photo-1549317661-bd32c8ce0db2?w=800'],\n        is_featured: true,\n        is_promotion: false,\n        views: 45,\n        created_at: '2024-01-15T10:30:00Z'\n      }];\n    }\n  },\n  // Obtener veh√≠culo por ID\n  async getVehicleById(id) {\n    // Incrementar contador de vistas\n    await supabase.rpc('increment_vehicle_views', {\n      vehicle_id: id\n    });\n    const {\n      data,\n      error\n    } = await supabase.from('vehicles').select('*').eq('id', id).single();\n    if (error) throw error;\n    return data;\n  },\n  // Crear nuevo veh√≠culo\n  async createVehicle(vehicleData) {\n    const {\n      data,\n      error\n    } = await supabase.from('vehicles').insert([{\n      brand: vehicleData.brand,\n      model: vehicleData.model,\n      year: vehicleData.year,\n      kilometers: vehicleData.kilometers,\n      price: vehicleData.price,\n      price_ars: vehicleData.priceARS,\n      condition: vehicleData.condition,\n      transmission: vehicleData.transmission,\n      fuel_type: vehicleData.fuelType,\n      color: vehicleData.color,\n      type: vehicleData.type,\n      location: vehicleData.location,\n      engine: vehicleData.engine,\n      power: vehicleData.power,\n      features: vehicleData.features || [],\n      images: vehicleData.images || [],\n      is_featured: vehicleData.isFeatured || false,\n      is_promotion: vehicleData.isPromotion || false\n    }]).select().single();\n    if (error) throw error;\n    return data;\n  },\n  // Actualizar veh√≠culo\n  async updateVehicle(id, vehicleData) {\n    const {\n      data,\n      error\n    } = await supabase.from('vehicles').update({\n      brand: vehicleData.brand,\n      model: vehicleData.model,\n      year: vehicleData.year,\n      kilometers: vehicleData.kilometers,\n      price: vehicleData.price,\n      price_ars: vehicleData.priceARS,\n      condition: vehicleData.condition,\n      transmission: vehicleData.transmission,\n      fuel_type: vehicleData.fuelType,\n      color: vehicleData.color,\n      type: vehicleData.type,\n      location: vehicleData.location,\n      engine: vehicleData.engine,\n      power: vehicleData.power,\n      features: vehicleData.features,\n      images: vehicleData.images,\n      is_featured: vehicleData.isFeatured,\n      is_promotion: vehicleData.isPromotion\n    }).eq('id', id).select().single();\n    if (error) throw error;\n    return data;\n  },\n  // Eliminar veh√≠culo\n  async deleteVehicle(id) {\n    const {\n      error\n    } = await supabase.from('vehicles').delete().eq('id', id);\n    if (error) throw error;\n  },\n  // Obtener veh√≠culos destacados\n  async getFeaturedVehicles(limit = 6) {\n    const {\n      data,\n      error\n    } = await supabase.from('vehicles').select('*').eq('is_featured', true).order('created_at', {\n      ascending: false\n    }).limit(limit);\n    if (error) throw error;\n    return data;\n  },\n  // Obtener veh√≠culos en promoci√≥n\n  async getPromotionVehicles(limit = 6) {\n    const {\n      data,\n      error\n    } = await supabase.from('vehicles').select('*').eq('is_promotion', true).order('created_at', {\n      ascending: false\n    }).limit(limit);\n    if (error) throw error;\n    return data;\n  },\n  // Obtener veh√≠culos similares\n  async getSimilarVehicles(currentVehicle, limit = 4) {\n    const {\n      data,\n      error\n    } = await supabase.from('vehicles').select('*').neq('id', currentVehicle.id).or(`brand.eq.${currentVehicle.brand},type.eq.${currentVehicle.type}`).order('created_at', {\n      ascending: false\n    }).limit(limit);\n    if (error) throw error;\n    return data;\n  },\n  // Subir imagen de veh√≠culo\n  async uploadVehicleImage(file, vehicleId, imageIndex) {\n    const fileExt = file.name.split('.').pop();\n    const fileName = `${vehicleId}-${imageIndex}.${fileExt}`;\n    const filePath = `vehicles/${fileName}`;\n    const {\n      data,\n      error\n    } = await supabase.storage.from('vehicle-images').upload(filePath, file);\n    if (error) throw error;\n\n    // Obtener URL p√∫blica\n    const {\n      data: {\n        publicUrl\n      }\n    } = supabase.storage.from('vehicle-images').getPublicUrl(filePath);\n    return publicUrl;\n  }\n};\n\n// ==================== SERVICIO DE ESTAD√çSTICAS ====================\nexport const statisticsService = {\n  async getStatistics() {\n    // Obtener total de veh√≠culos\n    const {\n      count: totalVehicles\n    } = await supabase.from('vehicles').select('*', {\n      count: 'exact',\n      head: true\n    });\n\n    // Obtener veh√≠culos destacados\n    const {\n      count: featuredVehicles\n    } = await supabase.from('vehicles').select('*', {\n      count: 'exact',\n      head: true\n    }).eq('is_featured', true);\n\n    // Obtener veh√≠culos en promoci√≥n\n    const {\n      count: promotionVehicles\n    } = await supabase.from('vehicles').select('*', {\n      count: 'exact',\n      head: true\n    }).eq('is_promotion', true);\n\n    // Obtener total de vistas\n    const {\n      data: viewsData\n    } = await supabase.from('vehicles').select('views');\n    const totalViews = (viewsData === null || viewsData === void 0 ? void 0 : viewsData.reduce((sum, vehicle) => sum + (vehicle.views || 0), 0)) || 0;\n    return {\n      totalVehicles: totalVehicles || 0,\n      totalViews,\n      featuredVehicles: featuredVehicles || 0,\n      promotionVehicles: promotionVehicles || 0\n    };\n  }\n};","map":{"version":3,"names":["supabase","authService","signUp","email","password","displayName","data","error","auth","options","display_name","signIn","signInWithPassword","signOut","getSession","session","getUserProfile","userId","from","select","eq","single","onAuthStateChange","callback","resetPassword","resetPasswordForEmail","vehicleService","getVehicles","filters","console","log","testData","testError","limit","testErr","query","brand","ilike","model","type","condition","transmission","fuelType","minPrice","gte","maxPrice","lte","minYear","maxYear","sortBy","direction","sortOrder","order","ascending","timeoutPromise","Promise","_","reject","setTimeout","Error","race","Array","isArray","length","timeoutError","id","year","kilometers","price","price_ars","fuel_type","color","location","engine","power","features","images","is_featured","is_promotion","views","created_at","getVehicleById","rpc","vehicle_id","createVehicle","vehicleData","insert","priceARS","isFeatured","isPromotion","updateVehicle","update","deleteVehicle","delete","getFeaturedVehicles","getPromotionVehicles","getSimilarVehicles","currentVehicle","neq","or","uploadVehicleImage","file","vehicleId","imageIndex","fileExt","name","split","pop","fileName","filePath","storage","upload","publicUrl","getPublicUrl","statisticsService","getStatistics","count","totalVehicles","head","featuredVehicles","promotionVehicles","viewsData","totalViews","reduce","sum","vehicle"],"sources":["C:/Users/otero/OneDrive/Escritorio/Paginas Web/ri cars automotores/src/services/supabaseService.js"],"sourcesContent":["// Servicio para interactuar con Supabase\r\nimport { supabase } from '../supabase/config';\r\n\r\n// ==================== SERVICIO DE AUTENTICACI√ìN ====================\r\nexport const authService = {\r\n  // Registrar usuario\r\n  async signUp(email, password, displayName) {\r\n    const { data, error } = await supabase.auth.signUp({\r\n      email,\r\n      password,\r\n      options: {\r\n        data: {\r\n          display_name: displayName\r\n        }\r\n      }\r\n    });\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Iniciar sesi√≥n\r\n  async signIn(email, password) {\r\n    const { data, error } = await supabase.auth.signInWithPassword({\r\n      email,\r\n      password\r\n    });\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Cerrar sesi√≥n\r\n  async signOut() {\r\n    const { error } = await supabase.auth.signOut();\r\n    if (error) throw error;\r\n  },\r\n\r\n  // Obtener sesi√≥n actual\r\n  async getSession() {\r\n    const { data: { session } } = await supabase.auth.getSession();\r\n    return session;\r\n  },\r\n\r\n  // Obtener perfil de usuario\r\n  async getUserProfile(userId) {\r\n    const { data, error } = await supabase\r\n      .from('profiles')\r\n      .select('*')\r\n      .eq('id', userId)\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Escuchar cambios de autenticaci√≥n\r\n  onAuthStateChange(callback) {\r\n    return supabase.auth.onAuthStateChange(callback);\r\n  },\r\n\r\n  // Restablecer contrase√±a\r\n  async resetPassword(email) {\r\n    const { error } = await supabase.auth.resetPasswordForEmail(email);\r\n    if (error) throw error;\r\n  }\r\n};\r\n\r\n// ==================== SERVICIO DE VEH√çCULOS ====================\r\nexport const vehicleService = {\r\n  // Obtener todos los veh√≠culos con filtros\r\n  async getVehicles(filters = {}) {\r\n    console.log('üîç Supabase: Obteniendo veh√≠culos con filtros:', filters);\r\n    \r\n    // Test de conectividad b√°sico\r\n    try {\r\n      console.log('üß™ Testing conexi√≥n a Supabase...');\r\n      const { data: testData, error: testError } = await supabase\r\n        .from('vehicles')\r\n        .select('count(*)')\r\n        .limit(1);\r\n      console.log('üß™ Test resultado:', { testData, testError });\r\n    } catch (testErr) {\r\n      console.error('üß™ Test fall√≥:', testErr);\r\n    }\r\n    \r\n    let query = supabase.from('vehicles').select('*');\r\n\r\n    // Aplicar filtros\r\n    if (filters.brand) {\r\n      query = query.ilike('brand', `%${filters.brand}%`);\r\n    }\r\n    if (filters.model) {\r\n      query = query.ilike('model', `%${filters.model}%`);\r\n    }\r\n    if (filters.type) {\r\n      query = query.eq('type', filters.type);\r\n    }\r\n    if (filters.condition) {\r\n      query = query.eq('condition', filters.condition);\r\n    }\r\n    if (filters.transmission) {\r\n      query = query.eq('transmission', filters.transmission);\r\n    }\r\n    if (filters.fuelType) {\r\n      query = query.eq('fuel_type', filters.fuelType);\r\n    }\r\n    if (filters.minPrice) {\r\n      query = query.gte('price', filters.minPrice);\r\n    }\r\n    if (filters.maxPrice) {\r\n      query = query.lte('price', filters.maxPrice);\r\n    }\r\n    if (filters.minYear) {\r\n      query = query.gte('year', filters.minYear);\r\n    }\r\n    if (filters.maxYear) {\r\n      query = query.lte('year', filters.maxYear);\r\n    }\r\n\r\n    // Ordenamiento\r\n    if (filters.sortBy) {\r\n      const direction = filters.sortOrder === 'desc' ? false : true;\r\n      query = query.order(filters.sortBy, { ascending: direction });\r\n    } else {\r\n      query = query.order('created_at', { ascending: false });\r\n    }\r\n\r\n    // L√≠mite\r\n    if (filters.limit) {\r\n      query = query.limit(filters.limit);\r\n    }\r\n\r\n    console.log('üì° Ejecutando query a Supabase...');\r\n    \r\n    // Crear timeout para evitar que se cuelgue\r\n    const timeoutPromise = new Promise((_, reject) => {\r\n      setTimeout(() => reject(new Error('Timeout: Query tard√≥ m√°s de 10 segundos')), 10000);\r\n    });\r\n    \r\n    try {\r\n      const { data, error } = await Promise.race([query, timeoutPromise]);\r\n      \r\n      console.log('üîç Respuesta completa de Supabase:');\r\n      console.log('- Data:', data);\r\n      console.log('- Error:', error);\r\n      console.log('- Data type:', typeof data);\r\n      console.log('- Data is null:', data === null);\r\n      console.log('- Data is array:', Array.isArray(data));\r\n      \r\n      if (error) {\r\n        console.error('‚ùå Error en query Supabase:', error);\r\n        throw error;\r\n      }\r\n      \r\n      console.log('‚úÖ Datos recibidos de Supabase:', data);\r\n      console.log('üìä Cantidad de veh√≠culos recibidos:', data?.length || 0);\r\n      return data || [];\r\n    } catch (timeoutError) {\r\n      console.error('‚è∞ Timeout en query Supabase:', timeoutError);\r\n      // Retornar datos mock como fallback\r\n      return [\r\n        {\r\n          id: '1',\r\n          brand: 'Toyota',\r\n          model: 'Corolla',\r\n          year: 2023,\r\n          kilometers: 15000,\r\n          price: 25000,\r\n          price_ars: 25000000,\r\n          condition: 'new',\r\n          transmission: 'automatic',\r\n          fuel_type: 'gasoline',\r\n          color: 'Blanco',\r\n          type: 'sedan',\r\n          location: 'Buenos Aires',\r\n          engine: '2.0L',\r\n          power: '150hp',\r\n          features: ['Aire acondicionado', 'Bluetooth', 'C√°mara de reversa'],\r\n          images: ['https://images.unsplash.com/photo-1549317661-bd32c8ce0db2?w=800'],\r\n          is_featured: true,\r\n          is_promotion: false,\r\n          views: 45,\r\n          created_at: '2024-01-15T10:30:00Z'\r\n        }\r\n      ];\r\n    }\r\n  },\r\n\r\n  // Obtener veh√≠culo por ID\r\n  async getVehicleById(id) {\r\n    // Incrementar contador de vistas\r\n    await supabase.rpc('increment_vehicle_views', { vehicle_id: id });\r\n\r\n    const { data, error } = await supabase\r\n      .from('vehicles')\r\n      .select('*')\r\n      .eq('id', id)\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Crear nuevo veh√≠culo\r\n  async createVehicle(vehicleData) {\r\n    const { data, error } = await supabase\r\n      .from('vehicles')\r\n      .insert([{\r\n        brand: vehicleData.brand,\r\n        model: vehicleData.model,\r\n        year: vehicleData.year,\r\n        kilometers: vehicleData.kilometers,\r\n        price: vehicleData.price,\r\n        price_ars: vehicleData.priceARS,\r\n        condition: vehicleData.condition,\r\n        transmission: vehicleData.transmission,\r\n        fuel_type: vehicleData.fuelType,\r\n        color: vehicleData.color,\r\n        type: vehicleData.type,\r\n        location: vehicleData.location,\r\n        engine: vehicleData.engine,\r\n        power: vehicleData.power,\r\n        features: vehicleData.features || [],\r\n        images: vehicleData.images || [],\r\n        is_featured: vehicleData.isFeatured || false,\r\n        is_promotion: vehicleData.isPromotion || false\r\n      }])\r\n      .select()\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Actualizar veh√≠culo\r\n  async updateVehicle(id, vehicleData) {\r\n    const { data, error } = await supabase\r\n      .from('vehicles')\r\n      .update({\r\n        brand: vehicleData.brand,\r\n        model: vehicleData.model,\r\n        year: vehicleData.year,\r\n        kilometers: vehicleData.kilometers,\r\n        price: vehicleData.price,\r\n        price_ars: vehicleData.priceARS,\r\n        condition: vehicleData.condition,\r\n        transmission: vehicleData.transmission,\r\n        fuel_type: vehicleData.fuelType,\r\n        color: vehicleData.color,\r\n        type: vehicleData.type,\r\n        location: vehicleData.location,\r\n        engine: vehicleData.engine,\r\n        power: vehicleData.power,\r\n        features: vehicleData.features,\r\n        images: vehicleData.images,\r\n        is_featured: vehicleData.isFeatured,\r\n        is_promotion: vehicleData.isPromotion\r\n      })\r\n      .eq('id', id)\r\n      .select()\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Eliminar veh√≠culo\r\n  async deleteVehicle(id) {\r\n    const { error } = await supabase\r\n      .from('vehicles')\r\n      .delete()\r\n      .eq('id', id);\r\n\r\n    if (error) throw error;\r\n  },\r\n\r\n  // Obtener veh√≠culos destacados\r\n  async getFeaturedVehicles(limit = 6) {\r\n    const { data, error } = await supabase\r\n      .from('vehicles')\r\n      .select('*')\r\n      .eq('is_featured', true)\r\n      .order('created_at', { ascending: false })\r\n      .limit(limit);\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Obtener veh√≠culos en promoci√≥n\r\n  async getPromotionVehicles(limit = 6) {\r\n    const { data, error } = await supabase\r\n      .from('vehicles')\r\n      .select('*')\r\n      .eq('is_promotion', true)\r\n      .order('created_at', { ascending: false })\r\n      .limit(limit);\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Obtener veh√≠culos similares\r\n  async getSimilarVehicles(currentVehicle, limit = 4) {\r\n    const { data, error } = await supabase\r\n      .from('vehicles')\r\n      .select('*')\r\n      .neq('id', currentVehicle.id)\r\n      .or(`brand.eq.${currentVehicle.brand},type.eq.${currentVehicle.type}`)\r\n      .order('created_at', { ascending: false })\r\n      .limit(limit);\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  },\r\n\r\n  // Subir imagen de veh√≠culo\r\n  async uploadVehicleImage(file, vehicleId, imageIndex) {\r\n    const fileExt = file.name.split('.').pop();\r\n    const fileName = `${vehicleId}-${imageIndex}.${fileExt}`;\r\n    const filePath = `vehicles/${fileName}`;\r\n\r\n    const { data, error } = await supabase.storage\r\n      .from('vehicle-images')\r\n      .upload(filePath, file);\r\n\r\n    if (error) throw error;\r\n\r\n    // Obtener URL p√∫blica\r\n    const { data: { publicUrl } } = supabase.storage\r\n      .from('vehicle-images')\r\n      .getPublicUrl(filePath);\r\n\r\n    return publicUrl;\r\n  }\r\n};\r\n\r\n// ==================== SERVICIO DE ESTAD√çSTICAS ====================\r\nexport const statisticsService = {\r\n  async getStatistics() {\r\n    // Obtener total de veh√≠culos\r\n    const { count: totalVehicles } = await supabase\r\n      .from('vehicles')\r\n      .select('*', { count: 'exact', head: true });\r\n\r\n    // Obtener veh√≠culos destacados\r\n    const { count: featuredVehicles } = await supabase\r\n      .from('vehicles')\r\n      .select('*', { count: 'exact', head: true })\r\n      .eq('is_featured', true);\r\n\r\n    // Obtener veh√≠culos en promoci√≥n\r\n    const { count: promotionVehicles } = await supabase\r\n      .from('vehicles')\r\n      .select('*', { count: 'exact', head: true })\r\n      .eq('is_promotion', true);\r\n\r\n    // Obtener total de vistas\r\n    const { data: viewsData } = await supabase\r\n      .from('vehicles')\r\n      .select('views');\r\n\r\n    const totalViews = viewsData?.reduce((sum, vehicle) => sum + (vehicle.views || 0), 0) || 0;\r\n\r\n    return {\r\n      totalVehicles: totalVehicles || 0,\r\n      totalViews,\r\n      featuredVehicles: featuredVehicles || 0,\r\n      promotionVehicles: promotionVehicles || 0\r\n    };\r\n  }\r\n};"],"mappings":"AAAA;AACA,SAASA,QAAQ,QAAQ,oBAAoB;;AAE7C;AACA,OAAO,MAAMC,WAAW,GAAG;EACzB;EACA,MAAMC,MAAMA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,WAAW,EAAE;IACzC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAACN,MAAM,CAAC;MACjDC,KAAK;MACLC,QAAQ;MACRK,OAAO,EAAE;QACPH,IAAI,EAAE;UACJI,YAAY,EAAEL;QAChB;MACF;IACF,CAAC,CAAC;IAEF,IAAIE,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOD,IAAI;EACb,CAAC;EAED;EACA,MAAMK,MAAMA,CAACR,KAAK,EAAEC,QAAQ,EAAE;IAC5B,MAAM;MAAEE,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAACI,kBAAkB,CAAC;MAC7DT,KAAK;MACLC;IACF,CAAC,CAAC;IAEF,IAAIG,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOD,IAAI;EACb,CAAC;EAED;EACA,MAAMO,OAAOA,CAAA,EAAG;IACd,MAAM;MAAEN;IAAM,CAAC,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAACK,OAAO,CAAC,CAAC;IAC/C,IAAIN,KAAK,EAAE,MAAMA,KAAK;EACxB,CAAC;EAED;EACA,MAAMO,UAAUA,CAAA,EAAG;IACjB,MAAM;MAAER,IAAI,EAAE;QAAES;MAAQ;IAAE,CAAC,GAAG,MAAMf,QAAQ,CAACQ,IAAI,CAACM,UAAU,CAAC,CAAC;IAC9D,OAAOC,OAAO;EAChB,CAAC;EAED;EACA,MAAMC,cAAcA,CAACC,MAAM,EAAE;IAC3B,MAAM;MAAEX,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CACnCkB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,IAAI,EAAEH,MAAM,CAAC,CAChBI,MAAM,CAAC,CAAC;IAEX,IAAId,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOD,IAAI;EACb,CAAC;EAED;EACAgB,iBAAiBA,CAACC,QAAQ,EAAE;IAC1B,OAAOvB,QAAQ,CAACQ,IAAI,CAACc,iBAAiB,CAACC,QAAQ,CAAC;EAClD,CAAC;EAED;EACA,MAAMC,aAAaA,CAACrB,KAAK,EAAE;IACzB,MAAM;MAAEI;IAAM,CAAC,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAACiB,qBAAqB,CAACtB,KAAK,CAAC;IAClE,IAAII,KAAK,EAAE,MAAMA,KAAK;EACxB;AACF,CAAC;;AAED;AACA,OAAO,MAAMmB,cAAc,GAAG;EAC5B;EACA,MAAMC,WAAWA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC9BC,OAAO,CAACC,GAAG,CAAC,gDAAgD,EAAEF,OAAO,CAAC;;IAEtE;IACA,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAChD,MAAM;QAAExB,IAAI,EAAEyB,QAAQ;QAAExB,KAAK,EAAEyB;MAAU,CAAC,GAAG,MAAMhC,QAAQ,CACxDkB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,UAAU,CAAC,CAClBc,KAAK,CAAC,CAAC,CAAC;MACXJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE;QAAEC,QAAQ;QAAEC;MAAU,CAAC,CAAC;IAC5D,CAAC,CAAC,OAAOE,OAAO,EAAE;MAChBL,OAAO,CAACtB,KAAK,CAAC,gBAAgB,EAAE2B,OAAO,CAAC;IAC1C;IAEA,IAAIC,KAAK,GAAGnC,QAAQ,CAACkB,IAAI,CAAC,UAAU,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC;;IAEjD;IACA,IAAIS,OAAO,CAACQ,KAAK,EAAE;MACjBD,KAAK,GAAGA,KAAK,CAACE,KAAK,CAAC,OAAO,EAAE,IAAIT,OAAO,CAACQ,KAAK,GAAG,CAAC;IACpD;IACA,IAAIR,OAAO,CAACU,KAAK,EAAE;MACjBH,KAAK,GAAGA,KAAK,CAACE,KAAK,CAAC,OAAO,EAAE,IAAIT,OAAO,CAACU,KAAK,GAAG,CAAC;IACpD;IACA,IAAIV,OAAO,CAACW,IAAI,EAAE;MAChBJ,KAAK,GAAGA,KAAK,CAACf,EAAE,CAAC,MAAM,EAAEQ,OAAO,CAACW,IAAI,CAAC;IACxC;IACA,IAAIX,OAAO,CAACY,SAAS,EAAE;MACrBL,KAAK,GAAGA,KAAK,CAACf,EAAE,CAAC,WAAW,EAAEQ,OAAO,CAACY,SAAS,CAAC;IAClD;IACA,IAAIZ,OAAO,CAACa,YAAY,EAAE;MACxBN,KAAK,GAAGA,KAAK,CAACf,EAAE,CAAC,cAAc,EAAEQ,OAAO,CAACa,YAAY,CAAC;IACxD;IACA,IAAIb,OAAO,CAACc,QAAQ,EAAE;MACpBP,KAAK,GAAGA,KAAK,CAACf,EAAE,CAAC,WAAW,EAAEQ,OAAO,CAACc,QAAQ,CAAC;IACjD;IACA,IAAId,OAAO,CAACe,QAAQ,EAAE;MACpBR,KAAK,GAAGA,KAAK,CAACS,GAAG,CAAC,OAAO,EAAEhB,OAAO,CAACe,QAAQ,CAAC;IAC9C;IACA,IAAIf,OAAO,CAACiB,QAAQ,EAAE;MACpBV,KAAK,GAAGA,KAAK,CAACW,GAAG,CAAC,OAAO,EAAElB,OAAO,CAACiB,QAAQ,CAAC;IAC9C;IACA,IAAIjB,OAAO,CAACmB,OAAO,EAAE;MACnBZ,KAAK,GAAGA,KAAK,CAACS,GAAG,CAAC,MAAM,EAAEhB,OAAO,CAACmB,OAAO,CAAC;IAC5C;IACA,IAAInB,OAAO,CAACoB,OAAO,EAAE;MACnBb,KAAK,GAAGA,KAAK,CAACW,GAAG,CAAC,MAAM,EAAElB,OAAO,CAACoB,OAAO,CAAC;IAC5C;;IAEA;IACA,IAAIpB,OAAO,CAACqB,MAAM,EAAE;MAClB,MAAMC,SAAS,GAAGtB,OAAO,CAACuB,SAAS,KAAK,MAAM,GAAG,KAAK,GAAG,IAAI;MAC7DhB,KAAK,GAAGA,KAAK,CAACiB,KAAK,CAACxB,OAAO,CAACqB,MAAM,EAAE;QAAEI,SAAS,EAAEH;MAAU,CAAC,CAAC;IAC/D,CAAC,MAAM;MACLf,KAAK,GAAGA,KAAK,CAACiB,KAAK,CAAC,YAAY,EAAE;QAAEC,SAAS,EAAE;MAAM,CAAC,CAAC;IACzD;;IAEA;IACA,IAAIzB,OAAO,CAACK,KAAK,EAAE;MACjBE,KAAK,GAAGA,KAAK,CAACF,KAAK,CAACL,OAAO,CAACK,KAAK,CAAC;IACpC;IAEAJ,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;;IAEhD;IACA,MAAMwB,cAAc,GAAG,IAAIC,OAAO,CAAC,CAACC,CAAC,EAAEC,MAAM,KAAK;MAChDC,UAAU,CAAC,MAAMD,MAAM,CAAC,IAAIE,KAAK,CAAC,yCAAyC,CAAC,CAAC,EAAE,KAAK,CAAC;IACvF,CAAC,CAAC;IAEF,IAAI;MACF,MAAM;QAAErD,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAMgD,OAAO,CAACK,IAAI,CAAC,CAACzB,KAAK,EAAEmB,cAAc,CAAC,CAAC;MAEnEzB,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;MACjDD,OAAO,CAACC,GAAG,CAAC,SAAS,EAAExB,IAAI,CAAC;MAC5BuB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEvB,KAAK,CAAC;MAC9BsB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,OAAOxB,IAAI,CAAC;MACxCuB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAExB,IAAI,KAAK,IAAI,CAAC;MAC7CuB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE+B,KAAK,CAACC,OAAO,CAACxD,IAAI,CAAC,CAAC;MAEpD,IAAIC,KAAK,EAAE;QACTsB,OAAO,CAACtB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD,MAAMA,KAAK;MACb;MAEAsB,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAExB,IAAI,CAAC;MACnDuB,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAE,CAAAxB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEyD,MAAM,KAAI,CAAC,CAAC;MACrE,OAAOzD,IAAI,IAAI,EAAE;IACnB,CAAC,CAAC,OAAO0D,YAAY,EAAE;MACrBnC,OAAO,CAACtB,KAAK,CAAC,8BAA8B,EAAEyD,YAAY,CAAC;MAC3D;MACA,OAAO,CACL;QACEC,EAAE,EAAE,GAAG;QACP7B,KAAK,EAAE,QAAQ;QACfE,KAAK,EAAE,SAAS;QAChB4B,IAAI,EAAE,IAAI;QACVC,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE,KAAK;QACZC,SAAS,EAAE,QAAQ;QACnB7B,SAAS,EAAE,KAAK;QAChBC,YAAY,EAAE,WAAW;QACzB6B,SAAS,EAAE,UAAU;QACrBC,KAAK,EAAE,QAAQ;QACfhC,IAAI,EAAE,OAAO;QACbiC,QAAQ,EAAE,cAAc;QACxBC,MAAM,EAAE,MAAM;QACdC,KAAK,EAAE,OAAO;QACdC,QAAQ,EAAE,CAAC,oBAAoB,EAAE,WAAW,EAAE,mBAAmB,CAAC;QAClEC,MAAM,EAAE,CAAC,iEAAiE,CAAC;QAC3EC,WAAW,EAAE,IAAI;QACjBC,YAAY,EAAE,KAAK;QACnBC,KAAK,EAAE,EAAE;QACTC,UAAU,EAAE;MACd,CAAC,CACF;IACH;EACF,CAAC;EAED;EACA,MAAMC,cAAcA,CAAChB,EAAE,EAAE;IACvB;IACA,MAAMjE,QAAQ,CAACkF,GAAG,CAAC,yBAAyB,EAAE;MAAEC,UAAU,EAAElB;IAAG,CAAC,CAAC;IAEjE,MAAM;MAAE3D,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CACnCkB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,IAAI,EAAE6C,EAAE,CAAC,CACZ5C,MAAM,CAAC,CAAC;IAEX,IAAId,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOD,IAAI;EACb,CAAC;EAED;EACA,MAAM8E,aAAaA,CAACC,WAAW,EAAE;IAC/B,MAAM;MAAE/E,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CACnCkB,IAAI,CAAC,UAAU,CAAC,CAChBoE,MAAM,CAAC,CAAC;MACPlD,KAAK,EAAEiD,WAAW,CAACjD,KAAK;MACxBE,KAAK,EAAE+C,WAAW,CAAC/C,KAAK;MACxB4B,IAAI,EAAEmB,WAAW,CAACnB,IAAI;MACtBC,UAAU,EAAEkB,WAAW,CAAClB,UAAU;MAClCC,KAAK,EAAEiB,WAAW,CAACjB,KAAK;MACxBC,SAAS,EAAEgB,WAAW,CAACE,QAAQ;MAC/B/C,SAAS,EAAE6C,WAAW,CAAC7C,SAAS;MAChCC,YAAY,EAAE4C,WAAW,CAAC5C,YAAY;MACtC6B,SAAS,EAAEe,WAAW,CAAC3C,QAAQ;MAC/B6B,KAAK,EAAEc,WAAW,CAACd,KAAK;MACxBhC,IAAI,EAAE8C,WAAW,CAAC9C,IAAI;MACtBiC,QAAQ,EAAEa,WAAW,CAACb,QAAQ;MAC9BC,MAAM,EAAEY,WAAW,CAACZ,MAAM;MAC1BC,KAAK,EAAEW,WAAW,CAACX,KAAK;MACxBC,QAAQ,EAAEU,WAAW,CAACV,QAAQ,IAAI,EAAE;MACpCC,MAAM,EAAES,WAAW,CAACT,MAAM,IAAI,EAAE;MAChCC,WAAW,EAAEQ,WAAW,CAACG,UAAU,IAAI,KAAK;MAC5CV,YAAY,EAAEO,WAAW,CAACI,WAAW,IAAI;IAC3C,CAAC,CAAC,CAAC,CACFtE,MAAM,CAAC,CAAC,CACRE,MAAM,CAAC,CAAC;IAEX,IAAId,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOD,IAAI;EACb,CAAC;EAED;EACA,MAAMoF,aAAaA,CAACzB,EAAE,EAAEoB,WAAW,EAAE;IACnC,MAAM;MAAE/E,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CACnCkB,IAAI,CAAC,UAAU,CAAC,CAChByE,MAAM,CAAC;MACNvD,KAAK,EAAEiD,WAAW,CAACjD,KAAK;MACxBE,KAAK,EAAE+C,WAAW,CAAC/C,KAAK;MACxB4B,IAAI,EAAEmB,WAAW,CAACnB,IAAI;MACtBC,UAAU,EAAEkB,WAAW,CAAClB,UAAU;MAClCC,KAAK,EAAEiB,WAAW,CAACjB,KAAK;MACxBC,SAAS,EAAEgB,WAAW,CAACE,QAAQ;MAC/B/C,SAAS,EAAE6C,WAAW,CAAC7C,SAAS;MAChCC,YAAY,EAAE4C,WAAW,CAAC5C,YAAY;MACtC6B,SAAS,EAAEe,WAAW,CAAC3C,QAAQ;MAC/B6B,KAAK,EAAEc,WAAW,CAACd,KAAK;MACxBhC,IAAI,EAAE8C,WAAW,CAAC9C,IAAI;MACtBiC,QAAQ,EAAEa,WAAW,CAACb,QAAQ;MAC9BC,MAAM,EAAEY,WAAW,CAACZ,MAAM;MAC1BC,KAAK,EAAEW,WAAW,CAACX,KAAK;MACxBC,QAAQ,EAAEU,WAAW,CAACV,QAAQ;MAC9BC,MAAM,EAAES,WAAW,CAACT,MAAM;MAC1BC,WAAW,EAAEQ,WAAW,CAACG,UAAU;MACnCV,YAAY,EAAEO,WAAW,CAACI;IAC5B,CAAC,CAAC,CACDrE,EAAE,CAAC,IAAI,EAAE6C,EAAE,CAAC,CACZ9C,MAAM,CAAC,CAAC,CACRE,MAAM,CAAC,CAAC;IAEX,IAAId,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOD,IAAI;EACb,CAAC;EAED;EACA,MAAMsF,aAAaA,CAAC3B,EAAE,EAAE;IACtB,MAAM;MAAE1D;IAAM,CAAC,GAAG,MAAMP,QAAQ,CAC7BkB,IAAI,CAAC,UAAU,CAAC,CAChB2E,MAAM,CAAC,CAAC,CACRzE,EAAE,CAAC,IAAI,EAAE6C,EAAE,CAAC;IAEf,IAAI1D,KAAK,EAAE,MAAMA,KAAK;EACxB,CAAC;EAED;EACA,MAAMuF,mBAAmBA,CAAC7D,KAAK,GAAG,CAAC,EAAE;IACnC,MAAM;MAAE3B,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CACnCkB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,CACvBgC,KAAK,CAAC,YAAY,EAAE;MAAEC,SAAS,EAAE;IAAM,CAAC,CAAC,CACzCpB,KAAK,CAACA,KAAK,CAAC;IAEf,IAAI1B,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOD,IAAI;EACb,CAAC;EAED;EACA,MAAMyF,oBAAoBA,CAAC9D,KAAK,GAAG,CAAC,EAAE;IACpC,MAAM;MAAE3B,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CACnCkB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC,CACxBgC,KAAK,CAAC,YAAY,EAAE;MAAEC,SAAS,EAAE;IAAM,CAAC,CAAC,CACzCpB,KAAK,CAACA,KAAK,CAAC;IAEf,IAAI1B,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOD,IAAI;EACb,CAAC;EAED;EACA,MAAM0F,kBAAkBA,CAACC,cAAc,EAAEhE,KAAK,GAAG,CAAC,EAAE;IAClD,MAAM;MAAE3B,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CACnCkB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACX+E,GAAG,CAAC,IAAI,EAAED,cAAc,CAAChC,EAAE,CAAC,CAC5BkC,EAAE,CAAC,YAAYF,cAAc,CAAC7D,KAAK,YAAY6D,cAAc,CAAC1D,IAAI,EAAE,CAAC,CACrEa,KAAK,CAAC,YAAY,EAAE;MAAEC,SAAS,EAAE;IAAM,CAAC,CAAC,CACzCpB,KAAK,CAACA,KAAK,CAAC;IAEf,IAAI1B,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOD,IAAI;EACb,CAAC;EAED;EACA,MAAM8F,kBAAkBA,CAACC,IAAI,EAAEC,SAAS,EAAEC,UAAU,EAAE;IACpD,MAAMC,OAAO,GAAGH,IAAI,CAACI,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;IAC1C,MAAMC,QAAQ,GAAG,GAAGN,SAAS,IAAIC,UAAU,IAAIC,OAAO,EAAE;IACxD,MAAMK,QAAQ,GAAG,YAAYD,QAAQ,EAAE;IAEvC,MAAM;MAAEtG,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,QAAQ,CAAC8G,OAAO,CAC3C5F,IAAI,CAAC,gBAAgB,CAAC,CACtB6F,MAAM,CAACF,QAAQ,EAAER,IAAI,CAAC;IAEzB,IAAI9F,KAAK,EAAE,MAAMA,KAAK;;IAEtB;IACA,MAAM;MAAED,IAAI,EAAE;QAAE0G;MAAU;IAAE,CAAC,GAAGhH,QAAQ,CAAC8G,OAAO,CAC7C5F,IAAI,CAAC,gBAAgB,CAAC,CACtB+F,YAAY,CAACJ,QAAQ,CAAC;IAEzB,OAAOG,SAAS;EAClB;AACF,CAAC;;AAED;AACA,OAAO,MAAME,iBAAiB,GAAG;EAC/B,MAAMC,aAAaA,CAAA,EAAG;IACpB;IACA,MAAM;MAAEC,KAAK,EAAEC;IAAc,CAAC,GAAG,MAAMrH,QAAQ,CAC5CkB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,EAAE;MAAEiG,KAAK,EAAE,OAAO;MAAEE,IAAI,EAAE;IAAK,CAAC,CAAC;;IAE9C;IACA,MAAM;MAAEF,KAAK,EAAEG;IAAiB,CAAC,GAAG,MAAMvH,QAAQ,CAC/CkB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,EAAE;MAAEiG,KAAK,EAAE,OAAO;MAAEE,IAAI,EAAE;IAAK,CAAC,CAAC,CAC3ClG,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC;;IAE1B;IACA,MAAM;MAAEgG,KAAK,EAAEI;IAAkB,CAAC,GAAG,MAAMxH,QAAQ,CAChDkB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,EAAE;MAAEiG,KAAK,EAAE,OAAO;MAAEE,IAAI,EAAE;IAAK,CAAC,CAAC,CAC3ClG,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC;;IAE3B;IACA,MAAM;MAAEd,IAAI,EAAEmH;IAAU,CAAC,GAAG,MAAMzH,QAAQ,CACvCkB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,OAAO,CAAC;IAElB,MAAMuG,UAAU,GAAG,CAAAD,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEE,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAKD,GAAG,IAAIC,OAAO,CAAC9C,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,KAAI,CAAC;IAE1F,OAAO;MACLsC,aAAa,EAAEA,aAAa,IAAI,CAAC;MACjCK,UAAU;MACVH,gBAAgB,EAAEA,gBAAgB,IAAI,CAAC;MACvCC,iBAAiB,EAAEA,iBAAiB,IAAI;IAC1C,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}